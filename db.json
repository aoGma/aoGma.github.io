{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/default.styl","path":"css/default.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/favicon.svg","path":"img/favicon.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/logo.svg","path":"img/logo.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/og_image.png","path":"img/og_image.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/column.js","path":"js/column.js","modified":1,"renderable":1},{"_id":"source/img/alipay-receive.jpg","path":"img/alipay-receive.jpg","modified":1,"renderable":0},{"_id":"source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":0},{"_id":"source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":0},{"_id":"source/img/wechat-receive.jpg","path":"img/wechat-receive.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/commitlint-and-commitizen-configuration.md","hash":"edab2a641fc6d434b428984340550fd365dee602","modified":1706853531761},{"_id":"source/_posts/docker-container-migration.md","hash":"5bde04e3878cdcbde6cd7c215bb49f764f0f1aec","modified":1706841826814},{"_id":"source/_posts/javascript-element-scrolls-to-bottom.md","hash":"da2ef1b603a3029e3f2142c7d14a1d2811e382f1","modified":1706845056707},{"_id":"source/_posts/hexo-timezone-issue-fix.md","hash":"6ea1bd0b725a2d9adc3fce48661c7e8bae9b6610","modified":1706853452068},{"_id":"source/_posts/macos-docker-mysql8.md","hash":"a4eed8c5647db04e067d100601b37c347bf162bf","modified":1706845049706},{"_id":"source/_posts/linux-soft-hard-link.md","hash":"f979f7e7e6907136bbbf5a9eadc4fa3b7c195780","modified":1706841895258},{"_id":"source/_posts/macos-docker-redis.md","hash":"ad19f72c55c4139531a539083d043d6374ff35a4","modified":1706841942497},{"_id":"source/_posts/pi-install-emby.md","hash":"ea0fdfc39c9894f488059c39846c38ba309435fb","modified":1706841962227},{"_id":"source/_posts/pi-install-lskypro.md","hash":"5efa2b3b3d73ceb89a5e0ff6ff493e18d40e4ab4","modified":1706841975182},{"_id":"source/_posts/pi-install-mariadb.md","hash":"9e51cf275209f5cab1765094a6ff42537b9f2177","modified":1706841982790},{"_id":"source/_posts/pi-install-stash.md","hash":"6786d441efc367a68e9c5897fe13192506c92d45","modified":1706841989203},{"_id":"source/_posts/pi-install-valutwarden.md","hash":"ea15dc3097d28540f5fcb5fff42a835383c58142","modified":1706841996805},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port.md","hash":"e4df8d04282c83dbce7158742d65e35c4684f3b7","modified":1706845016981},{"_id":"source/_posts/ubuntu-install-frp.md","hash":"d081930af99fea0245e8d964a4dcc66193f6d967","modified":1706842036633},{"_id":"source/_posts/ubuntu-install-docker-dockercompose.md","hash":"46656f72eb70d21a512552cac0d3f610132dd48f","modified":1706842021829},{"_id":"source/_posts/ubuntu-mv-cp-status.md","hash":"3135f17a290eb29894a62d4d23a4ba26376df9d9","modified":1706842049512},{"_id":"source/_posts/ubuntu-server-install-init.md","hash":"f734816bce314400d98da7576653fdd6c50dfd2b","modified":1706844988121},{"_id":"source/_posts/ubuntu-time-zone.md","hash":"e47ad8ece4eb3ccd55721d58bd8ac32c147432c7","modified":1706844977272},{"_id":"source/about/index.md","hash":"251551a2e3621f2cf8ebc325f8c869a9398a0dbb","modified":1706834570308},{"_id":"source/works/index.md","hash":"e84a83ba182015f0ed9cc50daddbea342969f3cd","modified":1706834570309},{"_id":"source/img/avatar.png","hash":"bf9b9a74cec52c34709486fcfe39e0485a555779","modified":1706840861511},{"_id":"source/img/favicon.ico","hash":"954f09cc6c93c6a3f9fc9348b53a224a26ff70b9","modified":1706838138268},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/warp-yxip.sh","hash":"f03e594c9b733712ea65d2335a92d04215742348","modified":1706834570367},{"_id":"source/_posts/ubuntu-time-zone/655dee6edb536.png","hash":"0595f6f415afc0bb6a0ad1160927ca2991dbb71c","modified":1706834570375},{"_id":"source/_posts/ubuntu-server-install-init/655c63e9bcb76.png","hash":"456b7e931c2c96b430a67bae5576c95a9916c114","modified":1706838475219},{"_id":"source/_posts/ubuntu-time-zone/655dee9f3d7df.png","hash":"574e2818690ff94ca8449ac370d154a214d994ed","modified":1706834570379},{"_id":"source/img/wechat-receive.jpg","hash":"b9f12e3eaa782aa16d6b17ebe8bb4aa1f91ef1f7","modified":1706844528462},{"_id":"source/_posts/macos-docker-mysql8/6556341408363.png","hash":"03ab30f9400b45a860d6ce090e355ea8ec821e57","modified":1706834570329},{"_id":"themes/icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221221},{"_id":"themes/icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221221},{"_id":"themes/icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221221},{"_id":"themes/icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221221},{"_id":"themes/icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221221},{"_id":"themes/icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221204},{"_id":"themes/icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221205},{"_id":"themes/icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221205},{"_id":"themes/icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221205},{"_id":"themes/icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1706855221205},{"_id":"source/_posts/javascript-element-scrolls-to-bottom/65581379c3845.png","hash":"f719eaaa3f7a24e17259f9585d834d887045aaeb","modified":1706834570313},{"_id":"source/_posts/ubuntu-time-zone/655dee1461a02.png","hash":"3e24f5cdaecab00bf99d1aa3a51a6497f2c0fd2d","modified":1706834570375},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/655df1d56c1df.png","hash":"464d979feb7a49472f06bfb3c597a6fc260110ce","modified":1706834570353},{"_id":"themes/icarus/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1706855221191},{"_id":"themes/icarus/.eslintrc.json","hash":"ac4fa295cc2280645ed2926a4dab9173db3a27d6","modified":1706855221191},{"_id":"themes/icarus/package.json","hash":"41a6cadd79e2385d268a862b81d99d5002756a85","modified":1706855221221},{"_id":"themes/icarus/.gitignore","hash":"8ecd21ae1f2cdc3cf59b71a526564252c93b84df","modified":1706855221199},{"_id":"themes/icarus/CONTRIBUTING.md","hash":"c5086f94020aa58e2a7d131806e0cf15e7b54854","modified":1706855221199},{"_id":"themes/icarus/LICENSE","hash":"bb9d587dd8b9073462ae10daf252ea3092a81b1b","modified":1706855221200},{"_id":"themes/icarus/.npmignore","hash":"d74a0ff68575737125d92e78963c35c9aa3b5cd9","modified":1706855221199},{"_id":"themes/icarus/include/config.js","hash":"e78a30467176c9826c880250e499a69bfa55903b","modified":1706855221201},{"_id":"themes/icarus/.github/dependabot.yml","hash":"8f1616c9b9b64bf8ae97a6d4a81fb90395b4f615","modified":1706855221196},{"_id":"themes/icarus/include/dependency.js","hash":"cfccb1014254cb06875b191658d6a46d46df9709","modified":1706855221201},{"_id":"themes/icarus/include/register.js","hash":"d31479fc8c8b65c3252e46b9510ec07f2c991314","modified":1706855221203},{"_id":"themes/icarus/README.md","hash":"f3ed15651b630370a4a6a749aab718f18db02bbf","modified":1706855221200},{"_id":"themes/icarus/.github/stale.yml","hash":"f47eb96b67100505b27777efbafd3804c4af0e26","modified":1706855221197},{"_id":"themes/icarus/layout/archive.jsx","hash":"da9e188375bbd8b19a28e54920f5b078065009af","modified":1706855221221},{"_id":"themes/icarus/layout/category.jsx","hash":"16c8cf03fd976d839242dcf9240ccaf59b843daa","modified":1706855221221},{"_id":"themes/icarus/layout/categories.jsx","hash":"50d81072a5b5508a906b2c96289982d081a59edd","modified":1706855221221},{"_id":"themes/icarus/layout/index.jsx","hash":"c2e7008020c4358f491c8e2ad871aa2274a427d0","modified":1706855221221},{"_id":"themes/icarus/layout/page.jsx","hash":"8a3cce132f7a4d52450cdcada54afeb5465fdc8d","modified":1706855221221},{"_id":"themes/icarus/layout/post.jsx","hash":"8a3cce132f7a4d52450cdcada54afeb5465fdc8d","modified":1706855221221},{"_id":"themes/icarus/layout/tag.jsx","hash":"49c04b040ba0ff138ad36d6478bd76e18edc8085","modified":1706855221221},{"_id":"themes/icarus/languages/de.yml","hash":"b63e162471ecce52d4f429f4bdeec6e34abe0d1e","modified":1706855221205},{"_id":"themes/icarus/layout/layout.jsx","hash":"c5dbc189ba84e7da16b062084c6de2266c576cd1","modified":1706855221221},{"_id":"themes/icarus/layout/tags.jsx","hash":"5bd27a87fc6e456beb3e56e1dcdbd1f7ac010ce1","modified":1706855221221},{"_id":"themes/icarus/languages/en.yml","hash":"30c7f76da0e76aaa1d67149bd6ff0686c6f62618","modified":1706855221205},{"_id":"themes/icarus/languages/es.yml","hash":"218050f931f5cbc54507dadb3d9d78123bc7a114","modified":1706855221205},{"_id":"themes/icarus/languages/fr.yml","hash":"9cecc684ef8c3c5037c228c9769d4fe8c98fe06b","modified":1706855221205},{"_id":"themes/icarus/languages/it.yml","hash":"c0dd5e7f59a71327a63824c342427785623d7644","modified":1706855221205},{"_id":"themes/icarus/languages/pl.yml","hash":"7f7dd9693eff26fca94970055c66a11732d2ff6d","modified":1706855221205},{"_id":"themes/icarus/languages/ja.yml","hash":"c057ed106686484b610955911528698cf3e1c5cb","modified":1706855221205},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"cbb50c0f957c620dc3312181416f4d95136bf70f","modified":1706855221205},{"_id":"themes/icarus/languages/ko.yml","hash":"099b7bf9ea1deda3dd89436e40d17e61f44abe18","modified":1706855221205},{"_id":"themes/icarus/languages/tr.yml","hash":"508090a5140c854d991d25b2de3859cb4c5dc98d","modified":1706855221205},{"_id":"themes/icarus/languages/ru.yml","hash":"0dd2a3121f21fed318a707bd443c449016c64ee9","modified":1706855221205},{"_id":"themes/icarus/languages/tk.yml","hash":"3d7a91ab47d69bfbe06ae8cdd44a01cc5bcdcefd","modified":1706855221205},{"_id":"themes/icarus/languages/vn.yml","hash":"6b0443202e7ad34a9518f52e087021924c3082ef","modified":1706855221205},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"48ae4765804b66b3e3f4951f5d2f3cc7a8ae5bfb","modified":1706855221221},{"_id":"themes/icarus/languages/sv.yml","hash":"c4ddf40abdbe6bd8743d60976af7b5df31485117","modified":1706855221205},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"4d10ef78f64e8de8ce1919c31f823a72b1198088","modified":1706855221221},{"_id":"themes/icarus/languages/id.yml","hash":"140b8473ea15e3d6bd0cbf25730946f7395bcfd0","modified":1706855221205},{"_id":"themes/icarus/scripts/index.js","hash":"6156ee1e29064e851aeef66305302103a379cae3","modified":1706855221221},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/功能建议.md","hash":"144eb57d0e0d9121eb872195af5a42c8a6bbe9eb","modified":1706855221195},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/feature_request.md","hash":"4c5fea047359feddc80f62d24b3cab284a8440fc","modified":1706855221194},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/config.yml","hash":"ecebfe01aada9cd6f9d5b499708fc4e62f6bad0b","modified":1706855221193},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/Bug反馈.md","hash":"731f8d045054616766652a8e9e850891e72113fc","modified":1706855221192},{"_id":"themes/icarus/.github/workflows/lint.yml","hash":"d7f4859387f7e4478e922b4989631625b22942c1","modified":1706855221198},{"_id":"themes/icarus/.github/workflows/github-release.yml","hash":"852abf46cb865a7f700e1bfef62273c62746a6bb","modified":1706855221197},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/bug_report.md","hash":"ad16cb8d9f4d263120eec29ecd9336ac05ff13e9","modified":1706855221193},{"_id":"themes/icarus/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"490a3717d4d18ddccb90f1fd14acf8b2fbb300dc","modified":1706855221196},{"_id":"themes/icarus/include/migration/head.js","hash":"9dc06fb9f1c8dfb93a0dc6aa695e68bd5745cdbe","modified":1706855221202},{"_id":"themes/icarus/.github/workflows/npm-publish.yml","hash":"80c216bb661b30810a276d8a6d5dedc7e85ca8cc","modified":1706855221198},{"_id":"themes/icarus/include/migration/v3_v4.js","hash":"3eae4e9a217512505bf926d4c6ab7e3a445a9008","modified":1706855221202},{"_id":"themes/icarus/.github/workflows/test.yml","hash":"d8116c8428d922a21e31b59ec082b4825d0d9492","modified":1706855221198},{"_id":"themes/icarus/include/migration/v5_v5.1.js","hash":"0e3679f4b18b6a439fc69432f7a582b41b6c21c3","modified":1706855221203},{"_id":"themes/icarus/include/schema/config.json","hash":"0808c015e764168347f822e318c9d28d985543eb","modified":1706855221205},{"_id":"themes/icarus/include/migration/v2_v3.js","hash":"9426e6bc533d7c7ce6469f0e9af3116d16f8ebe5","modified":1706855221202},{"_id":"themes/icarus/include/migration/v4_v5.js","hash":"0294a0e38f63e9e0e23cdd6a326f45109ec6d111","modified":1706855221203},{"_id":"themes/icarus/include/style/button.styl","hash":"f9e52370ee7801b35682d76071f98f7ce6126231","modified":1706855221205},{"_id":"themes/icarus/include/style/article.styl","hash":"02eeb21438fefb53ce1f55642c3f5f7d4923911f","modified":1706855221205},{"_id":"themes/icarus/include/style/card.styl","hash":"6feb59420aa2fd67e52dd5b917623dc2fcb75bda","modified":1706855221205},{"_id":"themes/icarus/include/style/donate.styl","hash":"9f8e5cc0bec3e4452b900fafe0975d41e311a076","modified":1706855221205},{"_id":"themes/icarus/include/style/base.styl","hash":"0d9cf52474d206dcbf17be1c4cf78ba75f5e98a6","modified":1706855221205},{"_id":"themes/icarus/include/style/codeblock.styl","hash":"f364a88a0ca1550a61cbbe588459f87c2652b5e0","modified":1706855221205},{"_id":"themes/icarus/include/style/footer.styl","hash":"d90d5137f29841ca4dc48c62e344bebe0cd7aa76","modified":1706855221205},{"_id":"themes/icarus/include/style/navbar.styl","hash":"30b948a8e425b5c36aaa6ffdcc13c5fa1fffd739","modified":1706855221205},{"_id":"themes/icarus/include/style/helper.styl","hash":"4519470a51ebce65d2a0f2682d66b509d321e7ca","modified":1706855221205},{"_id":"themes/icarus/include/style/pagination.styl","hash":"b2addeb9b0bcf46f157d2742012ad647c1bca090","modified":1706855221205},{"_id":"themes/icarus/include/style/plugin.styl","hash":"06d8a505b0615d8e5df173cb3e00d45bc0b976e2","modified":1706855221205},{"_id":"themes/icarus/include/style/timeline.styl","hash":"0f15f648821abe412e2105e157c9810bb4834aa4","modified":1706855221205},{"_id":"themes/icarus/include/util/console.js","hash":"9bd6d4691b56012ea17146db577e27ae20e0c335","modified":1706855221205},{"_id":"themes/icarus/include/style/widget.styl","hash":"2d6cfac39d66391c65facb26f0965e528c12007e","modified":1706855221205},{"_id":"themes/icarus/include/style/search.styl","hash":"ff947d107b57b5d8865680be1301f6c49abcc3e1","modified":1706855221205},{"_id":"themes/icarus/layout/common/comment.jsx","hash":"0ab94bbc55bda6f3f284cbd208efa4ed8205481c","modified":1706855221221},{"_id":"themes/icarus/layout/common/article.jsx","hash":"78523e02f1d9c4aa2955132150495ea6a90c6240","modified":1706855221221},{"_id":"themes/icarus/include/style/responsive.styl","hash":"9a481311478b788851d437b82a934fcfce758f9f","modified":1706855221205},{"_id":"themes/icarus/layout/common/footer.jsx","hash":"7f687ced0d35015926375183dc38d47640a020f6","modified":1706855221221},{"_id":"themes/icarus/layout/common/donates.jsx","hash":"c026449e4bc757fbd9edb5b870d56f7b7a349497","modified":1706855221221},{"_id":"themes/icarus/layout/common/plugins.jsx","hash":"fedab3e147ae1ed2d730a559c29e72b2315db5c1","modified":1706855221221},{"_id":"themes/icarus/layout/common/scripts.jsx","hash":"6bbecd97cf9acb414604258a9a16a3252e5f34e6","modified":1706855221221},{"_id":"themes/icarus/layout/common/head.jsx","hash":"91088ee9e7d8a2d39f7ea7bce123fb2e64c2d0f2","modified":1706855221221},{"_id":"themes/icarus/layout/common/navbar.jsx","hash":"f387ff7de38d9fb72ea06eaa3bb5b6eef436e6cc","modified":1706855221221},{"_id":"themes/icarus/layout/common/search.jsx","hash":"82a0cf309dbe5257f30c95621dd4e6521b912cbc","modified":1706855221221},{"_id":"themes/icarus/layout/common/share.jsx","hash":"ed9aba6def6515df79b77e231f8620b0e209e30c","modified":1706855221221},{"_id":"themes/icarus/layout/common/widgets.jsx","hash":"c1e6882c13ee06477bb4b3e05dd0ad53de40744e","modified":1706855221221},{"_id":"themes/icarus/layout/plugin/back_to_top.jsx","hash":"2c29b2a62e07b700b98df18cf0c80d648059ad25","modified":1706855221221},{"_id":"themes/icarus/layout/plugin/animejs.jsx","hash":"bd2b9209051a03e5cb3bdf2c97e6c16d0d75cb8a","modified":1706855221221},{"_id":"themes/icarus/layout/widget/profile.jsx","hash":"424b006a2d774e6586c50d255edba289cb6282e1","modified":1706855221221},{"_id":"themes/icarus/source/css/cyberpunk.styl","hash":"ca393322f37c04fbc579399ea3eb80d8c2d87bae","modified":1706855221221},{"_id":"themes/icarus/source/css/style.styl","hash":"4494bd1e471afa42f2e97252e2d6ac5e640f47b0","modified":1706855221221},{"_id":"themes/icarus/source/img/favicon.svg","hash":"50322629b1947588ff7a6e59fb07cb1b5bfb9f8c","modified":1706855221221},{"_id":"themes/icarus/source/css/default.styl","hash":"b2d886eacd43ab395ae3221e92bc0a9d23eff3a0","modified":1706855221221},{"_id":"themes/icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1706855221221},{"_id":"themes/icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1706855221221},{"_id":"themes/icarus/source/img/logo.svg","hash":"f4a9aa50f9a732981ae79e3711a997fc7325a7db","modified":1706855221221},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1706855221221},{"_id":"themes/icarus/source/js/.eslintrc.json","hash":"45c9014e02fbc516e257484487b4e29ddb5743e1","modified":1706855221221},{"_id":"themes/icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1706855221221},{"_id":"themes/icarus/include/schema/common/donates.json","hash":"f0f0b093db47f21d12db8eb062aa98ff7d76ab5d","modified":1706855221205},{"_id":"themes/icarus/source/js/animation.js","hash":"54a894f060c04c390c75216d26227dc26cf22036","modified":1706855221237},{"_id":"themes/icarus/include/schema/common/article.json","hash":"949eb619353609af7876f7a349a0a84a08773b7f","modified":1706855221204},{"_id":"themes/icarus/include/schema/common/comment.json","hash":"2aa3683d5f8cc065296d2c8350b1c4dcc2a20d1c","modified":1706855221205},{"_id":"themes/icarus/include/schema/common/footer.json","hash":"9852820a8f803193d7b41c6d48c4a260c66ade50","modified":1706855221205},{"_id":"themes/icarus/include/schema/common/head.json","hash":"23949deaae0ee8e3906d0bdd1f08cfbe2af14754","modified":1706855221205},{"_id":"themes/icarus/include/schema/common/navbar.json","hash":"62d56f955da52430ae64623fbefc1053b4afcc85","modified":1706855221205},{"_id":"themes/icarus/include/schema/common/plugins.json","hash":"215663c13e0992f987f337271b9048d60194ed90","modified":1706855221205},{"_id":"themes/icarus/include/schema/common/providers.json","hash":"5453827e1c267c67102bc983c8d2313865aa64fd","modified":1706855221205},{"_id":"themes/icarus/include/schema/common/search.json","hash":"dd34241b3776bc9aed8ef815c67f2fa622d0984b","modified":1706855221205},{"_id":"themes/icarus/include/schema/common/share.json","hash":"da98300e9197fbc717082419652d54636fd118b9","modified":1706855221205},{"_id":"themes/icarus/include/schema/common/sidebar.json","hash":"5687b24e32bcff12ff7660ff5dc26d74f466a994","modified":1706855221205},{"_id":"themes/icarus/include/schema/common/widgets.json","hash":"9a1e31cfd667baf366ef6734959b8770c077e63d","modified":1706855221205},{"_id":"themes/icarus/include/schema/plugin/animejs.json","hash":"0b5c4a315c0d25f2b296eb44ed14a1d59ccb8613","modified":1706855221205},{"_id":"themes/icarus/include/schema/plugin/back_to_top.json","hash":"c8e0e97a61c3a02c9736f303c206dd406de95d9a","modified":1706855221205},{"_id":"themes/icarus/include/schema/widget/profile.json","hash":"994aff115d59827ad6f98d03adf55b1cf1245378","modified":1706855221205},{"_id":"themes/icarus/source/js/column.js","hash":"017a2e7c662e3e66ee96ba9b93ea54219b8035a3","modified":1706855221237},{"_id":"source/img/alipay-receive.jpg","hash":"59a9a905652f960f28bac266558c0a6dd5e6261f","modified":1706844524151},{"_id":"source/_posts/ubuntu-time-zone/655def839b174.png","hash":"2c4829d9d95d32b5bf28b25633609d1f211685f9","modified":1706834570383},{"_id":"source/_posts/macos-docker-mysql8/655633ee86ff7.png","hash":"d222a863224205043bb76325e060c43bdea9f2a1","modified":1706834570324},{"_id":"themes/icarus/source/js/back_to_top.js","hash":"142738e7b2b089ade64a6c753ba3fddef0818ecb","modified":1706855221237},{"_id":"themes/icarus/source/js/main.js","hash":"82505c4b249d9b83eb4128e1a43e7e527fb32c98","modified":1706855221237},{"_id":"source/_posts/macos-docker-mysql8/6556405f81268.png","hash":"56bdc49806c4a1e638e57b1d669686eea8547a45","modified":1706834570341},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/655e19260504a.png","hash":"12f3c36c8163c173f48237c5cea3a36afd68033e","modified":1706834570363}],"Category":[{"name":"javascript","_id":"cls49tfmd0004i0uxfp2xe7si"},{"name":"docker","_id":"cls49tfmi0009i0uxcwt28jxr"},{"name":"front-end","_id":"cls49tfml000fi0ux8cib1tlb"},{"name":"raspberry-pi","_id":"cls49tfmo000li0ux5z139k3u"},{"name":"linux","_id":"cls49tfmr000qi0uxhf3h5ier"},{"name":"macos","_id":"cls49tfmu000xi0ux8zx826ba"},{"name":"ubuntu","_id":"cls49tfn6001gi0ux7ft97hiv"},{"name":"docker","parent":"cls49tfmu000xi0ux8zx826ba","_id":"cls49tfnb001yi0uxels3bff3"},{"name":"hexo","_id":"cls49tfnb0022i0uxg8ij4ap4"},{"name":"docker","parent":"cls49tfn6001gi0ux7ft97hiv","_id":"cls49tfne002di0ux86g3281h"},{"name":"frp","parent":"cls49tfn6001gi0ux7ft97hiv","_id":"cls49tfnf002ii0ux3twr0mm4"}],"Data":[],"Page":[{"title":"About","date":"2024-02-01T15:17:30.000Z","_content":"## This is About page\n","source":"about/index.md","raw":"---\ntitle: About\ndate: 2024-02-01 23:17:30\n---\n## This is About page\n","updated":"2024-02-02T00:42:50.308Z","path":"about/index.html","comments":1,"layout":"page","_id":"cls49tfm70000i0ux2vwlftjn","content":"<h2 id=\"This-is-About-page\"><a href=\"#This-is-About-page\" class=\"headerlink\" title=\"This is About page\"></a>This is About page</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"This-is-About-page\"><a href=\"#This-is-About-page\" class=\"headerlink\" title=\"This is About page\"></a>This is About page</h2>"},{"title":"Works","date":"2024-02-01T15:18:29.000Z","_content":"## This is Works page\n","source":"works/index.md","raw":"---\ntitle: Works\ndate: 2024-02-01 23:18:29\n---\n## This is Works page\n","updated":"2024-02-02T00:42:50.309Z","path":"works/index.html","comments":1,"layout":"page","_id":"cls49tfmc0002i0ux4p2khnhe","content":"<h2 id=\"This-is-Works-page\"><a href=\"#This-is-Works-page\" class=\"headerlink\" title=\"This is Works page\"></a>This is Works page</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"This-is-Works-page\"><a href=\"#This-is-Works-page\" class=\"headerlink\" title=\"This is Works page\"></a>This is Works page</h2>"}],"Post":[{"title":"JavaScript 判断元素滚动到底部","date":"2024-02-01T16:00:12.000Z","_content":"## DOM元素的三个属性\n\n- scrollTop: 元素顶部到元素可视区域顶部的像素距离（可读写）\n- clientHeight: 元素的像素高度，包括盒子内容content和内边距padding, 不包括边框外边距和水平滚动条（只读）\n- scrollHeight: 类似于clientHeight，但包括由于overflow属性不可见内容的高度。\n\n<div class=\"justified-gallery\">\n\n![ScrollHeight](65581379c3845.png)\n\n</div>\n\n## 计算公式\n\n```javascript\nelement.scrollHeight - Math.abs(element.scrollTop) === element.clientHeight;\n```\n\n## 参考文章\n\n- [MDN scrollHeight](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight)\n- [掘金 scrollHeight](https://juejin.cn/post/6961638933121728520)\n","source":"_posts/javascript-element-scrolls-to-bottom.md","raw":"---\ntitle: JavaScript 判断元素滚动到底部\ndate: 2024-02-02 00:00:12\ncategories:\n- javascript\ntags:\n- dom\n---\n## DOM元素的三个属性\n\n- scrollTop: 元素顶部到元素可视区域顶部的像素距离（可读写）\n- clientHeight: 元素的像素高度，包括盒子内容content和内边距padding, 不包括边框外边距和水平滚动条（只读）\n- scrollHeight: 类似于clientHeight，但包括由于overflow属性不可见内容的高度。\n\n<div class=\"justified-gallery\">\n\n![ScrollHeight](65581379c3845.png)\n\n</div>\n\n## 计算公式\n\n```javascript\nelement.scrollHeight - Math.abs(element.scrollTop) === element.clientHeight;\n```\n\n## 参考文章\n\n- [MDN scrollHeight](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight)\n- [掘金 scrollHeight](https://juejin.cn/post/6961638933121728520)\n","slug":"javascript-element-scrolls-to-bottom","published":1,"updated":"2024-02-02T03:37:36.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfm90001i0ux1mpe09ta","content":"<h2 id=\"DOM元素的三个属性\"><a href=\"#DOM元素的三个属性\" class=\"headerlink\" title=\"DOM元素的三个属性\"></a>DOM元素的三个属性</h2><ul>\n<li>scrollTop: 元素顶部到元素可视区域顶部的像素距离（可读写）</li>\n<li>clientHeight: 元素的像素高度，包括盒子内容content和内边距padding, 不包括边框外边距和水平滚动条（只读）</li>\n<li>scrollHeight: 类似于clientHeight，但包括由于overflow属性不可见内容的高度。</li>\n</ul>\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/javascript-element-scrolls-to-bottom/65581379c3845.png\" alt=\"ScrollHeight\"></p>\n</div>\n\n<h2 id=\"计算公式\"><a href=\"#计算公式\" class=\"headerlink\" title=\"计算公式\"></a>计算公式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"property\">scrollHeight</span> - <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(element.<span class=\"property\">scrollTop</span>) === element.<span class=\"property\">clientHeight</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\">MDN scrollHeight</a></li>\n<li><a href=\"https://juejin.cn/post/6961638933121728520\">掘金 scrollHeight</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"DOM元素的三个属性\"><a href=\"#DOM元素的三个属性\" class=\"headerlink\" title=\"DOM元素的三个属性\"></a>DOM元素的三个属性</h2><ul>\n<li>scrollTop: 元素顶部到元素可视区域顶部的像素距离（可读写）</li>\n<li>clientHeight: 元素的像素高度，包括盒子内容content和内边距padding, 不包括边框外边距和水平滚动条（只读）</li>\n<li>scrollHeight: 类似于clientHeight，但包括由于overflow属性不可见内容的高度。</li>\n</ul>\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/javascript-element-scrolls-to-bottom/65581379c3845.png\" alt=\"ScrollHeight\"></p>\n</div>\n\n<h2 id=\"计算公式\"><a href=\"#计算公式\" class=\"headerlink\" title=\"计算公式\"></a>计算公式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.<span class=\"property\">scrollHeight</span> - <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(element.<span class=\"property\">scrollTop</span>) === element.<span class=\"property\">clientHeight</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\">MDN scrollHeight</a></li>\n<li><a href=\"https://juejin.cn/post/6961638933121728520\">掘金 scrollHeight</a></li>\n</ul>\n"},{"title":"Docker 已创建容器挂载目录迁移","date":"2023-10-21T13:27:30.000Z","_content":"## 停止容器\n\n```bash\ndocker stop container-id-1 container-id-2\n```\n\n### 停止docker服务\n\n```bash\nsudo systemctl stop docker\n```\n\n### 查看docker目录\n\n```bash\ndocker info | grep 'Root'\n# Docker Root Dir: /var/lib/docker\nsu root\ncd /var/lib/docker/containers\n```\n\n### 修改每个container中的config.v2.json文件\n\n```bash\n%s/home\\/ao/home\\/ao\\/docker-containers/g\n```\n","source":"_posts/docker-container-migration.md","raw":"---\ntitle: Docker 已创建容器挂载目录迁移\ndate: 2023-10-21 21:27:30\ncategories:\n- docker\ntag:\n- migration\n---\n## 停止容器\n\n```bash\ndocker stop container-id-1 container-id-2\n```\n\n### 停止docker服务\n\n```bash\nsudo systemctl stop docker\n```\n\n### 查看docker目录\n\n```bash\ndocker info | grep 'Root'\n# Docker Root Dir: /var/lib/docker\nsu root\ncd /var/lib/docker/containers\n```\n\n### 修改每个container中的config.v2.json文件\n\n```bash\n%s/home\\/ao/home\\/ao\\/docker-containers/g\n```\n","slug":"docker-container-migration","published":1,"updated":"2024-02-02T02:43:46.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmc0003i0uxb8vxeaht","content":"<h2 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop container-id-1 container-id-2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"停止docker服务\"><a href=\"#停止docker服务\" class=\"headerlink\" title=\"停止docker服务\"></a>停止docker服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl stop docker</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看docker目录\"><a href=\"#查看docker目录\" class=\"headerlink\" title=\"查看docker目录\"></a>查看docker目录</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info | grep <span class=\"string\">&#x27;Root&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># Docker Root Dir: /var/lib/docker</span></span><br><span class=\"line\">su root</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /var/lib/docker/containers</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改每个container中的config-v2-json文件\"><a href=\"#修改每个container中的config-v2-json文件\" class=\"headerlink\" title=\"修改每个container中的config.v2.json文件\"></a>修改每个container中的config.v2.json文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%s/home\\/ao/home\\/ao\\/docker-containers/g</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop container-id-1 container-id-2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"停止docker服务\"><a href=\"#停止docker服务\" class=\"headerlink\" title=\"停止docker服务\"></a>停止docker服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl stop docker</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看docker目录\"><a href=\"#查看docker目录\" class=\"headerlink\" title=\"查看docker目录\"></a>查看docker目录</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info | grep <span class=\"string\">&#x27;Root&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># Docker Root Dir: /var/lib/docker</span></span><br><span class=\"line\">su root</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /var/lib/docker/containers</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改每个container中的config-v2-json文件\"><a href=\"#修改每个container中的config-v2-json文件\" class=\"headerlink\" title=\"修改每个container中的config.v2.json文件\"></a>修改每个container中的config.v2.json文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%s/home\\/ao/home\\/ao\\/docker-containers/g</span><br></pre></td></tr></table></figure>\n"},{"title":"Commitlint 和 Commitizen 规范项目提交信息","date":"2024-02-01T15:57:09.000Z","_content":"## 1.配置husky\n>\n> To lint commits before they are created you can use Husky's commit-msg hook:\n\n```shell\n# Install Husky v6\nnpm install husky --save-dev\n# or\nyarn add husky --dev\n\n# Activate hooks\nnpx husky install\n# or\nyarn husky install\n\n# Add hook\n\nnpm pkg set scripts.commitlint=\"commitlint --edit\"\nnpx husky add .husky/commit-msg 'npm run commitlint ${1}'\n# .husky/commit-msg 文件会缺失 ${1} 手动补充一下\n# yarn commitlint ${1}\n```\n\n## 2.配置commitlint\n\n```shell\n# npm install --save-dev @commitlint/{config-conventional,cli}\n# 由于使用node16不满足node>=18的条件需要降级安装\nyarn add -D @commitlint/{config-conventional,cli}@16\n\n# Configure commitlint to use conventional config\necho \"module.exports = {extends: ['@commitlint/config-conventional']}\" > commitlint.config.js\n# format file\nprettier -w commitlint.config.js\n```\n\n## 3.配置commitizen\n\n```shell\nyarn add -D commitizen\nnpx commitizen init cz-conventional-changelog --save-dev --save-exact\n```\n\n> And you can then add some nice npm scripts in your package.json file pointing to the local version of Commitizen:\n> `package.json`\n>\n> ```shell\n>  ...\n>  \"scripts\": {\n>    \"commit\": \"cz\"\n>  }\n> ```\n>\n## 4.git commit不走commitlint\n>\n> Optional: Running Commitizen on git commit\n\n1. Update .git/hooks/prepare-commit-msg with the following code:\n\n```shell\n#!/bin/bash\nexec < /dev/tty && node_modules/.bin/cz --hook || true\n```\n\n1. Husky\nFor husky users, add the following configuration to the project's package.json file:\n\n```shell\n\"husky\": {\n  \"hooks\": {\n    \"prepare-commit-msg\": \"exec < /dev/tty && npx cz --hook || true\"\n  }\n}\n```\n\n## 参考文章\n\n- [commitlint GitHub](https://github.com/conventional-changelog/commitlint#config)\n- [commitizen GitHub](https://github.com/commitizen/cz-cli)\n","source":"_posts/commitlint-and-commitizen-configuration.md","raw":"---\ntitle: Commitlint 和 Commitizen 规范项目提交信息\ndate: 2024-02-01 23:57:09\ncategories:\n- front-end\ntags:\n- commitlint\n- commitizen\n- husky\n---\n## 1.配置husky\n>\n> To lint commits before they are created you can use Husky's commit-msg hook:\n\n```shell\n# Install Husky v6\nnpm install husky --save-dev\n# or\nyarn add husky --dev\n\n# Activate hooks\nnpx husky install\n# or\nyarn husky install\n\n# Add hook\n\nnpm pkg set scripts.commitlint=\"commitlint --edit\"\nnpx husky add .husky/commit-msg 'npm run commitlint ${1}'\n# .husky/commit-msg 文件会缺失 ${1} 手动补充一下\n# yarn commitlint ${1}\n```\n\n## 2.配置commitlint\n\n```shell\n# npm install --save-dev @commitlint/{config-conventional,cli}\n# 由于使用node16不满足node>=18的条件需要降级安装\nyarn add -D @commitlint/{config-conventional,cli}@16\n\n# Configure commitlint to use conventional config\necho \"module.exports = {extends: ['@commitlint/config-conventional']}\" > commitlint.config.js\n# format file\nprettier -w commitlint.config.js\n```\n\n## 3.配置commitizen\n\n```shell\nyarn add -D commitizen\nnpx commitizen init cz-conventional-changelog --save-dev --save-exact\n```\n\n> And you can then add some nice npm scripts in your package.json file pointing to the local version of Commitizen:\n> `package.json`\n>\n> ```shell\n>  ...\n>  \"scripts\": {\n>    \"commit\": \"cz\"\n>  }\n> ```\n>\n## 4.git commit不走commitlint\n>\n> Optional: Running Commitizen on git commit\n\n1. Update .git/hooks/prepare-commit-msg with the following code:\n\n```shell\n#!/bin/bash\nexec < /dev/tty && node_modules/.bin/cz --hook || true\n```\n\n1. Husky\nFor husky users, add the following configuration to the project's package.json file:\n\n```shell\n\"husky\": {\n  \"hooks\": {\n    \"prepare-commit-msg\": \"exec < /dev/tty && npx cz --hook || true\"\n  }\n}\n```\n\n## 参考文章\n\n- [commitlint GitHub](https://github.com/conventional-changelog/commitlint#config)\n- [commitizen GitHub](https://github.com/commitizen/cz-cli)\n","slug":"commitlint-and-commitizen-configuration","published":1,"updated":"2024-02-02T05:58:51.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmf0006i0ux6qoa3ljw","content":"<h2 id=\"1-配置husky\"><a href=\"#1-配置husky\" class=\"headerlink\" title=\"1.配置husky\"></a>1.配置husky</h2><blockquote>\n<p>To lint commits before they are created you can use Husky’s commit-msg hook:</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Install Husky v6</span></span><br><span class=\"line\">npm install husky --save-dev</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">or</span></span><br><span class=\"line\">yarn add husky --dev</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Activate hooks</span></span><br><span class=\"line\">npx husky install</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">or</span></span><br><span class=\"line\">yarn husky install</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add hook</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm pkg set scripts.commitlint=&quot;commitlint --edit&quot;</span><br><span class=\"line\">npx husky add .husky/commit-msg &#x27;npm run commitlint $&#123;1&#125;&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">.husky/commit-msg 文件会缺失 <span class=\"variable\">$&#123;1&#125;</span> 手动补充一下</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">yarn commitlint <span class=\"variable\">$&#123;1&#125;</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-配置commitlint\"><a href=\"#2-配置commitlint\" class=\"headerlink\" title=\"2.配置commitlint\"></a>2.配置commitlint</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">npm install --save-dev @commitlint/&#123;config-conventional,cli&#125;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">由于使用node16不满足node&gt;=18的条件需要降级安装</span></span><br><span class=\"line\">yarn add -D @commitlint/&#123;config-conventional,cli&#125;@16</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Configure commitlint to use conventional config</span></span><br><span class=\"line\">echo &quot;module.exports = &#123;extends: [&#x27;@commitlint/config-conventional&#x27;]&#125;&quot; &gt; commitlint.config.js</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">format file</span></span><br><span class=\"line\">prettier -w commitlint.config.js</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-配置commitizen\"><a href=\"#3-配置commitizen\" class=\"headerlink\" title=\"3.配置commitizen\"></a>3.配置commitizen</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add -D commitizen</span><br><span class=\"line\">npx commitizen init cz-conventional-changelog --save-dev --save-exact</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>And you can then add some nice npm scripts in your package.json file pointing to the local version of Commitizen:<br><code>package.json</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">  &quot;commit&quot;: &quot;cz&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h2 id=\"4-git-commit不走commitlint\"><a href=\"#4-git-commit不走commitlint\" class=\"headerlink\" title=\"4.git commit不走commitlint\"></a>4.git commit不走commitlint</h2><blockquote>\n<p>Optional: Running Commitizen on git commit</p>\n</blockquote>\n<ol>\n<li>Update .git&#x2F;hooks&#x2F;prepare-commit-msg with the following code:</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\">exec &lt; /dev/tty &amp;&amp; node_modules/.bin/cz --hook || true</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>Husky<br>For husky users, add the following configuration to the project’s package.json file:</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;husky&quot;: &#123;</span><br><span class=\"line\">  &quot;hooks&quot;: &#123;</span><br><span class=\"line\">    &quot;prepare-commit-msg&quot;: &quot;exec &lt; /dev/tty &amp;&amp; npx cz --hook || true&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://github.com/conventional-changelog/commitlint#config\">commitlint GitHub</a></li>\n<li><a href=\"https://github.com/commitizen/cz-cli\">commitizen GitHub</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-配置husky\"><a href=\"#1-配置husky\" class=\"headerlink\" title=\"1.配置husky\"></a>1.配置husky</h2><blockquote>\n<p>To lint commits before they are created you can use Husky’s commit-msg hook:</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Install Husky v6</span></span><br><span class=\"line\">npm install husky --save-dev</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">or</span></span><br><span class=\"line\">yarn add husky --dev</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Activate hooks</span></span><br><span class=\"line\">npx husky install</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">or</span></span><br><span class=\"line\">yarn husky install</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add hook</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm pkg set scripts.commitlint=&quot;commitlint --edit&quot;</span><br><span class=\"line\">npx husky add .husky/commit-msg &#x27;npm run commitlint $&#123;1&#125;&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">.husky/commit-msg 文件会缺失 <span class=\"variable\">$&#123;1&#125;</span> 手动补充一下</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">yarn commitlint <span class=\"variable\">$&#123;1&#125;</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-配置commitlint\"><a href=\"#2-配置commitlint\" class=\"headerlink\" title=\"2.配置commitlint\"></a>2.配置commitlint</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">npm install --save-dev @commitlint/&#123;config-conventional,cli&#125;</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">由于使用node16不满足node&gt;=18的条件需要降级安装</span></span><br><span class=\"line\">yarn add -D @commitlint/&#123;config-conventional,cli&#125;@16</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Configure commitlint to use conventional config</span></span><br><span class=\"line\">echo &quot;module.exports = &#123;extends: [&#x27;@commitlint/config-conventional&#x27;]&#125;&quot; &gt; commitlint.config.js</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">format file</span></span><br><span class=\"line\">prettier -w commitlint.config.js</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-配置commitizen\"><a href=\"#3-配置commitizen\" class=\"headerlink\" title=\"3.配置commitizen\"></a>3.配置commitizen</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add -D commitizen</span><br><span class=\"line\">npx commitizen init cz-conventional-changelog --save-dev --save-exact</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>And you can then add some nice npm scripts in your package.json file pointing to the local version of Commitizen:<br><code>package.json</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">&quot;scripts&quot;: &#123;</span><br><span class=\"line\">  &quot;commit&quot;: &quot;cz&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h2 id=\"4-git-commit不走commitlint\"><a href=\"#4-git-commit不走commitlint\" class=\"headerlink\" title=\"4.git commit不走commitlint\"></a>4.git commit不走commitlint</h2><blockquote>\n<p>Optional: Running Commitizen on git commit</p>\n</blockquote>\n<ol>\n<li>Update .git&#x2F;hooks&#x2F;prepare-commit-msg with the following code:</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\">exec &lt; /dev/tty &amp;&amp; node_modules/.bin/cz --hook || true</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>Husky<br>For husky users, add the following configuration to the project’s package.json file:</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;husky&quot;: &#123;</span><br><span class=\"line\">  &quot;hooks&quot;: &#123;</span><br><span class=\"line\">    &quot;prepare-commit-msg&quot;: &quot;exec &lt; /dev/tty &amp;&amp; npx cz --hook || true&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://github.com/conventional-changelog/commitlint#config\">commitlint GitHub</a></li>\n<li><a href=\"https://github.com/commitizen/cz-cli\">commitizen GitHub</a></li>\n</ul>\n"},{"title":"树莓派安装 Emby","date":"2024-02-01T16:03:09.000Z","_content":"[Emby官网](https://emby.media/linux-server.html)\n选择deb包下载安装\n\n## 安装\n\n```bash\nsudo dpkg -i **.deb\n```\n","source":"_posts/pi-install-emby.md","raw":"---\ntitle: 树莓派安装 Emby\ndate: 2024-02-02 00:03:09\ncategories:\n- raspberry-pi\ntags:\n- emby\n---\n[Emby官网](https://emby.media/linux-server.html)\n选择deb包下载安装\n\n## 安装\n\n```bash\nsudo dpkg -i **.deb\n```\n","slug":"pi-install-emby","published":1,"updated":"2024-02-02T02:46:02.227Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmg0007i0ux4cb7amd0","content":"<p><a href=\"https://emby.media/linux-server.html\">Emby官网</a><br>选择deb包下载安装</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i **.deb</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://emby.media/linux-server.html\">Emby官网</a><br>选择deb包下载安装</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i **.deb</span><br></pre></td></tr></table></figure>\n"},{"title":"Linux 软链接和硬链接（Soft-Hard-Link）","date":"2024-02-01T16:01:43.000Z","_content":"## 软链接（Soft links）\n\n软链接相当于Windows上面的快捷方式\n> Commonly referred to as symbolic links, soft links link together non-regular and regular files. They can also span multiple filesystems. By definition, a soft link is not a standard file, but a special file that points to an existing file. Let's look at how to create a soft link. I use the ln -s command and the following syntax:\n>\n> All of this sounds great, but there are some drawbacks to using a soft link. The biggest concern is data loss and data confusion. If the original file is deleted, the soft link is broken. This situation is referred to as a dangling soft link. If you were to create a new file with the same name as the original, your dangling soft link is no longer dangling at all. It points to the new file created, whether this was your intention or not, so be sure to keep this in mind.\n>\n## 硬链接（Hard links）\n\n硬链接相当于文件的一个副本，但是创建硬链接的时候并没有复制一份源文件，而是将文件的node指向源文件，相当于一个空指针指向了文件的地址。\n> The concept of a hard link is the most basic we will discuss today. Every file on the Linux filesystem starts with a single hard link. The link is between the filename and the actual data stored on the filesystem. Creating an additional hard link to a file means a few different things. Let's discuss these.\n>\n> First, you create a new filename pointing to the exact same data as the old filename. This means that the two filenames, though different, point to identical data. For example, if I create file /home/tcarrigan/demo/link_test and write hello world in the file, I have a single hard link between the file name link_test and the file content hello world.\n>\n> When changes are made to one filename, the other reflects those changes. The permissions, link count, ownership, timestamps, and file content are the exact same. If the original file is deleted, the data still exists under the secondary hard link. The data is only removed from your drive when all links to the data have been removed. If you find two files with identical properties but are unsure if they are hard-linked, use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number.\n>\n## 硬链接限制\n>\n> While useful, there are some limitations to what hard links can do. For starters, they can only be created for regular files (not directories or special files). Also, a hard link cannot span multiple filesystems. They only work when the new hard link exists on the same filesystem as the original.\n>\n## 参考文章\n\n[hard links and soft links explained](https://www.redhat.com/sysadmin/linking-linux-explained)\n","source":"_posts/linux-soft-hard-link.md","raw":"---\ntitle: Linux 软链接和硬链接（Soft-Hard-Link）\ndate: 2024-02-02 00:01:43\ncategories:\n- linux\ntags:\n- soft-link\n- hard-link\n---\n## 软链接（Soft links）\n\n软链接相当于Windows上面的快捷方式\n> Commonly referred to as symbolic links, soft links link together non-regular and regular files. They can also span multiple filesystems. By definition, a soft link is not a standard file, but a special file that points to an existing file. Let's look at how to create a soft link. I use the ln -s command and the following syntax:\n>\n> All of this sounds great, but there are some drawbacks to using a soft link. The biggest concern is data loss and data confusion. If the original file is deleted, the soft link is broken. This situation is referred to as a dangling soft link. If you were to create a new file with the same name as the original, your dangling soft link is no longer dangling at all. It points to the new file created, whether this was your intention or not, so be sure to keep this in mind.\n>\n## 硬链接（Hard links）\n\n硬链接相当于文件的一个副本，但是创建硬链接的时候并没有复制一份源文件，而是将文件的node指向源文件，相当于一个空指针指向了文件的地址。\n> The concept of a hard link is the most basic we will discuss today. Every file on the Linux filesystem starts with a single hard link. The link is between the filename and the actual data stored on the filesystem. Creating an additional hard link to a file means a few different things. Let's discuss these.\n>\n> First, you create a new filename pointing to the exact same data as the old filename. This means that the two filenames, though different, point to identical data. For example, if I create file /home/tcarrigan/demo/link_test and write hello world in the file, I have a single hard link between the file name link_test and the file content hello world.\n>\n> When changes are made to one filename, the other reflects those changes. The permissions, link count, ownership, timestamps, and file content are the exact same. If the original file is deleted, the data still exists under the secondary hard link. The data is only removed from your drive when all links to the data have been removed. If you find two files with identical properties but are unsure if they are hard-linked, use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number.\n>\n## 硬链接限制\n>\n> While useful, there are some limitations to what hard links can do. For starters, they can only be created for regular files (not directories or special files). Also, a hard link cannot span multiple filesystems. They only work when the new hard link exists on the same filesystem as the original.\n>\n## 参考文章\n\n[hard links and soft links explained](https://www.redhat.com/sysadmin/linking-linux-explained)\n","slug":"linux-soft-hard-link","published":1,"updated":"2024-02-02T02:44:55.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmi0008i0ux89hjf000","content":"<h2 id=\"软链接（Soft-links）\"><a href=\"#软链接（Soft-links）\" class=\"headerlink\" title=\"软链接（Soft links）\"></a>软链接（Soft links）</h2><p>软链接相当于Windows上面的快捷方式</p>\n<blockquote>\n<p>Commonly referred to as symbolic links, soft links link together non-regular and regular files. They can also span multiple filesystems. By definition, a soft link is not a standard file, but a special file that points to an existing file. Let’s look at how to create a soft link. I use the ln -s command and the following syntax:</p>\n<p>All of this sounds great, but there are some drawbacks to using a soft link. The biggest concern is data loss and data confusion. If the original file is deleted, the soft link is broken. This situation is referred to as a dangling soft link. If you were to create a new file with the same name as the original, your dangling soft link is no longer dangling at all. It points to the new file created, whether this was your intention or not, so be sure to keep this in mind.</p>\n</blockquote>\n<h2 id=\"硬链接（Hard-links）\"><a href=\"#硬链接（Hard-links）\" class=\"headerlink\" title=\"硬链接（Hard links）\"></a>硬链接（Hard links）</h2><p>硬链接相当于文件的一个副本，但是创建硬链接的时候并没有复制一份源文件，而是将文件的node指向源文件，相当于一个空指针指向了文件的地址。</p>\n<blockquote>\n<p>The concept of a hard link is the most basic we will discuss today. Every file on the Linux filesystem starts with a single hard link. The link is between the filename and the actual data stored on the filesystem. Creating an additional hard link to a file means a few different things. Let’s discuss these.</p>\n<p>First, you create a new filename pointing to the exact same data as the old filename. This means that the two filenames, though different, point to identical data. For example, if I create file &#x2F;home&#x2F;tcarrigan&#x2F;demo&#x2F;link_test and write hello world in the file, I have a single hard link between the file name link_test and the file content hello world.</p>\n<p>When changes are made to one filename, the other reflects those changes. The permissions, link count, ownership, timestamps, and file content are the exact same. If the original file is deleted, the data still exists under the secondary hard link. The data is only removed from your drive when all links to the data have been removed. If you find two files with identical properties but are unsure if they are hard-linked, use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number.</p>\n</blockquote>\n<h2 id=\"硬链接限制\"><a href=\"#硬链接限制\" class=\"headerlink\" title=\"硬链接限制\"></a>硬链接限制</h2><blockquote>\n<p>While useful, there are some limitations to what hard links can do. For starters, they can only be created for regular files (not directories or special files). Also, a hard link cannot span multiple filesystems. They only work when the new hard link exists on the same filesystem as the original.</p>\n</blockquote>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://www.redhat.com/sysadmin/linking-linux-explained\">hard links and soft links explained</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"软链接（Soft-links）\"><a href=\"#软链接（Soft-links）\" class=\"headerlink\" title=\"软链接（Soft links）\"></a>软链接（Soft links）</h2><p>软链接相当于Windows上面的快捷方式</p>\n<blockquote>\n<p>Commonly referred to as symbolic links, soft links link together non-regular and regular files. They can also span multiple filesystems. By definition, a soft link is not a standard file, but a special file that points to an existing file. Let’s look at how to create a soft link. I use the ln -s command and the following syntax:</p>\n<p>All of this sounds great, but there are some drawbacks to using a soft link. The biggest concern is data loss and data confusion. If the original file is deleted, the soft link is broken. This situation is referred to as a dangling soft link. If you were to create a new file with the same name as the original, your dangling soft link is no longer dangling at all. It points to the new file created, whether this was your intention or not, so be sure to keep this in mind.</p>\n</blockquote>\n<h2 id=\"硬链接（Hard-links）\"><a href=\"#硬链接（Hard-links）\" class=\"headerlink\" title=\"硬链接（Hard links）\"></a>硬链接（Hard links）</h2><p>硬链接相当于文件的一个副本，但是创建硬链接的时候并没有复制一份源文件，而是将文件的node指向源文件，相当于一个空指针指向了文件的地址。</p>\n<blockquote>\n<p>The concept of a hard link is the most basic we will discuss today. Every file on the Linux filesystem starts with a single hard link. The link is between the filename and the actual data stored on the filesystem. Creating an additional hard link to a file means a few different things. Let’s discuss these.</p>\n<p>First, you create a new filename pointing to the exact same data as the old filename. This means that the two filenames, though different, point to identical data. For example, if I create file &#x2F;home&#x2F;tcarrigan&#x2F;demo&#x2F;link_test and write hello world in the file, I have a single hard link between the file name link_test and the file content hello world.</p>\n<p>When changes are made to one filename, the other reflects those changes. The permissions, link count, ownership, timestamps, and file content are the exact same. If the original file is deleted, the data still exists under the secondary hard link. The data is only removed from your drive when all links to the data have been removed. If you find two files with identical properties but are unsure if they are hard-linked, use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number.</p>\n</blockquote>\n<h2 id=\"硬链接限制\"><a href=\"#硬链接限制\" class=\"headerlink\" title=\"硬链接限制\"></a>硬链接限制</h2><blockquote>\n<p>While useful, there are some limitations to what hard links can do. For starters, they can only be created for regular files (not directories or special files). Also, a hard link cannot span multiple filesystems. They only work when the new hard link exists on the same filesystem as the original.</p>\n</blockquote>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://www.redhat.com/sysadmin/linking-linux-explained\">hard links and soft links explained</a></p>\n"},{"title":"macOS Docker 持久化安装 Redis","date":"2024-02-01T15:55:13.000Z","_content":"## 安装步骤\n\n```shell\ndocker run -v /Users/ao/Desktop/docker/redis/local-redis-stack.conf:/redis-stack.conf -v /Users/ao/Desktop/docker/redis/data:/data -p 6379:6379 -p 8001:8001 -d redis/redis-stack:latest\n```\n\n## 参考文章\n\n[Redis官方文章](https://redis.io/docs/install/install-stack/docker/)\n","source":"_posts/macos-docker-redis.md","raw":"---\ntitle: macOS Docker 持久化安装 Redis\ndate: 2024-02-01 23:55:13\ncategories:\n- macos\n- docker\ntags:\n- redis\n---\n## 安装步骤\n\n```shell\ndocker run -v /Users/ao/Desktop/docker/redis/local-redis-stack.conf:/redis-stack.conf -v /Users/ao/Desktop/docker/redis/data:/data -p 6379:6379 -p 8001:8001 -d redis/redis-stack:latest\n```\n\n## 参考文章\n\n[Redis官方文章](https://redis.io/docs/install/install-stack/docker/)\n","slug":"macos-docker-redis","published":1,"updated":"2024-02-02T02:45:42.497Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmj000ci0uxe3sc6ktf","content":"<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -v /Users/ao/Desktop/docker/redis/local-redis-stack.conf:/redis-stack.conf -v /Users/ao/Desktop/docker/redis/data:/data -p 6379:6379 -p 8001:8001 -d redis/redis-stack:latest</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://redis.io/docs/install/install-stack/docker/\">Redis官方文章</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -v /Users/ao/Desktop/docker/redis/local-redis-stack.conf:/redis-stack.conf -v /Users/ao/Desktop/docker/redis/data:/data -p 6379:6379 -p 8001:8001 -d redis/redis-stack:latest</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://redis.io/docs/install/install-stack/docker/\">Redis官方文章</a></p>\n"},{"title":"树莓派安装 LskyPro","date":"2024-02-01T16:04:01.000Z","_content":"## 安装php8.2\n\n1.Connect to Raspberry Pi via SSH and execute command to download GPG key:\n\n```bash\nsudo wget -qO /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg\n```\n\n2.Add PHP repository:\n\n```bash\necho \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" | sudo tee /etc/apt/sources.list.d/php.list\n```\n\n3.Update the package lists:\n\n```bash\nsudo apt update\n```\n\n4.~~Next, install PHP 8.2 with command line interface (CLI):~~\n\n```bash\nsudo apt install -y php8.2-fpm php8.2-common php8.2-cli php8.2-curl php8.2-gd php8.2-mbstring php8.2-xml php8.2-zip php8.2-mysql libapache2-mod-php8.2 php8.2-imagick php8.2-intl php8.2-bcmath\n```\n\n5.Check PHP version when installation was finished:\n\n```bash\nphp --version\n```\n\n6.php8.2报错500，改为php8.1\n\n```bash\nsudo apt install -y php8.1-fpm php8.1-common php8.1-cli php8.1-curl php8.1-gd php8.1-mbstring php8.1-xml php8.1-zip php8.1-mysql libapache2-mod-php8.1 php8.1-imagick php8.1-intl php8.1-bcmath\n```\n\n## 修改php.ini配置\n\n1.修改php.ini\n\n```bash\nvim /etc/php/8.2/fpm/php.ini\n```\n\n- 找到disable_functions，若 “=” 右侧存在exec、shell_exec、readlink、symlink、putenv、getenv函数，将其删除（默认状态下，等号右侧为空白）；\n- 找到memory_limit，根据机器配置适当调大 “=” 右侧最大内存大小；\n- 找到post_max_size，适当调大 “=” 右侧POST方法所能传输数据的最大大小；\n- 找到upload_max_filesize，适当调大 “=” 右侧最大文件上传大小；\n- 找到open_basedir，在其前面加上“;\"（默认已添加）;\n- 搜索Dynamic Extensions，你会在下面发现一堆前面跟着;的extension=xxx，对照兰空官方的依赖把该去掉的分号去掉\n2.重启服务\n\n```bash\nsudo systemctl restart php8.2-fpm && sudo systemctl status php8.2-fpm\n```\n\n## 创建数据库\n\n```bash\n# 创建wiki数据库\nCREATE DATABASE IF NOT EXISTS lsky DEFAULT CHARSET utf8 COLLATE utf8_general_ci;\n# 新建用户\ncreate user 'lskypro'@'localhost' identified by 'Ywc1989@@';\n# 赋予权限\nGRANT ALL PRIVILEGES ON lsky.* TO 'lskypro'@'localhost';\n# 刷新权限\nflush privileges;\nexit;\n```\n\n## 卸载PHP\n\n1.If you want to completely remove PHP anything related to it, execute the following command:\n\n```bash\nsudo apt purge --autoremove -y php-common mime-support\n```\n\n2.Remove GPG key and repository:\n\n```bash\nsudo rm -rf /etc/apt/trusted.gpg.d/php.gpg\nsudo rm -rf /etc/apt/sources.list.d/php.list\n```\n\n3.Remove PHP related file:\n\n```bash\nsudo rm -rf /var/lib/systemd/timers/stamp-phpsessionclean.timer\n```\n","source":"_posts/pi-install-lskypro.md","raw":"---\ntitle: 树莓派安装 LskyPro\ndate: 2024-02-02 00:04:01\ncategories:\n- raspberry-pi\ntags:\n- lskypro\n---\n## 安装php8.2\n\n1.Connect to Raspberry Pi via SSH and execute command to download GPG key:\n\n```bash\nsudo wget -qO /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg\n```\n\n2.Add PHP repository:\n\n```bash\necho \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" | sudo tee /etc/apt/sources.list.d/php.list\n```\n\n3.Update the package lists:\n\n```bash\nsudo apt update\n```\n\n4.~~Next, install PHP 8.2 with command line interface (CLI):~~\n\n```bash\nsudo apt install -y php8.2-fpm php8.2-common php8.2-cli php8.2-curl php8.2-gd php8.2-mbstring php8.2-xml php8.2-zip php8.2-mysql libapache2-mod-php8.2 php8.2-imagick php8.2-intl php8.2-bcmath\n```\n\n5.Check PHP version when installation was finished:\n\n```bash\nphp --version\n```\n\n6.php8.2报错500，改为php8.1\n\n```bash\nsudo apt install -y php8.1-fpm php8.1-common php8.1-cli php8.1-curl php8.1-gd php8.1-mbstring php8.1-xml php8.1-zip php8.1-mysql libapache2-mod-php8.1 php8.1-imagick php8.1-intl php8.1-bcmath\n```\n\n## 修改php.ini配置\n\n1.修改php.ini\n\n```bash\nvim /etc/php/8.2/fpm/php.ini\n```\n\n- 找到disable_functions，若 “=” 右侧存在exec、shell_exec、readlink、symlink、putenv、getenv函数，将其删除（默认状态下，等号右侧为空白）；\n- 找到memory_limit，根据机器配置适当调大 “=” 右侧最大内存大小；\n- 找到post_max_size，适当调大 “=” 右侧POST方法所能传输数据的最大大小；\n- 找到upload_max_filesize，适当调大 “=” 右侧最大文件上传大小；\n- 找到open_basedir，在其前面加上“;\"（默认已添加）;\n- 搜索Dynamic Extensions，你会在下面发现一堆前面跟着;的extension=xxx，对照兰空官方的依赖把该去掉的分号去掉\n2.重启服务\n\n```bash\nsudo systemctl restart php8.2-fpm && sudo systemctl status php8.2-fpm\n```\n\n## 创建数据库\n\n```bash\n# 创建wiki数据库\nCREATE DATABASE IF NOT EXISTS lsky DEFAULT CHARSET utf8 COLLATE utf8_general_ci;\n# 新建用户\ncreate user 'lskypro'@'localhost' identified by 'Ywc1989@@';\n# 赋予权限\nGRANT ALL PRIVILEGES ON lsky.* TO 'lskypro'@'localhost';\n# 刷新权限\nflush privileges;\nexit;\n```\n\n## 卸载PHP\n\n1.If you want to completely remove PHP anything related to it, execute the following command:\n\n```bash\nsudo apt purge --autoremove -y php-common mime-support\n```\n\n2.Remove GPG key and repository:\n\n```bash\nsudo rm -rf /etc/apt/trusted.gpg.d/php.gpg\nsudo rm -rf /etc/apt/sources.list.d/php.list\n```\n\n3.Remove PHP related file:\n\n```bash\nsudo rm -rf /var/lib/systemd/timers/stamp-phpsessionclean.timer\n```\n","slug":"pi-install-lskypro","published":1,"updated":"2024-02-02T02:46:15.182Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmk000di0uxhmuxbm8g","content":"<h2 id=\"安装php8-2\"><a href=\"#安装php8-2\" class=\"headerlink\" title=\"安装php8.2\"></a>安装php8.2</h2><p>1.Connect to Raspberry Pi via SSH and execute command to download GPG key:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wget -qO /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg</span><br></pre></td></tr></table></figure>\n\n<p>2.Add PHP repository:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;deb https://packages.sury.org/php/ <span class=\"subst\">$(lsb_release -sc)</span> main&quot;</span> | sudo <span class=\"built_in\">tee</span> /etc/apt/sources.list.d/php.list</span><br></pre></td></tr></table></figure>\n\n<p>3.Update the package lists:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n\n<p>4.<del>Next, install PHP 8.2 with command line interface (CLI):</del></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y php8.2-fpm php8.2-common php8.2-cli php8.2-curl php8.2-gd php8.2-mbstring php8.2-xml php8.2-zip php8.2-mysql libapache2-mod-php8.2 php8.2-imagick php8.2-intl php8.2-bcmath</span><br></pre></td></tr></table></figure>\n\n<p>5.Check PHP version when installation was finished:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php --version</span><br></pre></td></tr></table></figure>\n\n<p>6.php8.2报错500，改为php8.1</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y php8.1-fpm php8.1-common php8.1-cli php8.1-curl php8.1-gd php8.1-mbstring php8.1-xml php8.1-zip php8.1-mysql libapache2-mod-php8.1 php8.1-imagick php8.1-intl php8.1-bcmath</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改php-ini配置\"><a href=\"#修改php-ini配置\" class=\"headerlink\" title=\"修改php.ini配置\"></a>修改php.ini配置</h2><p>1.修改php.ini</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/php/8.2/fpm/php.ini</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>找到disable_functions，若 “&#x3D;” 右侧存在exec、shell_exec、readlink、symlink、putenv、getenv函数，将其删除（默认状态下，等号右侧为空白）；</li>\n<li>找到memory_limit，根据机器配置适当调大 “&#x3D;” 右侧最大内存大小；</li>\n<li>找到post_max_size，适当调大 “&#x3D;” 右侧POST方法所能传输数据的最大大小；</li>\n<li>找到upload_max_filesize，适当调大 “&#x3D;” 右侧最大文件上传大小；</li>\n<li>找到open_basedir，在其前面加上“;”（默认已添加）;</li>\n<li>搜索Dynamic Extensions，你会在下面发现一堆前面跟着;的extension&#x3D;xxx，对照兰空官方的依赖把该去掉的分号去掉<br>2.重启服务</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart php8.2-fpm &amp;&amp; sudo systemctl status php8.2-fpm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建wiki数据库</span></span><br><span class=\"line\">CREATE DATABASE IF NOT EXISTS lsky DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br><span class=\"line\"><span class=\"comment\"># 新建用户</span></span><br><span class=\"line\">create user <span class=\"string\">&#x27;lskypro&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> identified by <span class=\"string\">&#x27;Ywc1989@@&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\"># 赋予权限</span></span><br><span class=\"line\">GRANT ALL PRIVILEGES ON lsky.* TO <span class=\"string\">&#x27;lskypro&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\"># 刷新权限</span></span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\"><span class=\"built_in\">exit</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"卸载PHP\"><a href=\"#卸载PHP\" class=\"headerlink\" title=\"卸载PHP\"></a>卸载PHP</h2><p>1.If you want to completely remove PHP anything related to it, execute the following command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt purge --autoremove -y php-common mime-support</span><br></pre></td></tr></table></figure>\n\n<p>2.Remove GPG key and repository:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /etc/apt/trusted.gpg.d/php.gpg</span><br><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /etc/apt/sources.list.d/php.list</span><br></pre></td></tr></table></figure>\n\n<p>3.Remove PHP related file:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /var/lib/systemd/timers/stamp-phpsessionclean.timer</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装php8-2\"><a href=\"#安装php8-2\" class=\"headerlink\" title=\"安装php8.2\"></a>安装php8.2</h2><p>1.Connect to Raspberry Pi via SSH and execute command to download GPG key:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wget -qO /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg</span><br></pre></td></tr></table></figure>\n\n<p>2.Add PHP repository:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;deb https://packages.sury.org/php/ <span class=\"subst\">$(lsb_release -sc)</span> main&quot;</span> | sudo <span class=\"built_in\">tee</span> /etc/apt/sources.list.d/php.list</span><br></pre></td></tr></table></figure>\n\n<p>3.Update the package lists:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n\n<p>4.<del>Next, install PHP 8.2 with command line interface (CLI):</del></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y php8.2-fpm php8.2-common php8.2-cli php8.2-curl php8.2-gd php8.2-mbstring php8.2-xml php8.2-zip php8.2-mysql libapache2-mod-php8.2 php8.2-imagick php8.2-intl php8.2-bcmath</span><br></pre></td></tr></table></figure>\n\n<p>5.Check PHP version when installation was finished:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php --version</span><br></pre></td></tr></table></figure>\n\n<p>6.php8.2报错500，改为php8.1</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y php8.1-fpm php8.1-common php8.1-cli php8.1-curl php8.1-gd php8.1-mbstring php8.1-xml php8.1-zip php8.1-mysql libapache2-mod-php8.1 php8.1-imagick php8.1-intl php8.1-bcmath</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改php-ini配置\"><a href=\"#修改php-ini配置\" class=\"headerlink\" title=\"修改php.ini配置\"></a>修改php.ini配置</h2><p>1.修改php.ini</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/php/8.2/fpm/php.ini</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>找到disable_functions，若 “&#x3D;” 右侧存在exec、shell_exec、readlink、symlink、putenv、getenv函数，将其删除（默认状态下，等号右侧为空白）；</li>\n<li>找到memory_limit，根据机器配置适当调大 “&#x3D;” 右侧最大内存大小；</li>\n<li>找到post_max_size，适当调大 “&#x3D;” 右侧POST方法所能传输数据的最大大小；</li>\n<li>找到upload_max_filesize，适当调大 “&#x3D;” 右侧最大文件上传大小；</li>\n<li>找到open_basedir，在其前面加上“;”（默认已添加）;</li>\n<li>搜索Dynamic Extensions，你会在下面发现一堆前面跟着;的extension&#x3D;xxx，对照兰空官方的依赖把该去掉的分号去掉<br>2.重启服务</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart php8.2-fpm &amp;&amp; sudo systemctl status php8.2-fpm</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建wiki数据库</span></span><br><span class=\"line\">CREATE DATABASE IF NOT EXISTS lsky DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br><span class=\"line\"><span class=\"comment\"># 新建用户</span></span><br><span class=\"line\">create user <span class=\"string\">&#x27;lskypro&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> identified by <span class=\"string\">&#x27;Ywc1989@@&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\"># 赋予权限</span></span><br><span class=\"line\">GRANT ALL PRIVILEGES ON lsky.* TO <span class=\"string\">&#x27;lskypro&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\"># 刷新权限</span></span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\"><span class=\"built_in\">exit</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"卸载PHP\"><a href=\"#卸载PHP\" class=\"headerlink\" title=\"卸载PHP\"></a>卸载PHP</h2><p>1.If you want to completely remove PHP anything related to it, execute the following command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt purge --autoremove -y php-common mime-support</span><br></pre></td></tr></table></figure>\n\n<p>2.Remove GPG key and repository:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /etc/apt/trusted.gpg.d/php.gpg</span><br><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /etc/apt/sources.list.d/php.list</span><br></pre></td></tr></table></figure>\n\n<p>3.Remove PHP related file:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">rm</span> -rf /var/lib/systemd/timers/stamp-phpsessionclean.timer</span><br></pre></td></tr></table></figure>\n"},{"title":"树莓派安装 Stash","date":"2024-02-01T16:05:16.000Z","_content":"## 安装\n\n```bash\nsudo mkdir /etc/stash && cd /etc/stash\nsudo wget https://github.com/stashapp/stash/releases/download/v0.24.1/stash-linux-arm32v6\nsudo mv stash-linux-arm32v6 stash\nsudo chown root:root stash\nsudo chmod u+x stash\n```\n\n## 安装ffmpeg\n\n```bash\nsudo apt install ffmpeg\n```\n\n## 配置\n\n```bash\nsudo vim /etc/systemd/system/stash.service\n\n[Unit]\nDescription=Stash\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/etc/stash/stash\nRestart=always\n# Consider creating a dedicated user for Wiki.js here:\nUser=root\nWorkingDirectory=/etc/stash\n\n[Install]\nWantedBy=multi-user.target\n```\n\n## 启动\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl start stash\n```\n\n## 参考文章\n\n[stash](https://github.com/stashapp/stash/)\n","source":"_posts/pi-install-stash.md","raw":"---\ntitle: 树莓派安装 Stash\ndate: 2024-02-02 00:05:16\ncategories:\n- raspberry-pi\ntags:\n- stash\n---\n## 安装\n\n```bash\nsudo mkdir /etc/stash && cd /etc/stash\nsudo wget https://github.com/stashapp/stash/releases/download/v0.24.1/stash-linux-arm32v6\nsudo mv stash-linux-arm32v6 stash\nsudo chown root:root stash\nsudo chmod u+x stash\n```\n\n## 安装ffmpeg\n\n```bash\nsudo apt install ffmpeg\n```\n\n## 配置\n\n```bash\nsudo vim /etc/systemd/system/stash.service\n\n[Unit]\nDescription=Stash\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/etc/stash/stash\nRestart=always\n# Consider creating a dedicated user for Wiki.js here:\nUser=root\nWorkingDirectory=/etc/stash\n\n[Install]\nWantedBy=multi-user.target\n```\n\n## 启动\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl start stash\n```\n\n## 参考文章\n\n[stash](https://github.com/stashapp/stash/)\n","slug":"pi-install-stash","published":1,"updated":"2024-02-02T02:46:29.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmm000hi0uxectjf7up","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">mkdir</span> /etc/stash &amp;&amp; <span class=\"built_in\">cd</span> /etc/stash</span><br><span class=\"line\">sudo wget https://github.com/stashapp/stash/releases/download/v0.24.1/stash-linux-arm32v6</span><br><span class=\"line\">sudo <span class=\"built_in\">mv</span> stash-linux-arm32v6 stash</span><br><span class=\"line\">sudo <span class=\"built_in\">chown</span> root:root stash</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> u+x stash</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装ffmpeg\"><a href=\"#安装ffmpeg\" class=\"headerlink\" title=\"安装ffmpeg\"></a>安装ffmpeg</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install ffmpeg</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/systemd/system/stash.service</span><br><span class=\"line\"></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Stash</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/etc/stash/stash</span><br><span class=\"line\">Restart=always</span><br><span class=\"line\"><span class=\"comment\"># Consider creating a dedicated user for Wiki.js here:</span></span><br><span class=\"line\">User=root</span><br><span class=\"line\">WorkingDirectory=/etc/stash</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl start stash</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://github.com/stashapp/stash/\">stash</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">mkdir</span> /etc/stash &amp;&amp; <span class=\"built_in\">cd</span> /etc/stash</span><br><span class=\"line\">sudo wget https://github.com/stashapp/stash/releases/download/v0.24.1/stash-linux-arm32v6</span><br><span class=\"line\">sudo <span class=\"built_in\">mv</span> stash-linux-arm32v6 stash</span><br><span class=\"line\">sudo <span class=\"built_in\">chown</span> root:root stash</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> u+x stash</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装ffmpeg\"><a href=\"#安装ffmpeg\" class=\"headerlink\" title=\"安装ffmpeg\"></a>安装ffmpeg</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install ffmpeg</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/systemd/system/stash.service</span><br><span class=\"line\"></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Stash</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/etc/stash/stash</span><br><span class=\"line\">Restart=always</span><br><span class=\"line\"><span class=\"comment\"># Consider creating a dedicated user for Wiki.js here:</span></span><br><span class=\"line\">User=root</span><br><span class=\"line\">WorkingDirectory=/etc/stash</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl start stash</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://github.com/stashapp/stash/\">stash</a></p>\n"},{"title":"树莓派安装 valutwarden","date":"2024-02-01T16:05:45.000Z","_content":"## 创建目录\n\n```bash\nmkdir dockers/vaultwarden/data\n```\n\n## 安装\n\n```bash\ndocker pull vaultwarden/server:latest\n\ndocker run -d --name bitwarden \\\n    --restart=always \\\n    -v /bw-data/:/data/ \\\n    -p 127.0.0.1:8080:80 \\\n    -p 127.0.0.1:3012:3012 \\\n    vaultwarden/server:latest\n```\n\n## 配置Nginx\n\n```txt\nserver {\n        listen 80;\n        server_name bitwarden.ao.abc;\n        location / {\n          # proxy_pass http://localhost:5230;\n          # proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求\n      # proxy_set_header X-Real-IP $remote_addr;\n      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      return 301 https://$host$request_uri;\n        }\n}\n\nserver {\n        listen 443 ssl;\n        listen [::]:443;\n\n        server_name bitwarden.ao.abc;\n        ssl_certificate      ao.abc+4.pem;\n  ssl_certificate_key  ao.abc+4-key.pem;\n\n        # SSL 会话配置\n  ssl_session_cache    shared:SSL:10m;\n  ssl_session_timeout  10m;\n\n        # SSL 协议、加密配置\n  ssl_protocols  TLSv1.1 TLSv1.2 TLSv1.3;\n  ssl_ciphers  HIGH:!aNULL:!MD5;\n  ssl_prefer_server_ciphers  on;\n\n  location / {\n    proxy_pass http://localhost:8080;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n  }\n  \n  location /notifications/hub {\n    proxy_pass http://localhost:3012;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n  }\n  \n  location /notifications/hub/negotiate {\n    proxy_pass http://localhost:8080;\n  }\n}\n```\n\n## 参考文章\n\n[pimylifeup](https://pimylifeup.com/raspberry-pi-bitwarden/)\n","source":"_posts/pi-install-valutwarden.md","raw":"---\ntitle: 树莓派安装 valutwarden\ndate: 2024-02-02 00:05:45\ncategories:\n- raspberry-pi\ntags:\n- valutwarden\n---\n## 创建目录\n\n```bash\nmkdir dockers/vaultwarden/data\n```\n\n## 安装\n\n```bash\ndocker pull vaultwarden/server:latest\n\ndocker run -d --name bitwarden \\\n    --restart=always \\\n    -v /bw-data/:/data/ \\\n    -p 127.0.0.1:8080:80 \\\n    -p 127.0.0.1:3012:3012 \\\n    vaultwarden/server:latest\n```\n\n## 配置Nginx\n\n```txt\nserver {\n        listen 80;\n        server_name bitwarden.ao.abc;\n        location / {\n          # proxy_pass http://localhost:5230;\n          # proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求\n      # proxy_set_header X-Real-IP $remote_addr;\n      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      return 301 https://$host$request_uri;\n        }\n}\n\nserver {\n        listen 443 ssl;\n        listen [::]:443;\n\n        server_name bitwarden.ao.abc;\n        ssl_certificate      ao.abc+4.pem;\n  ssl_certificate_key  ao.abc+4-key.pem;\n\n        # SSL 会话配置\n  ssl_session_cache    shared:SSL:10m;\n  ssl_session_timeout  10m;\n\n        # SSL 协议、加密配置\n  ssl_protocols  TLSv1.1 TLSv1.2 TLSv1.3;\n  ssl_ciphers  HIGH:!aNULL:!MD5;\n  ssl_prefer_server_ciphers  on;\n\n  location / {\n    proxy_pass http://localhost:8080;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n  }\n  \n  location /notifications/hub {\n    proxy_pass http://localhost:3012;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n  }\n  \n  location /notifications/hub/negotiate {\n    proxy_pass http://localhost:8080;\n  }\n}\n```\n\n## 参考文章\n\n[pimylifeup](https://pimylifeup.com/raspberry-pi-bitwarden/)\n","slug":"pi-install-valutwarden","published":1,"updated":"2024-02-02T02:46:36.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmn000ji0ux5f2abyp2","content":"<h2 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> dockers/vaultwarden/data</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull vaultwarden/server:latest</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d --name bitwarden \\</span><br><span class=\"line\">    --restart=always \\</span><br><span class=\"line\">    -v /bw-data/:/data/ \\</span><br><span class=\"line\">    -p 127.0.0.1:8080:80 \\</span><br><span class=\"line\">    -p 127.0.0.1:3012:3012 \\</span><br><span class=\"line\">    vaultwarden/server:latest</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h2><figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name bitwarden.ao.abc;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">          # proxy_pass http://localhost:5230;</span><br><span class=\"line\">          # proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求</span><br><span class=\"line\">      # proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">      return 301 https://$host$request_uri;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 443 ssl;</span><br><span class=\"line\">        listen [::]:443;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_name bitwarden.ao.abc;</span><br><span class=\"line\">        ssl_certificate      ao.abc+4.pem;</span><br><span class=\"line\">  ssl_certificate_key  ao.abc+4-key.pem;</span><br><span class=\"line\"></span><br><span class=\"line\">        # SSL 会话配置</span><br><span class=\"line\">  ssl_session_cache    shared:SSL:10m;</span><br><span class=\"line\">  ssl_session_timeout  10m;</span><br><span class=\"line\"></span><br><span class=\"line\">        # SSL 协议、加密配置</span><br><span class=\"line\">  ssl_protocols  TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class=\"line\">  ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class=\"line\">  ssl_prefer_server_ciphers  on;</span><br><span class=\"line\"></span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">    proxy_pass http://localhost:8080;</span><br><span class=\"line\">    proxy_set_header Host $host;</span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  location /notifications/hub &#123;</span><br><span class=\"line\">    proxy_pass http://localhost:3012;</span><br><span class=\"line\">    proxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  location /notifications/hub/negotiate &#123;</span><br><span class=\"line\">    proxy_pass http://localhost:8080;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://pimylifeup.com/raspberry-pi-bitwarden/\">pimylifeup</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> dockers/vaultwarden/data</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull vaultwarden/server:latest</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d --name bitwarden \\</span><br><span class=\"line\">    --restart=always \\</span><br><span class=\"line\">    -v /bw-data/:/data/ \\</span><br><span class=\"line\">    -p 127.0.0.1:8080:80 \\</span><br><span class=\"line\">    -p 127.0.0.1:3012:3012 \\</span><br><span class=\"line\">    vaultwarden/server:latest</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h2><figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name bitwarden.ao.abc;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">          # proxy_pass http://localhost:5230;</span><br><span class=\"line\">          # proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求</span><br><span class=\"line\">      # proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">      return 301 https://$host$request_uri;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 443 ssl;</span><br><span class=\"line\">        listen [::]:443;</span><br><span class=\"line\"></span><br><span class=\"line\">        server_name bitwarden.ao.abc;</span><br><span class=\"line\">        ssl_certificate      ao.abc+4.pem;</span><br><span class=\"line\">  ssl_certificate_key  ao.abc+4-key.pem;</span><br><span class=\"line\"></span><br><span class=\"line\">        # SSL 会话配置</span><br><span class=\"line\">  ssl_session_cache    shared:SSL:10m;</span><br><span class=\"line\">  ssl_session_timeout  10m;</span><br><span class=\"line\"></span><br><span class=\"line\">        # SSL 协议、加密配置</span><br><span class=\"line\">  ssl_protocols  TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class=\"line\">  ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class=\"line\">  ssl_prefer_server_ciphers  on;</span><br><span class=\"line\"></span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">    proxy_pass http://localhost:8080;</span><br><span class=\"line\">    proxy_set_header Host $host;</span><br><span class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  location /notifications/hub &#123;</span><br><span class=\"line\">    proxy_pass http://localhost:3012;</span><br><span class=\"line\">    proxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  location /notifications/hub/negotiate &#123;</span><br><span class=\"line\">    proxy_pass http://localhost:8080;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://pimylifeup.com/raspberry-pi-bitwarden/\">pimylifeup</a></p>\n"},{"title":"树莓派安装 mariadb","date":"2024-02-01T16:04:39.000Z","_content":"## 安装\n\n```bash\nsudo apt install mariadb-server\n\nsudo mysql_secure_installation\n```\n\n## 参考文章\n\n[PiMyLife](https://pimylifeup.com/raspberry-pi-mysql/)\n","source":"_posts/pi-install-mariadb.md","raw":"---\ntitle: 树莓派安装 mariadb\ndate: 2024-02-02 00:04:39\ncategories:\n- raspberry-pi\ntags:\n- mariadb\n---\n## 安装\n\n```bash\nsudo apt install mariadb-server\n\nsudo mysql_secure_installation\n```\n\n## 参考文章\n\n[PiMyLife](https://pimylifeup.com/raspberry-pi-mysql/)\n","slug":"pi-install-mariadb","published":1,"updated":"2024-02-02T02:46:22.790Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmp000ni0uxaci2h60j","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mariadb-server</span><br><span class=\"line\"></span><br><span class=\"line\">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://pimylifeup.com/raspberry-pi-mysql/\">PiMyLife</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install mariadb-server</span><br><span class=\"line\"></span><br><span class=\"line\">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://pimylifeup.com/raspberry-pi-mysql/\">PiMyLife</a></p>\n"},{"title":"Ubuntu 启动 CloudFlare 端口模式","date":"2024-02-01T16:09:46.000Z","_content":"<div class=\"justified-gallery\">\n\n![655df1d56c1df](655df1d56c1df.png)\n\n</div>\n\n```shell\nwarp-cli set-mode proxy\nwarp-cli set-proxy-port 3200\nwarp-cli connect\n```\n\n```shell\nchmod u+x ./warp-yxip.sh\nwarp-cli set-custom-endpoint 162.159.195.98:3476\n```\n\n<div class=\"justified-gallery\">\n\n![655e19260504a](655e19260504a.png)\n\n</div>\n\n## 附件\n\n[warp-yxip.sh](warp-yxip.sh)\n","source":"_posts/ubuntu-cloudflare-proxy-port.md","raw":"---\ntitle: Ubuntu 启动 CloudFlare 端口模式\ndate: 2024-02-02 00:09:46\ncategories:\n- ubuntu\ntags:\n- cloudflare\n---\n<div class=\"justified-gallery\">\n\n![655df1d56c1df](655df1d56c1df.png)\n\n</div>\n\n```shell\nwarp-cli set-mode proxy\nwarp-cli set-proxy-port 3200\nwarp-cli connect\n```\n\n```shell\nchmod u+x ./warp-yxip.sh\nwarp-cli set-custom-endpoint 162.159.195.98:3476\n```\n\n<div class=\"justified-gallery\">\n\n![655e19260504a](655e19260504a.png)\n\n</div>\n\n## 附件\n\n[warp-yxip.sh](warp-yxip.sh)\n","slug":"ubuntu-cloudflare-proxy-port","published":1,"updated":"2024-02-02T03:36:56.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmq000oi0ux3utp1a28","content":"<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-cloudflare-proxy-port/655df1d56c1df.png\" alt=\"655df1d56c1df\"></p>\n</div>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">warp-cli set-mode proxy</span><br><span class=\"line\">warp-cli set-proxy-port 3200</span><br><span class=\"line\">warp-cli connect</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod u+x ./warp-yxip.sh</span><br><span class=\"line\">warp-cli set-custom-endpoint 162.159.195.98:3476</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-cloudflare-proxy-port/655e19260504a.png\" alt=\"655e19260504a\"></p>\n</div>\n\n<h2 id=\"附件\"><a href=\"#附件\" class=\"headerlink\" title=\"附件\"></a>附件</h2><p><a href=\"warp-yxip.sh\">warp-yxip.sh</a></p>\n","site":{"data":{}},"excerpt":"","more":"<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-cloudflare-proxy-port/655df1d56c1df.png\" alt=\"655df1d56c1df\"></p>\n</div>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">warp-cli set-mode proxy</span><br><span class=\"line\">warp-cli set-proxy-port 3200</span><br><span class=\"line\">warp-cli connect</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod u+x ./warp-yxip.sh</span><br><span class=\"line\">warp-cli set-custom-endpoint 162.159.195.98:3476</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-cloudflare-proxy-port/655e19260504a.png\" alt=\"655e19260504a\"></p>\n</div>\n\n<h2 id=\"附件\"><a href=\"#附件\" class=\"headerlink\" title=\"附件\"></a>附件</h2><p><a href=\"warp-yxip.sh\">warp-yxip.sh</a></p>\n"},{"title":"macOS Docker安装MySQL8","date":"2024-02-01T15:33:06.000Z","_content":"### 版本号\n\n- macOS version `版本13.5 (22G74)`\n- Docker version `Docker version 24.0.6, build ed223bc`\n- MySQL version `mysql/mysql-server   latest    423da140c8c0   10 months ago   507MB` `mysql  Ver 8.0.32 for ·Linux on aarch64 (MySQL Community Server - GPL)`\n\n### 持久化安装\n\n新建一个mysql容器\n\n```shell\ndocker run --name mysql -p 3308:3306 -d mysql\n```\n\n从容器中复制一份my.cnf配置文件出来\n\n```shell\ndocker cp mysql:/etc/my.cnf /Users/ao/Desktop/docker/mysql\n```\n\n在复制出来的my.cnf文件中新增一条配置\n\n```txt\ndefault-authentication-plugin=mysql_native_password\n```\n\n删除容器\n\n```shell\ndocker stop 「容器ID」\ndocker remove 「容器ID」\n```\n\n<div class=\"justified-gallery\">\n\n![655633ee86ff7](655633ee86ff7.png)\n\n</div>\n\n### 启动mysql容器\n\n```shell\ndocker run --name mysql -v /Users/ao/Desktop/docker/mysql/my.cnf:/etc/my.cnf -v /Users/ao/Desktop/docker/mysql/data:/var/lib/mysql -p 3308:3306 -e MYSQL_ROOT_PASSWORD=Ywc1989@@ -d mysql/mysql-server\n```\n\n<div class=\"justified-gallery\">\n\n![6556341408363](6556341408363.png)\n\n</div>\n\n### Root用户允许远程登录\n\nmy.cnf添加配置行\n\n```shell\nbind-address = 0.0.0.0\n```\n\n进入容器配置\n\n```shell\ndocker exec -it mysql /bin/bash\nmysql -uroot -p\nuse mysql\nRENAME USER 'root'@'localhost' TO 'root'@'%';\nFLUSH PRIVILEGES;\n```\n\n<div class=\"justified-gallery\">\n\n![6556405f81268](6556405f81268.png)\n\n</div>\n\n### 参考文章\n\n- [CSDN MySQL Docker8](https://blog.csdn.net/qq_26709459/article/details/128931193)\n- [知乎MySQL配置远程访问-评论](https://zhuanlan.zhihu.com/p/60539230)\n","source":"_posts/macos-docker-mysql8.md","raw":"---\ntitle: macOS Docker安装MySQL8\ndate: 2024-02-01 23:33:06\ncategories:\n- macos\n- docker\ntags:\n- mysql\n---\n### 版本号\n\n- macOS version `版本13.5 (22G74)`\n- Docker version `Docker version 24.0.6, build ed223bc`\n- MySQL version `mysql/mysql-server   latest    423da140c8c0   10 months ago   507MB` `mysql  Ver 8.0.32 for ·Linux on aarch64 (MySQL Community Server - GPL)`\n\n### 持久化安装\n\n新建一个mysql容器\n\n```shell\ndocker run --name mysql -p 3308:3306 -d mysql\n```\n\n从容器中复制一份my.cnf配置文件出来\n\n```shell\ndocker cp mysql:/etc/my.cnf /Users/ao/Desktop/docker/mysql\n```\n\n在复制出来的my.cnf文件中新增一条配置\n\n```txt\ndefault-authentication-plugin=mysql_native_password\n```\n\n删除容器\n\n```shell\ndocker stop 「容器ID」\ndocker remove 「容器ID」\n```\n\n<div class=\"justified-gallery\">\n\n![655633ee86ff7](655633ee86ff7.png)\n\n</div>\n\n### 启动mysql容器\n\n```shell\ndocker run --name mysql -v /Users/ao/Desktop/docker/mysql/my.cnf:/etc/my.cnf -v /Users/ao/Desktop/docker/mysql/data:/var/lib/mysql -p 3308:3306 -e MYSQL_ROOT_PASSWORD=Ywc1989@@ -d mysql/mysql-server\n```\n\n<div class=\"justified-gallery\">\n\n![6556341408363](6556341408363.png)\n\n</div>\n\n### Root用户允许远程登录\n\nmy.cnf添加配置行\n\n```shell\nbind-address = 0.0.0.0\n```\n\n进入容器配置\n\n```shell\ndocker exec -it mysql /bin/bash\nmysql -uroot -p\nuse mysql\nRENAME USER 'root'@'localhost' TO 'root'@'%';\nFLUSH PRIVILEGES;\n```\n\n<div class=\"justified-gallery\">\n\n![6556405f81268](6556405f81268.png)\n\n</div>\n\n### 参考文章\n\n- [CSDN MySQL Docker8](https://blog.csdn.net/qq_26709459/article/details/128931193)\n- [知乎MySQL配置远程访问-评论](https://zhuanlan.zhihu.com/p/60539230)\n","slug":"macos-docker-mysql8","published":1,"updated":"2024-02-02T03:37:29.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfms000si0uxduhmc1m4","content":"<h3 id=\"版本号\"><a href=\"#版本号\" class=\"headerlink\" title=\"版本号\"></a>版本号</h3><ul>\n<li>macOS version <code>版本13.5 (22G74)</code></li>\n<li>Docker version <code>Docker version 24.0.6, build ed223bc</code></li>\n<li>MySQL version <code>mysql/mysql-server   latest    423da140c8c0   10 months ago   507MB</code> <code>mysql  Ver 8.0.32 for ·Linux on aarch64 (MySQL Community Server - GPL)</code></li>\n</ul>\n<h3 id=\"持久化安装\"><a href=\"#持久化安装\" class=\"headerlink\" title=\"持久化安装\"></a>持久化安装</h3><p>新建一个mysql容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -p 3308:3306 -d mysql</span><br></pre></td></tr></table></figure>\n\n<p>从容器中复制一份my.cnf配置文件出来</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp mysql:/etc/my.cnf /Users/ao/Desktop/docker/mysql</span><br></pre></td></tr></table></figure>\n\n<p>在复制出来的my.cnf文件中新增一条配置</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">default-authentication-plugin=mysql_native_password</span><br></pre></td></tr></table></figure>\n\n<p>删除容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop 「容器ID」</span><br><span class=\"line\">docker remove 「容器ID」</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/655633ee86ff7.png\" alt=\"655633ee86ff7\"></p>\n</div>\n\n<h3 id=\"启动mysql容器\"><a href=\"#启动mysql容器\" class=\"headerlink\" title=\"启动mysql容器\"></a>启动mysql容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -v /Users/ao/Desktop/docker/mysql/my.cnf:/etc/my.cnf -v /Users/ao/Desktop/docker/mysql/data:/var/lib/mysql -p 3308:3306 -e MYSQL_ROOT_PASSWORD=Ywc1989@@ -d mysql/mysql-server</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/6556341408363.png\" alt=\"6556341408363\"></p>\n</div>\n\n<h3 id=\"Root用户允许远程登录\"><a href=\"#Root用户允许远程登录\" class=\"headerlink\" title=\"Root用户允许远程登录\"></a>Root用户允许远程登录</h3><p>my.cnf添加配置行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind-address = 0.0.0.0</span><br></pre></td></tr></table></figure>\n\n<p>进入容器配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it mysql /bin/bash</span><br><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">use mysql</span><br><span class=\"line\">RENAME USER &#x27;root&#x27;@&#x27;localhost&#x27; TO &#x27;root&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/6556405f81268.png\" alt=\"6556405f81268\"></p>\n</div>\n\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"https://blog.csdn.net/qq_26709459/article/details/128931193\">CSDN MySQL Docker8</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/60539230\">知乎MySQL配置远程访问-评论</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"版本号\"><a href=\"#版本号\" class=\"headerlink\" title=\"版本号\"></a>版本号</h3><ul>\n<li>macOS version <code>版本13.5 (22G74)</code></li>\n<li>Docker version <code>Docker version 24.0.6, build ed223bc</code></li>\n<li>MySQL version <code>mysql/mysql-server   latest    423da140c8c0   10 months ago   507MB</code> <code>mysql  Ver 8.0.32 for ·Linux on aarch64 (MySQL Community Server - GPL)</code></li>\n</ul>\n<h3 id=\"持久化安装\"><a href=\"#持久化安装\" class=\"headerlink\" title=\"持久化安装\"></a>持久化安装</h3><p>新建一个mysql容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -p 3308:3306 -d mysql</span><br></pre></td></tr></table></figure>\n\n<p>从容器中复制一份my.cnf配置文件出来</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp mysql:/etc/my.cnf /Users/ao/Desktop/docker/mysql</span><br></pre></td></tr></table></figure>\n\n<p>在复制出来的my.cnf文件中新增一条配置</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">default-authentication-plugin=mysql_native_password</span><br></pre></td></tr></table></figure>\n\n<p>删除容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop 「容器ID」</span><br><span class=\"line\">docker remove 「容器ID」</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/655633ee86ff7.png\" alt=\"655633ee86ff7\"></p>\n</div>\n\n<h3 id=\"启动mysql容器\"><a href=\"#启动mysql容器\" class=\"headerlink\" title=\"启动mysql容器\"></a>启动mysql容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -v /Users/ao/Desktop/docker/mysql/my.cnf:/etc/my.cnf -v /Users/ao/Desktop/docker/mysql/data:/var/lib/mysql -p 3308:3306 -e MYSQL_ROOT_PASSWORD=Ywc1989@@ -d mysql/mysql-server</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/6556341408363.png\" alt=\"6556341408363\"></p>\n</div>\n\n<h3 id=\"Root用户允许远程登录\"><a href=\"#Root用户允许远程登录\" class=\"headerlink\" title=\"Root用户允许远程登录\"></a>Root用户允许远程登录</h3><p>my.cnf添加配置行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind-address = 0.0.0.0</span><br></pre></td></tr></table></figure>\n\n<p>进入容器配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it mysql /bin/bash</span><br><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">use mysql</span><br><span class=\"line\">RENAME USER &#x27;root&#x27;@&#x27;localhost&#x27; TO &#x27;root&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/6556405f81268.png\" alt=\"6556405f81268\"></p>\n</div>\n\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"https://blog.csdn.net/qq_26709459/article/details/128931193\">CSDN MySQL Docker8</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/60539230\">知乎MySQL配置远程访问-评论</a></li>\n</ul>\n"},{"title":"Ubuntu 安装 Docker 和 docker-compose","date":"2024-02-01T16:15:22.000Z","_content":"## 软件版本\n\n```shell\nubuntu - Ubuntu 22.04.3 LTS x86_64\ndocker - Docker version 24.0.7, build afdd53b\ndocker-compose - Docker Compose version v2.23.1\n```\n\n## 安装docker\n\n```shell\n# Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  \"$(. /etc/os-release && echo \"$VERSION_CODENAME\")\" stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\n```\n\n```shell\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n```\n\n## 安装docker-compose\n\n[GitHub](https://github.com/docker/compose/releases/)\n\n```shell\nwget https://github.com/docker/compose/releases/download/v2.23.1/docker-compose-linux-x86_64\nmv mv docker-compose-linux-x86_64 docker-compose\nchmod u+x docker-compose\nsudo mv docker-compose /usr/local/bin/docker-compose\nln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\ndocker-compose --version\n```\n\n## 将用户加入docker组\n\n```shell\nsudo usermod -aG docker $USER\n```\n\n## 参考文章\n\n[docker](https://docs.docker.com/engine/install/ubuntu/)\n","source":"_posts/ubuntu-install-docker-dockercompose.md","raw":"---\ntitle: Ubuntu 安装 Docker 和 docker-compose\ndate: 2024-02-02 00:15:22\ncategories:\n- ubuntu\n- docker\ntags:\n---\n## 软件版本\n\n```shell\nubuntu - Ubuntu 22.04.3 LTS x86_64\ndocker - Docker version 24.0.7, build afdd53b\ndocker-compose - Docker Compose version v2.23.1\n```\n\n## 安装docker\n\n```shell\n# Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  \"$(. /etc/os-release && echo \"$VERSION_CODENAME\")\" stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\n```\n\n```shell\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n```\n\n## 安装docker-compose\n\n[GitHub](https://github.com/docker/compose/releases/)\n\n```shell\nwget https://github.com/docker/compose/releases/download/v2.23.1/docker-compose-linux-x86_64\nmv mv docker-compose-linux-x86_64 docker-compose\nchmod u+x docker-compose\nsudo mv docker-compose /usr/local/bin/docker-compose\nln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\ndocker-compose --version\n```\n\n## 将用户加入docker组\n\n```shell\nsudo usermod -aG docker $USER\n```\n\n## 参考文章\n\n[docker](https://docs.docker.com/engine/install/ubuntu/)\n","slug":"ubuntu-install-docker-dockercompose","published":1,"updated":"2024-02-02T02:47:01.829Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmt000ti0ux7hz48zz6","content":"<h2 id=\"软件版本\"><a href=\"#软件版本\" class=\"headerlink\" title=\"软件版本\"></a>软件版本</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu - Ubuntu 22.04.3 LTS x86_64</span><br><span class=\"line\">docker - Docker version 24.0.7, build afdd53b</span><br><span class=\"line\">docker-compose - Docker Compose version v2.23.1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add Docker<span class=\"string\">&#x27;s official GPG key:</span></span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install ca-certificates curl gnupg</span><br><span class=\"line\">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class=\"line\">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class=\"line\">sudo chmod a+r /etc/apt/keyrings/docker.gpg</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Add the repository to Apt sources:</span></span></span><br><span class=\"line\">echo \\</span><br><span class=\"line\">  &quot;deb [arch=&quot;$(dpkg --print-architecture)&quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\</span><br><span class=\"line\">  &quot;$(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;)&quot; stable&quot; | \\</span><br><span class=\"line\">  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装docker-compose\"><a href=\"#安装docker-compose\" class=\"headerlink\" title=\"安装docker-compose\"></a>安装docker-compose</h2><p><a href=\"https://github.com/docker/compose/releases/\">GitHub</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/docker/compose/releases/download/v2.23.1/docker-compose-linux-x86_64</span><br><span class=\"line\">mv mv docker-compose-linux-x86_64 docker-compose</span><br><span class=\"line\">chmod u+x docker-compose</span><br><span class=\"line\">sudo mv docker-compose /usr/local/bin/docker-compose</span><br><span class=\"line\">ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class=\"line\">docker-compose --version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"将用户加入docker组\"><a href=\"#将用户加入docker组\" class=\"headerlink\" title=\"将用户加入docker组\"></a>将用户加入docker组</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://docs.docker.com/engine/install/ubuntu/\">docker</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"软件版本\"><a href=\"#软件版本\" class=\"headerlink\" title=\"软件版本\"></a>软件版本</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu - Ubuntu 22.04.3 LTS x86_64</span><br><span class=\"line\">docker - Docker version 24.0.7, build afdd53b</span><br><span class=\"line\">docker-compose - Docker Compose version v2.23.1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add Docker<span class=\"string\">&#x27;s official GPG key:</span></span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install ca-certificates curl gnupg</span><br><span class=\"line\">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class=\"line\">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class=\"line\">sudo chmod a+r /etc/apt/keyrings/docker.gpg</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Add the repository to Apt sources:</span></span></span><br><span class=\"line\">echo \\</span><br><span class=\"line\">  &quot;deb [arch=&quot;$(dpkg --print-architecture)&quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\</span><br><span class=\"line\">  &quot;$(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;)&quot; stable&quot; | \\</span><br><span class=\"line\">  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装docker-compose\"><a href=\"#安装docker-compose\" class=\"headerlink\" title=\"安装docker-compose\"></a>安装docker-compose</h2><p><a href=\"https://github.com/docker/compose/releases/\">GitHub</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/docker/compose/releases/download/v2.23.1/docker-compose-linux-x86_64</span><br><span class=\"line\">mv mv docker-compose-linux-x86_64 docker-compose</span><br><span class=\"line\">chmod u+x docker-compose</span><br><span class=\"line\">sudo mv docker-compose /usr/local/bin/docker-compose</span><br><span class=\"line\">ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class=\"line\">docker-compose --version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"将用户加入docker组\"><a href=\"#将用户加入docker组\" class=\"headerlink\" title=\"将用户加入docker组\"></a>将用户加入docker组</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://docs.docker.com/engine/install/ubuntu/\">docker</a></p>\n"},{"title":"Ubuntu mv、cp 命令添加进度条","date":"2024-02-01T16:06:47.000Z","_content":"cp和mv是GNU coreutils的一部分，首先下载最新的GNU源码。\n[地址](https://ftp.gnu.org/gnu/coreutils/)\n最新的为9.1\n`wget https://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz`\n\n## 解压\n\n```shell\ntar -xf coreutils-9.1.tar.xz\n\ncd coreutils-9.1\n\nwget https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.9-9.1.patch\n```\n\n## 打补丁\n\n```shell\npatch -p1 -i advcpmv-0.9-9.1.patch\n\n./configure\n\nmake\n\nsudo cp src/mv src/cp /usr/local/bin\n\nvim ~/.zshrc\n\nalias cp='/usr/local/bin/cp -gR'\nalias mv='/usr/local/bin/mv -g'\n```\n","source":"_posts/ubuntu-mv-cp-status.md","raw":"---\ntitle: Ubuntu mv、cp 命令添加进度条\ndate: 2024-02-02 00:06:47\ncategories:\n- ubuntu\ntags:\n- terminal\n---\ncp和mv是GNU coreutils的一部分，首先下载最新的GNU源码。\n[地址](https://ftp.gnu.org/gnu/coreutils/)\n最新的为9.1\n`wget https://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz`\n\n## 解压\n\n```shell\ntar -xf coreutils-9.1.tar.xz\n\ncd coreutils-9.1\n\nwget https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.9-9.1.patch\n```\n\n## 打补丁\n\n```shell\npatch -p1 -i advcpmv-0.9-9.1.patch\n\n./configure\n\nmake\n\nsudo cp src/mv src/cp /usr/local/bin\n\nvim ~/.zshrc\n\nalias cp='/usr/local/bin/cp -gR'\nalias mv='/usr/local/bin/mv -g'\n```\n","slug":"ubuntu-mv-cp-status","published":1,"updated":"2024-02-02T02:47:29.512Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmu000vi0ux85ongrfn","content":"<p>cp和mv是GNU coreutils的一部分，首先下载最新的GNU源码。<br><a href=\"https://ftp.gnu.org/gnu/coreutils/\">地址</a><br>最新的为9.1<br><code>wget https://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz</code></p>\n<h2 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xf coreutils-9.1.tar.xz</span><br><span class=\"line\"></span><br><span class=\"line\">cd coreutils-9.1</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.9-9.1.patch</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"打补丁\"><a href=\"#打补丁\" class=\"headerlink\" title=\"打补丁\"></a>打补丁</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">patch -p1 -i advcpmv-0.9-9.1.patch</span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp src/mv src/cp /usr/local/bin</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">alias cp=&#x27;/usr/local/bin/cp -gR&#x27;</span><br><span class=\"line\">alias mv=&#x27;/usr/local/bin/mv -g&#x27;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>cp和mv是GNU coreutils的一部分，首先下载最新的GNU源码。<br><a href=\"https://ftp.gnu.org/gnu/coreutils/\">地址</a><br>最新的为9.1<br><code>wget https://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz</code></p>\n<h2 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xf coreutils-9.1.tar.xz</span><br><span class=\"line\"></span><br><span class=\"line\">cd coreutils-9.1</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.9-9.1.patch</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"打补丁\"><a href=\"#打补丁\" class=\"headerlink\" title=\"打补丁\"></a>打补丁</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">patch -p1 -i advcpmv-0.9-9.1.patch</span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cp src/mv src/cp /usr/local/bin</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">alias cp=&#x27;/usr/local/bin/cp -gR&#x27;</span><br><span class=\"line\">alias mv=&#x27;/usr/local/bin/mv -g&#x27;</span><br></pre></td></tr></table></figure>\n"},{"title":"Ubuntu 开机启动 frp 内网穿透","date":"2024-02-01T16:16:23.000Z","_content":"## 创建文件\n\n```shell\nsudo vim /etc/systemd/system/frpc.service\n```\n\n文件内容\n\n```txt\nDescription=My Frp Client Service - %i                                                                                                                    \nAfter=network.target syslog.target\nWants=network.target\n\n[Service]\nType=simple\nRestart=on-failure\nRestartSec=5s\nExecStart=/bin/bash -c '/home/ao/frp-ubuntu/frpc -c /home/ao/frp-ubuntu/frpc.toml'\n\n[Install]\nWantedBy=multi-user.target\n```\n\n启用服务\n\n```shell\nsudo systemctl daemon-reload\nsudo systemctl enable frpc\nsudo systemctl start frpc\n```\n","source":"_posts/ubuntu-install-frp.md","raw":"---\ntitle: Ubuntu 开机启动 frp 内网穿透\ndate: 2024-02-02 00:16:23\ncategories:\n- ubuntu\n- frp\ntags:\n- frpc\n---\n## 创建文件\n\n```shell\nsudo vim /etc/systemd/system/frpc.service\n```\n\n文件内容\n\n```txt\nDescription=My Frp Client Service - %i                                                                                                                    \nAfter=network.target syslog.target\nWants=network.target\n\n[Service]\nType=simple\nRestart=on-failure\nRestartSec=5s\nExecStart=/bin/bash -c '/home/ao/frp-ubuntu/frpc -c /home/ao/frp-ubuntu/frpc.toml'\n\n[Install]\nWantedBy=multi-user.target\n```\n\n启用服务\n\n```shell\nsudo systemctl daemon-reload\nsudo systemctl enable frpc\nsudo systemctl start frpc\n```\n","slug":"ubuntu-install-frp","published":1,"updated":"2024-02-02T02:47:16.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmv0010i0uxbi7h7drd","content":"<h2 id=\"创建文件\"><a href=\"#创建文件\" class=\"headerlink\" title=\"创建文件\"></a>创建文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/systemd/system/frpc.service</span><br></pre></td></tr></table></figure>\n\n<p>文件内容</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Description=My Frp Client Service - %i                                                                                                                    </span><br><span class=\"line\">After=network.target syslog.target</span><br><span class=\"line\">Wants=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=5s</span><br><span class=\"line\">ExecStart=/bin/bash -c &#x27;/home/ao/frp-ubuntu/frpc -c /home/ao/frp-ubuntu/frpc.toml&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>启用服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl enable frpc</span><br><span class=\"line\">sudo systemctl start frpc</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建文件\"><a href=\"#创建文件\" class=\"headerlink\" title=\"创建文件\"></a>创建文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/systemd/system/frpc.service</span><br></pre></td></tr></table></figure>\n\n<p>文件内容</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Description=My Frp Client Service - %i                                                                                                                    </span><br><span class=\"line\">After=network.target syslog.target</span><br><span class=\"line\">Wants=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=5s</span><br><span class=\"line\">ExecStart=/bin/bash -c &#x27;/home/ao/frp-ubuntu/frpc -c /home/ao/frp-ubuntu/frpc.toml&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>启用服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl enable frpc</span><br><span class=\"line\">sudo systemctl start frpc</span><br></pre></td></tr></table></figure>\n"},{"title":"UbuntuServer 安装初始化设置","date":"2024-02-01T16:07:33.000Z","_content":"## 安装CloudFlare\n\n```shell\n# Add cloudflare gpg key\ncurl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg\n\n\n# Add this repo to your apt repositories\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list\n\n\n# Install\nsudo apt-get update && sudo apt-get install cloudflare-warp\n```\n\n## 更新\n\n```shell\nsudo apt update -y && sudo apt upgrade -y\n```\n\n## 去掉碍眼的提示\n\n```shell\nNo containers need to be restarted.\n\nNo user sessions are running outdated binaries.\n\nNo VM guests are running outdated hypervisor (qemu) binaries on this host.\n```\n\n```shell\nsudo apt purge needrestart -y\n```\n\n## 使用全部磁盘空间\n\n<div class=\"justified-gallery\">\n\n![磁盘没有全部使用](655c63e9bcb76.png)\n\n</div>\n\n```shell\n# 查看现有的卷组\nsudo vgdisplay\n# 扩展现有的逻辑卷\nsudo lvextend -l +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv\n# 重新计算逻辑卷大小\nsudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv\n```\n\n## 安装oh-my-zsh\n\n```shell\n# 安装zsh\nsudo apt install zsh -y\n# 切换zsh\nchsh -s /bin/zsh\n# 安装oh-my-zsh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n# 安装插件\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\ngit clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/fast-syntax-highlighting\n\ngit clone https://github.com/marlonrichert/zsh-autocomplete.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autocomplete\n```\n\n## 安装nvm\n\n```shell\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash\n# 设置淘宝源\nvim ~/.zshrc\n\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\n\nvim ~/.npmrc\n\nregistry https://registry.npm.taobao.org\n\n# npm 安装全局插件\nnpm i -g prettier eslint stylelint pnpm yarn\n```\n\n## 安装Docker\n\n## 参考文章\n\n- [1.1.1.1 CloudFlare-Ubuntu](https://pkg.cloudflareclient.com/)\n","source":"_posts/ubuntu-server-install-init.md","raw":"---\ntitle: UbuntuServer 安装初始化设置\ndate: 2024-02-02 00:07:33\ntags:\n---\n## 安装CloudFlare\n\n```shell\n# Add cloudflare gpg key\ncurl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg\n\n\n# Add this repo to your apt repositories\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list\n\n\n# Install\nsudo apt-get update && sudo apt-get install cloudflare-warp\n```\n\n## 更新\n\n```shell\nsudo apt update -y && sudo apt upgrade -y\n```\n\n## 去掉碍眼的提示\n\n```shell\nNo containers need to be restarted.\n\nNo user sessions are running outdated binaries.\n\nNo VM guests are running outdated hypervisor (qemu) binaries on this host.\n```\n\n```shell\nsudo apt purge needrestart -y\n```\n\n## 使用全部磁盘空间\n\n<div class=\"justified-gallery\">\n\n![磁盘没有全部使用](655c63e9bcb76.png)\n\n</div>\n\n```shell\n# 查看现有的卷组\nsudo vgdisplay\n# 扩展现有的逻辑卷\nsudo lvextend -l +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv\n# 重新计算逻辑卷大小\nsudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv\n```\n\n## 安装oh-my-zsh\n\n```shell\n# 安装zsh\nsudo apt install zsh -y\n# 切换zsh\nchsh -s /bin/zsh\n# 安装oh-my-zsh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n# 安装插件\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\ngit clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/fast-syntax-highlighting\n\ngit clone https://github.com/marlonrichert/zsh-autocomplete.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autocomplete\n```\n\n## 安装nvm\n\n```shell\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash\n# 设置淘宝源\nvim ~/.zshrc\n\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\n\nvim ~/.npmrc\n\nregistry https://registry.npm.taobao.org\n\n# npm 安装全局插件\nnpm i -g prettier eslint stylelint pnpm yarn\n```\n\n## 安装Docker\n\n## 参考文章\n\n- [1.1.1.1 CloudFlare-Ubuntu](https://pkg.cloudflareclient.com/)\n","slug":"ubuntu-server-install-init","published":1,"updated":"2024-02-02T03:36:28.121Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfmw0012i0uxe3gvd1m0","content":"<h2 id=\"安装CloudFlare\"><a href=\"#安装CloudFlare\" class=\"headerlink\" title=\"安装CloudFlare\"></a>安装CloudFlare</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add cloudflare gpg key</span></span><br><span class=\"line\">curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add this repo to your apt repositories</span></span><br><span class=\"line\">echo &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main&quot; | sudo tee /etc/apt/sources.list.d/cloudflare-client.list</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Install</span></span><br><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get install cloudflare-warp</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update -y &amp;&amp; sudo apt upgrade -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"去掉碍眼的提示\"><a href=\"#去掉碍眼的提示\" class=\"headerlink\" title=\"去掉碍眼的提示\"></a>去掉碍眼的提示</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">No containers need to be restarted.</span><br><span class=\"line\"></span><br><span class=\"line\">No user sessions are running outdated binaries.</span><br><span class=\"line\"></span><br><span class=\"line\">No VM guests are running outdated hypervisor (qemu) binaries on this host.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt purge needrestart -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用全部磁盘空间\"><a href=\"#使用全部磁盘空间\" class=\"headerlink\" title=\"使用全部磁盘空间\"></a>使用全部磁盘空间</h2><div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-server-install-init/655c63e9bcb76.png\" alt=\"磁盘没有全部使用\"></p>\n</div>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看现有的卷组</span></span><br><span class=\"line\">sudo vgdisplay</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">扩展现有的逻辑卷</span></span><br><span class=\"line\">sudo lvextend -l +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重新计算逻辑卷大小</span></span><br><span class=\"line\">sudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装oh-my-zsh\"><a href=\"#安装oh-my-zsh\" class=\"headerlink\" title=\"安装oh-my-zsh\"></a>安装oh-my-zsh</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装zsh</span></span><br><span class=\"line\">sudo apt install zsh -y</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">切换zsh</span></span><br><span class=\"line\">chsh -s /bin/zsh</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装oh-my-zsh</span></span><br><span class=\"line\">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装插件</span></span><br><span class=\"line\">git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/plugins/fast-syntax-highlighting</span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://github.com/marlonrichert/zsh-autocomplete.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/plugins/zsh-autocomplete</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置淘宝源</span></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.npmrc</span><br><span class=\"line\"></span><br><span class=\"line\">registry https://registry.npm.taobao.org</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">npm 安装全局插件</span></span><br><span class=\"line\">npm i -g prettier eslint stylelint pnpm yarn</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h2><h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://pkg.cloudflareclient.com/\">1.1.1.1 CloudFlare-Ubuntu</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装CloudFlare\"><a href=\"#安装CloudFlare\" class=\"headerlink\" title=\"安装CloudFlare\"></a>安装CloudFlare</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add cloudflare gpg key</span></span><br><span class=\"line\">curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add this repo to your apt repositories</span></span><br><span class=\"line\">echo &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main&quot; | sudo tee /etc/apt/sources.list.d/cloudflare-client.list</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Install</span></span><br><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get install cloudflare-warp</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update -y &amp;&amp; sudo apt upgrade -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"去掉碍眼的提示\"><a href=\"#去掉碍眼的提示\" class=\"headerlink\" title=\"去掉碍眼的提示\"></a>去掉碍眼的提示</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">No containers need to be restarted.</span><br><span class=\"line\"></span><br><span class=\"line\">No user sessions are running outdated binaries.</span><br><span class=\"line\"></span><br><span class=\"line\">No VM guests are running outdated hypervisor (qemu) binaries on this host.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt purge needrestart -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用全部磁盘空间\"><a href=\"#使用全部磁盘空间\" class=\"headerlink\" title=\"使用全部磁盘空间\"></a>使用全部磁盘空间</h2><div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-server-install-init/655c63e9bcb76.png\" alt=\"磁盘没有全部使用\"></p>\n</div>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看现有的卷组</span></span><br><span class=\"line\">sudo vgdisplay</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">扩展现有的逻辑卷</span></span><br><span class=\"line\">sudo lvextend -l +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重新计算逻辑卷大小</span></span><br><span class=\"line\">sudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装oh-my-zsh\"><a href=\"#安装oh-my-zsh\" class=\"headerlink\" title=\"安装oh-my-zsh\"></a>安装oh-my-zsh</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装zsh</span></span><br><span class=\"line\">sudo apt install zsh -y</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">切换zsh</span></span><br><span class=\"line\">chsh -s /bin/zsh</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装oh-my-zsh</span></span><br><span class=\"line\">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装插件</span></span><br><span class=\"line\">git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/plugins/fast-syntax-highlighting</span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://github.com/marlonrichert/zsh-autocomplete.git $&#123;ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom&#125;/plugins/zsh-autocomplete</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置淘宝源</span></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.npmrc</span><br><span class=\"line\"></span><br><span class=\"line\">registry https://registry.npm.taobao.org</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">npm 安装全局插件</span></span><br><span class=\"line\">npm i -g prettier eslint stylelint pnpm yarn</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h2><h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://pkg.cloudflareclient.com/\">1.1.1.1 CloudFlare-Ubuntu</a></li>\n</ul>\n"},{"title":"Hexo 文章中 assets file 404","date":"2024-02-02T00:59:07.000Z","_content":"## 问题\n\n部署 hexo 博客到 GitHub page 之后发现文章中的图片 404， 而且归档的日期差了一天，猜测是时区的问题，查找一下相关资料，更改了 CICD 的配置即可。\n\n## .github/workflows/main.yml\n\n```yml 增加配置\n- name: Set Timezone\n  run: |\n    sudo timedatectl set-timezone Asia/Shanghai\n    timedatectl\n\n- name: Prepare Node env\n  uses: actions/setup-node@v3\n  with:\n    ...\n```\n\n## 参考文章\n\n- [wrongpermalinksdate](https://finisky.github.io/wrongpermalinksdate/)\n","source":"_posts/hexo-timezone-issue-fix.md","raw":"---\ntitle: Hexo 文章中 assets file 404\ndate: 2024-02-02 08:59:07\ncategories:\n- hexo\ntags:\n- assets\n- 404\n---\n## 问题\n\n部署 hexo 博客到 GitHub page 之后发现文章中的图片 404， 而且归档的日期差了一天，猜测是时区的问题，查找一下相关资料，更改了 CICD 的配置即可。\n\n## .github/workflows/main.yml\n\n```yml 增加配置\n- name: Set Timezone\n  run: |\n    sudo timedatectl set-timezone Asia/Shanghai\n    timedatectl\n\n- name: Prepare Node env\n  uses: actions/setup-node@v3\n  with:\n    ...\n```\n\n## 参考文章\n\n- [wrongpermalinksdate](https://finisky.github.io/wrongpermalinksdate/)\n","slug":"hexo-timezone-issue-fix","published":1,"updated":"2024-02-02T05:57:32.068Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfn10017i0ux3u6u5ipy","content":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>部署 hexo 博客到 GitHub page 之后发现文章中的图片 404， 而且归档的日期差了一天，猜测是时区的问题，查找一下相关资料，更改了 CICD 的配置即可。</p>\n<h2 id=\"github-workflows-main-yml\"><a href=\"#github-workflows-main-yml\" class=\"headerlink\" title=\".github&#x2F;workflows&#x2F;main.yml\"></a>.github&#x2F;workflows&#x2F;main.yml</h2><figure class=\"highlight yml\"><figcaption><span>增加配置</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Set</span> <span class=\"string\">Timezone</span></span><br><span class=\"line\">  <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">    sudo timedatectl set-timezone Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"string\">    timedatectl</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Prepare</span> <span class=\"string\">Node</span> <span class=\"string\">env</span></span><br><span class=\"line\">  <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v3</span></span><br><span class=\"line\">  <span class=\"attr\">with:</span></span><br><span class=\"line\">    <span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://finisky.github.io/wrongpermalinksdate/\">wrongpermalinksdate</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>部署 hexo 博客到 GitHub page 之后发现文章中的图片 404， 而且归档的日期差了一天，猜测是时区的问题，查找一下相关资料，更改了 CICD 的配置即可。</p>\n<h2 id=\"github-workflows-main-yml\"><a href=\"#github-workflows-main-yml\" class=\"headerlink\" title=\".github&#x2F;workflows&#x2F;main.yml\"></a>.github&#x2F;workflows&#x2F;main.yml</h2><figure class=\"highlight yml\"><figcaption><span>增加配置</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Set</span> <span class=\"string\">Timezone</span></span><br><span class=\"line\">  <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">    sudo timedatectl set-timezone Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"string\">    timedatectl</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Prepare</span> <span class=\"string\">Node</span> <span class=\"string\">env</span></span><br><span class=\"line\">  <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v3</span></span><br><span class=\"line\">  <span class=\"attr\">with:</span></span><br><span class=\"line\">    <span class=\"string\">...</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://finisky.github.io/wrongpermalinksdate/\">wrongpermalinksdate</a></li>\n</ul>\n"},{"title":"Ubuntu 设置时区","date":"2024-02-01T16:17:18.000Z","_content":"## 查看时区\n\ntimedatectl是一个命令行工具，它允许你查看或者修改系统的时间和日期。它在所有现代的基于System的 Linux系统中都可以使用，包括Ubuntu20.04。\n\n想要打印当前系统时区，不带参数运行timedatectl。\n\n```shell\nsudo timedatectl\n```\n\n下面的输出显示系统时区被设置为\"UTC\":\n<div class=\"justified-gallery\">\n\n![655dee1461a02](655dee1461a02.png)\n\n</div>\n系统时区通过链接文件/etc/localtime配置，该链接指向/usr/share/zoneinfo目录下的一个二进制时区标识文件。另外一个检查时区的方法就是显示这个链接文件指向的实际路径，使用ls命令：\n<div class=\"justified-gallery\">\n\n![655dee6edb536](655dee6edb536.png)\n\n</div>\n系统的时区同时也被写入/etc/timezone文件：\n<div class=\"justified-gallery\">\n\n![655dee9f3d7df](655dee9f3d7df.png)\n</div>\n\n## 使用timedatectl命令修改时区\n\n```shell\nsudo timedatectl list-timezones\n\nsudo timedatectl set-timezone\n```\n\n<div class=\"justified-gallery\">\n\n![655def839b174](655def839b174.png)\n\n</div>\n","source":"_posts/ubuntu-time-zone.md","raw":"---\ntitle: Ubuntu 设置时区\ndate: 2024-02-02 00:17:18\ncategories:\n- ubuntu\ntags:\n- timezone\n---\n## 查看时区\n\ntimedatectl是一个命令行工具，它允许你查看或者修改系统的时间和日期。它在所有现代的基于System的 Linux系统中都可以使用，包括Ubuntu20.04。\n\n想要打印当前系统时区，不带参数运行timedatectl。\n\n```shell\nsudo timedatectl\n```\n\n下面的输出显示系统时区被设置为\"UTC\":\n<div class=\"justified-gallery\">\n\n![655dee1461a02](655dee1461a02.png)\n\n</div>\n系统时区通过链接文件/etc/localtime配置，该链接指向/usr/share/zoneinfo目录下的一个二进制时区标识文件。另外一个检查时区的方法就是显示这个链接文件指向的实际路径，使用ls命令：\n<div class=\"justified-gallery\">\n\n![655dee6edb536](655dee6edb536.png)\n\n</div>\n系统的时区同时也被写入/etc/timezone文件：\n<div class=\"justified-gallery\">\n\n![655dee9f3d7df](655dee9f3d7df.png)\n</div>\n\n## 使用timedatectl命令修改时区\n\n```shell\nsudo timedatectl list-timezones\n\nsudo timedatectl set-timezone\n```\n\n<div class=\"justified-gallery\">\n\n![655def839b174](655def839b174.png)\n\n</div>\n","slug":"ubuntu-time-zone","published":1,"updated":"2024-02-02T03:36:17.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls49tfn20019i0ux7ood7ye8","content":"<h2 id=\"查看时区\"><a href=\"#查看时区\" class=\"headerlink\" title=\"查看时区\"></a>查看时区</h2><p>timedatectl是一个命令行工具，它允许你查看或者修改系统的时间和日期。它在所有现代的基于System的 Linux系统中都可以使用，包括Ubuntu20.04。</p>\n<p>想要打印当前系统时区，不带参数运行timedatectl。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo timedatectl</span><br></pre></td></tr></table></figure>\n\n<p>下面的输出显示系统时区被设置为”UTC”:</p>\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655dee1461a02.png\" alt=\"655dee1461a02\"></p>\n</div>\n系统时区通过链接文件/etc/localtime配置，该链接指向/usr/share/zoneinfo目录下的一个二进制时区标识文件。另外一个检查时区的方法就是显示这个链接文件指向的实际路径，使用ls命令：\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655dee6edb536.png\" alt=\"655dee6edb536\"></p>\n</div>\n系统的时区同时也被写入/etc/timezone文件：\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655dee9f3d7df.png\" alt=\"655dee9f3d7df\"></p>\n</div>\n\n<h2 id=\"使用timedatectl命令修改时区\"><a href=\"#使用timedatectl命令修改时区\" class=\"headerlink\" title=\"使用timedatectl命令修改时区\"></a>使用timedatectl命令修改时区</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo timedatectl list-timezones</span><br><span class=\"line\"></span><br><span class=\"line\">sudo timedatectl set-timezone</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655def839b174.png\" alt=\"655def839b174\"></p>\n</div>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"查看时区\"><a href=\"#查看时区\" class=\"headerlink\" title=\"查看时区\"></a>查看时区</h2><p>timedatectl是一个命令行工具，它允许你查看或者修改系统的时间和日期。它在所有现代的基于System的 Linux系统中都可以使用，包括Ubuntu20.04。</p>\n<p>想要打印当前系统时区，不带参数运行timedatectl。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo timedatectl</span><br></pre></td></tr></table></figure>\n\n<p>下面的输出显示系统时区被设置为”UTC”:</p>\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655dee1461a02.png\" alt=\"655dee1461a02\"></p>\n</div>\n系统时区通过链接文件/etc/localtime配置，该链接指向/usr/share/zoneinfo目录下的一个二进制时区标识文件。另外一个检查时区的方法就是显示这个链接文件指向的实际路径，使用ls命令：\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655dee6edb536.png\" alt=\"655dee6edb536\"></p>\n</div>\n系统的时区同时也被写入/etc/timezone文件：\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655dee9f3d7df.png\" alt=\"655dee9f3d7df\"></p>\n</div>\n\n<h2 id=\"使用timedatectl命令修改时区\"><a href=\"#使用timedatectl命令修改时区\" class=\"headerlink\" title=\"使用timedatectl命令修改时区\"></a>使用timedatectl命令修改时区</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo timedatectl list-timezones</span><br><span class=\"line\"></span><br><span class=\"line\">sudo timedatectl set-timezone</span><br></pre></td></tr></table></figure>\n\n<div class=\"justified-gallery\">\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655def839b174.png\" alt=\"655def839b174\"></p>\n</div>\n"}],"PostAsset":[{"_id":"source/_posts/javascript-element-scrolls-to-bottom/65581379c3845.png","post":"cls49tfm90001i0ux1mpe09ta","slug":"65581379c3845.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/655df1d56c1df.png","post":"cls49tfmq000oi0ux3utp1a28","slug":"655df1d56c1df.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/655e19260504a.png","post":"cls49tfmq000oi0ux3utp1a28","slug":"655e19260504a.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/warp-yxip.sh","post":"cls49tfmq000oi0ux3utp1a28","slug":"warp-yxip.sh","modified":1,"renderable":1},{"_id":"source/_posts/macos-docker-mysql8/655633ee86ff7.png","post":"cls49tfms000si0uxduhmc1m4","slug":"655633ee86ff7.png","modified":1,"renderable":1},{"_id":"source/_posts/macos-docker-mysql8/6556341408363.png","post":"cls49tfms000si0uxduhmc1m4","slug":"6556341408363.png","modified":1,"renderable":1},{"_id":"source/_posts/macos-docker-mysql8/6556405f81268.png","post":"cls49tfms000si0uxduhmc1m4","slug":"6556405f81268.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-server-install-init/655c63e9bcb76.png","post":"cls49tfmw0012i0uxe3gvd1m0","slug":"655c63e9bcb76.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-time-zone/655dee1461a02.png","post":"cls49tfn20019i0ux7ood7ye8","slug":"655dee1461a02.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-time-zone/655dee6edb536.png","post":"cls49tfn20019i0ux7ood7ye8","slug":"655dee6edb536.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-time-zone/655dee9f3d7df.png","post":"cls49tfn20019i0ux7ood7ye8","slug":"655dee9f3d7df.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-time-zone/655def839b174.png","post":"cls49tfn20019i0ux7ood7ye8","slug":"655def839b174.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cls49tfm90001i0ux1mpe09ta","category_id":"cls49tfmd0004i0uxfp2xe7si","_id":"cls49tfml000ei0ux8ruha442"},{"post_id":"cls49tfmc0003i0uxb8vxeaht","category_id":"cls49tfmi0009i0uxcwt28jxr","_id":"cls49tfmo000ki0uxfwpy5n6f"},{"post_id":"cls49tfmf0006i0ux6qoa3ljw","category_id":"cls49tfml000fi0ux8cib1tlb","_id":"cls49tfmr000pi0uxfv77by16"},{"post_id":"cls49tfmp000ni0uxaci2h60j","category_id":"cls49tfmo000li0ux5z139k3u","_id":"cls49tfmt000ui0uxg7sh45fe"},{"post_id":"cls49tfmg0007i0ux4cb7amd0","category_id":"cls49tfmo000li0ux5z139k3u","_id":"cls49tfmu000wi0ux8ocj3ipw"},{"post_id":"cls49tfmi0008i0ux89hjf000","category_id":"cls49tfmr000qi0uxhf3h5ier","_id":"cls49tfmw0013i0ux7ddf7tfw"},{"post_id":"cls49tfmk000di0uxhmuxbm8g","category_id":"cls49tfmo000li0ux5z139k3u","_id":"cls49tfn4001di0ux3mdo4tv4"},{"post_id":"cls49tfmm000hi0uxectjf7up","category_id":"cls49tfmo000li0ux5z139k3u","_id":"cls49tfn6001hi0uxbt6g3m8q"},{"post_id":"cls49tfmn000ji0ux5f2abyp2","category_id":"cls49tfmo000li0ux5z139k3u","_id":"cls49tfn6001li0ux2ngra964"},{"post_id":"cls49tfmq000oi0ux3utp1a28","category_id":"cls49tfn6001gi0ux7ft97hiv","_id":"cls49tfn8001qi0uxhgf9b717"},{"post_id":"cls49tfmu000vi0ux85ongrfn","category_id":"cls49tfn6001gi0ux7ft97hiv","_id":"cls49tfnb001zi0ux2bga2l0m"},{"post_id":"cls49tfmj000ci0uxe3sc6ktf","category_id":"cls49tfmu000xi0ux8zx826ba","_id":"cls49tfnc0025i0ux1e2ueus6"},{"post_id":"cls49tfmj000ci0uxe3sc6ktf","category_id":"cls49tfnb001yi0uxels3bff3","_id":"cls49tfnd0028i0uxgpb8bd3g"},{"post_id":"cls49tfn10017i0ux3u6u5ipy","category_id":"cls49tfnb0022i0uxg8ij4ap4","_id":"cls49tfnd002bi0uxd7l6e6hw"},{"post_id":"cls49tfn20019i0ux7ood7ye8","category_id":"cls49tfn6001gi0ux7ft97hiv","_id":"cls49tfnf002ei0uxaljrdttn"},{"post_id":"cls49tfms000si0uxduhmc1m4","category_id":"cls49tfmu000xi0ux8zx826ba","_id":"cls49tfnf002hi0uxgblw93wm"},{"post_id":"cls49tfms000si0uxduhmc1m4","category_id":"cls49tfnb001yi0uxels3bff3","_id":"cls49tfng002ki0ux7w48hbbq"},{"post_id":"cls49tfmt000ti0ux7hz48zz6","category_id":"cls49tfn6001gi0ux7ft97hiv","_id":"cls49tfng002li0uxcd284t7i"},{"post_id":"cls49tfmt000ti0ux7hz48zz6","category_id":"cls49tfne002di0ux86g3281h","_id":"cls49tfng002ni0ux2it5cmu2"},{"post_id":"cls49tfmv0010i0uxbi7h7drd","category_id":"cls49tfn6001gi0ux7ft97hiv","_id":"cls49tfng002qi0ux5rp4ba6a"},{"post_id":"cls49tfmv0010i0uxbi7h7drd","category_id":"cls49tfnf002ii0ux3twr0mm4","_id":"cls49tfng002ri0uxevmi6yq2"}],"PostTag":[{"post_id":"cls49tfm90001i0ux1mpe09ta","tag_id":"cls49tfmf0005i0uxbbqga17a","_id":"cls49tfmj000bi0ux9vkpdisu"},{"post_id":"cls49tfmc0003i0uxb8vxeaht","tag_id":"cls49tfmj000ai0uxgfbf7g3n","_id":"cls49tfmm000ii0ux7el4clh0"},{"post_id":"cls49tfmf0006i0ux6qoa3ljw","tag_id":"cls49tfmm000gi0uxdenvgva9","_id":"cls49tfmv000zi0uxdsu92v6e"},{"post_id":"cls49tfmf0006i0ux6qoa3ljw","tag_id":"cls49tfmp000mi0uxg0bw61nj","_id":"cls49tfmw0011i0ux1ff59oqq"},{"post_id":"cls49tfmf0006i0ux6qoa3ljw","tag_id":"cls49tfmr000ri0uxgswp80kc","_id":"cls49tfn10016i0ux6wyw1tej"},{"post_id":"cls49tfmg0007i0ux4cb7amd0","tag_id":"cls49tfmv000yi0ux853wf3fi","_id":"cls49tfn20018i0ux2h8e6se5"},{"post_id":"cls49tfmi0008i0ux89hjf000","tag_id":"cls49tfmx0015i0uxht2o2etq","_id":"cls49tfn6001fi0ux65esedva"},{"post_id":"cls49tfmi0008i0ux89hjf000","tag_id":"cls49tfn4001bi0uxakc07ju6","_id":"cls49tfn6001ii0ux4qcugr3e"},{"post_id":"cls49tfmj000ci0uxe3sc6ktf","tag_id":"cls49tfn5001ei0ux6kpw45ze","_id":"cls49tfn6001ki0ux757h31ah"},{"post_id":"cls49tfmk000di0uxhmuxbm8g","tag_id":"cls49tfn6001ji0ux2g7y4mwj","_id":"cls49tfn7001oi0uxarnjgaz2"},{"post_id":"cls49tfmm000hi0uxectjf7up","tag_id":"cls49tfn7001ni0ux9s3ahzjx","_id":"cls49tfn9001si0ux632ef2a5"},{"post_id":"cls49tfmn000ji0ux5f2abyp2","tag_id":"cls49tfn8001ri0uxdiymhfzz","_id":"cls49tfna001wi0uxhb954wgt"},{"post_id":"cls49tfmp000ni0uxaci2h60j","tag_id":"cls49tfna001ui0uxg56qf259","_id":"cls49tfnb0020i0uxga6zekr6"},{"post_id":"cls49tfmq000oi0ux3utp1a28","tag_id":"cls49tfna001xi0uxbvop9onm","_id":"cls49tfnc0023i0uxdho53oo4"},{"post_id":"cls49tfms000si0uxduhmc1m4","tag_id":"cls49tfnb0021i0ux11uvhss2","_id":"cls49tfnd0027i0ux3tkudiy7"},{"post_id":"cls49tfmu000vi0ux85ongrfn","tag_id":"cls49tfnc0024i0ux7hmi0zwk","_id":"cls49tfne002ci0ux9mgibrql"},{"post_id":"cls49tfmv0010i0uxbi7h7drd","tag_id":"cls49tfnd0029i0uxet28ajbe","_id":"cls49tfnf002gi0ux7q7755w5"},{"post_id":"cls49tfn10017i0ux3u6u5ipy","tag_id":"cls49tfnf002fi0ux5vpx0pla","_id":"cls49tfng002oi0ux7wrngs55"},{"post_id":"cls49tfn10017i0ux3u6u5ipy","tag_id":"cls49tfnf002ji0uxabe0c3rq","_id":"cls49tfng002pi0uxfw57fpte"},{"post_id":"cls49tfn20019i0ux7ood7ye8","tag_id":"cls49tfng002mi0ux97cl77fu","_id":"cls49tfng002si0uxd041dj4f"}],"Tag":[{"name":"dom","_id":"cls49tfmf0005i0uxbbqga17a"},{"name":"migration","_id":"cls49tfmj000ai0uxgfbf7g3n"},{"name":"commitlint","_id":"cls49tfmm000gi0uxdenvgva9"},{"name":"commitizen","_id":"cls49tfmp000mi0uxg0bw61nj"},{"name":"husky","_id":"cls49tfmr000ri0uxgswp80kc"},{"name":"emby","_id":"cls49tfmv000yi0ux853wf3fi"},{"name":"soft-link","_id":"cls49tfmx0015i0uxht2o2etq"},{"name":"hard-link","_id":"cls49tfn4001bi0uxakc07ju6"},{"name":"redis","_id":"cls49tfn5001ei0ux6kpw45ze"},{"name":"lskypro","_id":"cls49tfn6001ji0ux2g7y4mwj"},{"name":"stash","_id":"cls49tfn7001ni0ux9s3ahzjx"},{"name":"valutwarden","_id":"cls49tfn8001ri0uxdiymhfzz"},{"name":"mariadb","_id":"cls49tfna001ui0uxg56qf259"},{"name":"cloudflare","_id":"cls49tfna001xi0uxbvop9onm"},{"name":"mysql","_id":"cls49tfnb0021i0ux11uvhss2"},{"name":"terminal","_id":"cls49tfnc0024i0ux7hmi0zwk"},{"name":"frpc","_id":"cls49tfnd0029i0uxet28ajbe"},{"name":"assets","_id":"cls49tfnf002fi0ux5vpx0pla"},{"name":"404","_id":"cls49tfnf002ji0uxabe0c3rq"},{"name":"timezone","_id":"cls49tfng002mi0ux97cl77fu"}]}}