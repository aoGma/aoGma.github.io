{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.eot","path":"fonts/dm-serif-display-v4-latin-regular.eot","modified":1,"renderable":1},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.ttf","path":"fonts/dm-serif-display-v4-latin-regular.ttf","modified":1,"renderable":1},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.svg","path":"fonts/dm-serif-display-v4-latin-regular.svg","modified":1,"renderable":1},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.woff","path":"fonts/dm-serif-display-v4-latin-regular.woff","modified":1,"renderable":1},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.woff2","path":"fonts/dm-serif-display-v4-latin-regular.woff2","modified":1,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.eot","path":"fonts/inter-v2-latin-regular.eot","modified":1,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.svg","path":"fonts/inter-v2-latin-regular.svg","modified":1,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.ttf","path":"fonts/inter-v2-latin-regular.ttf","modified":1,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.woff2","path":"fonts/inter-v2-latin-regular.woff2","modified":1,"renderable":1},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.woff","path":"fonts/inter-v2-latin-regular.woff","modified":1,"renderable":1},{"_id":"themes/minima/source/css/custom.css","path":"css/custom.css","modified":1,"renderable":1},{"_id":"themes/minima/source/css/prism-dark.css","path":"css/prism-dark.css","modified":1,"renderable":1},{"_id":"themes/minima/source/css/normalize.css","path":"css/normalize.css","modified":1,"renderable":1},{"_id":"themes/minima/source/css/prism-line-numbers.css","path":"css/prism-line-numbers.css","modified":1,"renderable":1},{"_id":"themes/minima/source/css/skeleton.css","path":"css/skeleton.css","modified":1,"renderable":1},{"_id":"themes/minima/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/minima/source/images/epic-smiley.jpg","path":"images/epic-smiley.jpg","modified":1,"renderable":1},{"_id":"themes/minima/source/images/thumbnail.png","path":"images/thumbnail.png","modified":1,"renderable":1},{"_id":"themes/minima/source/js/nanobar.min.js","path":"js/nanobar.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"7966fe93eb05941e2db19e39ec3d3d1f7c6576e8","modified":1706803869554},{"_id":"source/About/index.md","hash":"0c87744c5dc8793477c8bb00d69acd7e9abea77e","modified":1706802346385},{"_id":"source/Works/index.md","hash":"5ee2a7302d93dcba419c4ca384ddacb16d946af0","modified":1706802346385},{"_id":"source/_posts/docker-container-migration.md","hash":"97b2465f9e73bfe8fb276363b03ee6e7a5419b3d","modified":1706804479632},{"_id":"source/_posts/javascript-element-scrolls-to-bottom.md","hash":"6e1d6ddc48933f7b7d4b2caff13f8d284dfc5f0f","modified":1706804479632},{"_id":"source/_posts/linux-soft-hard-link.md","hash":"7e24506d9b041a6a16ed8f29b37eccbd69c1123a","modified":1706804479633},{"_id":"source/_posts/commitlint-and-commitizen-configuration.md","hash":"346dfa9c38752da104498a72c8c80595589a1de3","modified":1706804479631},{"_id":"source/_posts/macos-docker-redis.md","hash":"805537a7ea375cab4bd55812b5463ee1f07994ab","modified":1706804479633},{"_id":"source/_posts/pi-install-lskypro.md","hash":"bba805399ac201e85a49a105af566e1974650823","modified":1706804479633},{"_id":"source/_posts/pi-install-mariadb.md","hash":"ffe5f1406989ff42ba3630b3938cc92797cc46e5","modified":1706804479633},{"_id":"source/_posts/pi-install-valutwarden.md","hash":"c3400262e5a0ac719184f5d8cbef13a4d44ad4e5","modified":1706804479633},{"_id":"source/_posts/pi-install-stash.md","hash":"2d9f9b0233deb9b91bfd2d7ec0614d0b5e374c58","modified":1706804479633},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port.md","hash":"aa549fdb3d58a9690bcc9e567714510940e003f7","modified":1706804479633},{"_id":"source/_posts/ubuntu-install-frp.md","hash":"a95fe2a47dffe577f505eeda31478898a088b96a","modified":1706804479638},{"_id":"source/_posts/ubuntu-mv-cp-status.md","hash":"8bb81e7ef7b2585d429fb0a18d12e44040650a60","modified":1706804479638},{"_id":"source/_posts/ubuntu-time-zone.md","hash":"864b46bff14a0e78f16d492c7bc293954da3f46d","modified":1706804479638},{"_id":"source/_posts/ubuntu-server-install-init.md","hash":"c7da37bd8cd710158d354491381b2046a5bf9fd7","modified":1706804479638},{"_id":"source/_posts/pi-install-emby.md","hash":"f968a001b47810061fac89c321bc625c2b5cd0b6","modified":1706804479633},{"_id":"source/_posts/macos-docker-mysql8.md","hash":"c1aeffaf21679364e5d63832af92ab6f38451e9c","modified":1706802346385},{"_id":"source/_posts/.DS_Store","hash":"d91d21e770ca26012c57bee8c54ab210a0924f69","modified":1706803869554},{"_id":"source/_posts/ubuntu-install-docker-dockercompose.md","hash":"eff0826ce139364ed7d871051c959f00c3fa1f33","modified":1706804479637},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/warp-yxip.sh","hash":"26243ed983edcf77220eaac9281298247b33ddef","modified":1706804479637},{"_id":"source/_posts/ubuntu-time-zone/655dee9f3d7df.png","hash":"574e2818690ff94ca8449ac370d154a214d994ed","modified":1706804479639},{"_id":"source/_posts/ubuntu-time-zone/655dee6edb536.png","hash":"0595f6f415afc0bb6a0ad1160927ca2991dbb71c","modified":1706804479639},{"_id":"source/_posts/javascript-element-scrolls-to-bottom/65581379c3845.png","hash":"f719eaaa3f7a24e17259f9585d834d887045aaeb","modified":1706804479632},{"_id":"source/_posts/macos-docker-mysql8/6556341408363.png","hash":"03ab30f9400b45a860d6ce090e355ea8ec821e57","modified":1706802346387},{"_id":"themes/minima/.gitignore","hash":"824c6bad36ef799350c37bcd0fe5a1a88295d2f8","modified":1614691029000},{"_id":"themes/minima/_config.yml","hash":"a210e337556bc1e0e31e1c216094140a2d39023f","modified":1706798638057},{"_id":"themes/minima/layout/archive.ejs","hash":"3ba1f33ed739039930b987b4c0f0977a46d63310","modified":1614691029000},{"_id":"themes/minima/layout/index.ejs","hash":"7727731d02313066a91a6b942d07065447ba01cb","modified":1614691029000},{"_id":"themes/minima/layout/layout.ejs","hash":"7362dec846b67d65bc01f36fa1765cfdf05a3603","modified":1614691029000},{"_id":"themes/minima/layout/page.ejs","hash":"ba59ed3ac4edd762029b31686f2d3b60ef7b943d","modified":1614691029000},{"_id":"themes/minima/LICENSE","hash":"d31e0df078ff6f9bc2923196d9aae1cd50516159","modified":1614691029000},{"_id":"themes/minima/layout/partial/comments.ejs","hash":"827bced78b4ef972d1b70e4cb5b5171da6b0ed35","modified":1614691029000},{"_id":"themes/minima/layout/tag.ejs","hash":"c3a378abd79bc5d7b42af801845055e141e80fa1","modified":1614691029000},{"_id":"themes/minima/layout/partial/google_analytics.ejs","hash":"0f9b2ebd8053e33c2a11976290dca5012f44cd46","modified":1614691029000},{"_id":"themes/minima/layout/partial/footer.ejs","hash":"0ea4fb13acad44e52c74c5778f0e966c6cadee51","modified":1614691029000},{"_id":"themes/minima/layout/partial/header.ejs","hash":"9760ae03ba19b925e5c88d0012e45fc876a18598","modified":1614691029000},{"_id":"themes/minima/.DS_Store","hash":"794fcea4e2260de5925d9b249aba47f604da658f","modified":1706799253708},{"_id":"themes/minima/layout/partial/pagination.ejs","hash":"bce484c6ec05b3120c1aba49b64cd00b7a0afb2b","modified":1614691029000},{"_id":"themes/minima/layout/partial/tcolor.ejs","hash":"badfacb7abd8ab2e4732777177526a63b9b776f3","modified":1614691029000},{"_id":"themes/minima/README.md","hash":"4dbaa7bb7697a0e984450c1497ad949f3165da9d","modified":1614691029000},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.eot","hash":"7c5138328e9d4d2e231408c00eb879d1508a6f4e","modified":1614691029000},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.ttf","hash":"1eaeb5d2d0a01f02cfd1313903b35bcef224d379","modified":1614691029000},{"_id":"themes/minima/source/.DS_Store","hash":"28506039dcef2833ef332aeb71c097be31916ab2","modified":1706794718441},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.woff","hash":"61692ca29e433827e7c227e7d19a70037ff87273","modified":1614691029000},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.woff2","hash":"c104f19b6f5176eae39be527c43742a236b9ac29","modified":1614691029000},{"_id":"themes/minima/layout/post.ejs","hash":"4ee26327a088fc043c5c8bfc3a4d44f4155364cb","modified":1614691029000},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.eot","hash":"b18f1e7b093bf71d833ddfd81676bdfbf165e810","modified":1614691029000},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.svg","hash":"ca639a580d3dd7c1a023d489cd818af95883b52b","modified":1614691029000},{"_id":"themes/minima/source/css/custom.css","hash":"4def307c74d53452191e01241fdaffb69204606c","modified":1614691029000},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.woff","hash":"7f36fa1af7da1caa31a37e7b96c1772b75494726","modified":1614691029000},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.ttf","hash":"d96f19bfb5bd9e7b85f590c20960d0cb8a1fffcd","modified":1614691029000},{"_id":"themes/minima/source/css/prism-line-numbers.css","hash":"c632c3fa3fd97d05a0f74c6a87e1e93ee60ee57f","modified":1614691029000},{"_id":"themes/minima/source/css/skeleton.css","hash":"46633c4f03fc8de882077a141775a83f2dd6acc0","modified":1614691029000},{"_id":"themes/minima/source/css/normalize.css","hash":"dd1976308129df19afb1a0dfdc9cc5d2aee7aec2","modified":1614691029000},{"_id":"themes/minima/source/fonts/inter-v2-latin-regular.woff2","hash":"99ad803462294f0cfce54995572d6caf8d955028","modified":1614691029000},{"_id":"themes/minima/source/css/prism-dark.css","hash":"6eae920ef9ee996f71a88bf2725e6e385d3e8b79","modified":1614691029000},{"_id":"themes/minima/source/images/favicon.ico","hash":"954f09cc6c93c6a3f9fc9348b53a224a26ff70b9","modified":1706799603000},{"_id":"source/_posts/ubuntu-time-zone/655dee1461a02.png","hash":"3e24f5cdaecab00bf99d1aa3a51a6497f2c0fd2d","modified":1706804479639},{"_id":"themes/minima/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1706798606490},{"_id":"themes/minima/source/js/nanobar.min.js","hash":"fc30e613dbce5b1b5602907c0966739480456875","modified":1614691029000},{"_id":"themes/minima/source/images/thumbnail.png","hash":"f33450a23ba31ceb4a0f43935e2749abcdff9959","modified":1706749120000},{"_id":"themes/minima/source/fonts/dm-serif-display-v4-latin-regular.svg","hash":"b650647a506978c3617a12cb50ba3c4c596ee6e7","modified":1614691029000},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/655df1d56c1df.png","hash":"464d979feb7a49472f06bfb3c597a6fc260110ce","modified":1706804479635},{"_id":"source/_posts/ubuntu-time-zone/655def839b174.png","hash":"2c4829d9d95d32b5bf28b25633609d1f211685f9","modified":1706804479640},{"_id":"source/_posts/macos-docker-mysql8/655633ee86ff7.png","hash":"d222a863224205043bb76325e060c43bdea9f2a1","modified":1706802346386},{"_id":"themes/minima/source/images/epic-smiley.jpg","hash":"11102caf25def291217235fe403c15e9fd40f9e3","modified":1614691029000},{"_id":"source/_posts/macos-docker-mysql8/6556405f81268.png","hash":"56bdc49806c4a1e638e57b1d669686eea8547a45","modified":1706802346389},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/655e19260504a.png","hash":"12f3c36c8163c173f48237c5cea3a36afd68033e","modified":1706804479637},{"_id":"public/About/index.html","hash":"19b602be4ab1bc0e078955c5afabc0d54251dc73","modified":1706832250186},{"_id":"public/Works/index.html","hash":"23321ddf1abf9c69d05de25c6332ce65f2224bb3","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-time-zone/index.html","hash":"3a5fff56a4a81117cc047f7c628997f6e59ee72b","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-install-frp/index.html","hash":"9d6371cc6c8080609ff8c26647db1ea8da1817c8","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-install-docker-dockercompose/index.html","hash":"fc0d459a2026dff52e7201d06623c800599125b0","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-cloudflare-proxy-port/index.html","hash":"c45d3b9c54b8b598de199e0eec79c60e1f3a2da3","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-server-install-init/index.html","hash":"d306dfd58b09ac5b52aedbb8f9bb364a4e04cefd","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-mv-cp-status/index.html","hash":"259fb510160b37f99b147a7632a74e86e2c3dbcd","modified":1706832250186},{"_id":"public/2024/02/02/pi-install-valutwarden/index.html","hash":"8a1693421f38cf0ea51de26acd648bc4cebb5b1a","modified":1706832250186},{"_id":"public/2024/02/02/pi-install-stash/index.html","hash":"aaeda0d90dd73ef63297be9969ac689658450c33","modified":1706832250186},{"_id":"public/2024/02/02/pi-install-mariadb/index.html","hash":"1c87b821a18a0462dcb37240f429ea93c6b6dce1","modified":1706832250186},{"_id":"public/2024/02/02/pi-install-lskypro/index.html","hash":"257cddf9fff7a9c98d32d2bdb2e1281a7840d2fb","modified":1706832250186},{"_id":"public/2024/02/02/pi-install-emby/index.html","hash":"f9c590ca7e0a3e8970153b01725d0e28c20d9f6b","modified":1706832250186},{"_id":"public/2024/02/02/linux-soft-hard-link/index.html","hash":"252a9c5da6d0b596c20b82be8b35520f6e40654f","modified":1706832250186},{"_id":"public/2024/02/02/javascript-element-scrolls-to-bottom/index.html","hash":"58601e0efb3c5631f2482aa5b0bdf053fb2a737e","modified":1706832250186},{"_id":"public/2024/02/01/commitlint-and-commitizen-configuration/index.html","hash":"18db2b320c373598ddfcf0e6cd54c05a4b124ce7","modified":1706832250186},{"_id":"public/2024/02/01/macos-docker-redis/index.html","hash":"9e571865baf14b730d30cfc5a4c80346a4cf76de","modified":1706832250186},{"_id":"public/2024/02/01/macos-docker-mysql8/index.html","hash":"1c113b74ef4fffb84d24dbc2e7f40c4c00fcb7e3","modified":1706832250186},{"_id":"public/2023/10/21/docker-container-migration/index.html","hash":"1ee1f39602003cf7ff72eda2d55bcb38169ef119","modified":1706832250186},{"_id":"public/archives/index.html","hash":"322dc347d95b7adeff4288114dcc26f08cbf2e45","modified":1706832250186},{"_id":"public/archives/page/2/index.html","hash":"c932a2b7c022470b53b72d9f06a0f7f4b685ea09","modified":1706832250186},{"_id":"public/archives/2023/index.html","hash":"f0986d8484e45acd73a427da3c1ba6039b0cc9d5","modified":1706832250186},{"_id":"public/archives/2023/10/index.html","hash":"8b4d7578392a53e5472bf9bc05b795b9b4beea68","modified":1706832250186},{"_id":"public/archives/2024/index.html","hash":"c3330292f176f5f0be280a364df2b03dc61dbc44","modified":1706832250186},{"_id":"public/archives/2024/page/2/index.html","hash":"b542fd03b8d4260dbc67c9c58521bf7e9090b755","modified":1706832250186},{"_id":"public/archives/2024/02/index.html","hash":"537ae91713f36b406df1554bea6523b019933953","modified":1706832250186},{"_id":"public/archives/2024/02/page/2/index.html","hash":"4514a5472901e1df5d1f0279cc3e5ed28a2ab00c","modified":1706832250186},{"_id":"public/index.html","hash":"d50be104e9a016e95533ce0dd5f88e62e5bb3a07","modified":1706832250186},{"_id":"public/page/2/index.html","hash":"5cd3100549e34243873e85e54e68c5b7959f59c5","modified":1706832250186},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.eot","hash":"7c5138328e9d4d2e231408c00eb879d1508a6f4e","modified":1706832250186},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.woff","hash":"61692ca29e433827e7c227e7d19a70037ff87273","modified":1706832250186},{"_id":"public/fonts/inter-v2-latin-regular.eot","hash":"b18f1e7b093bf71d833ddfd81676bdfbf165e810","modified":1706832250186},{"_id":"public/fonts/inter-v2-latin-regular.svg","hash":"ca639a580d3dd7c1a023d489cd818af95883b52b","modified":1706832250186},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.woff2","hash":"c104f19b6f5176eae39be527c43742a236b9ac29","modified":1706832250186},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.ttf","hash":"1eaeb5d2d0a01f02cfd1313903b35bcef224d379","modified":1706832250186},{"_id":"public/fonts/inter-v2-latin-regular.ttf","hash":"d96f19bfb5bd9e7b85f590c20960d0cb8a1fffcd","modified":1706832250186},{"_id":"public/images/thumbnail.png","hash":"f33450a23ba31ceb4a0f43935e2749abcdff9959","modified":1706832250186},{"_id":"public/fonts/inter-v2-latin-regular.woff2","hash":"99ad803462294f0cfce54995572d6caf8d955028","modified":1706832250186},{"_id":"public/images/favicon.ico","hash":"954f09cc6c93c6a3f9fc9348b53a224a26ff70b9","modified":1706832250186},{"_id":"public/fonts/inter-v2-latin-regular.woff","hash":"7f36fa1af7da1caa31a37e7b96c1772b75494726","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-time-zone/655dee9f3d7df.png","hash":"574e2818690ff94ca8449ac370d154a214d994ed","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-time-zone/655dee6edb536.png","hash":"0595f6f415afc0bb6a0ad1160927ca2991dbb71c","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-cloudflare-proxy-port/warp-yxip.sh","hash":"26243ed983edcf77220eaac9281298247b33ddef","modified":1706832250186},{"_id":"public/css/custom.css","hash":"4def307c74d53452191e01241fdaffb69204606c","modified":1706832250186},{"_id":"public/css/prism-dark.css","hash":"6eae920ef9ee996f71a88bf2725e6e385d3e8b79","modified":1706832250186},{"_id":"public/css/normalize.css","hash":"dd1976308129df19afb1a0dfdc9cc5d2aee7aec2","modified":1706832250186},{"_id":"public/js/nanobar.min.js","hash":"fc30e613dbce5b1b5602907c0966739480456875","modified":1706832250186},{"_id":"public/css/prism-line-numbers.css","hash":"c632c3fa3fd97d05a0f74c6a87e1e93ee60ee57f","modified":1706832250186},{"_id":"public/css/skeleton.css","hash":"46633c4f03fc8de882077a141775a83f2dd6acc0","modified":1706832250186},{"_id":"public/fonts/dm-serif-display-v4-latin-regular.svg","hash":"b650647a506978c3617a12cb50ba3c4c596ee6e7","modified":1706832250186},{"_id":"public/2024/02/02/javascript-element-scrolls-to-bottom/65581379c3845.png","hash":"f719eaaa3f7a24e17259f9585d834d887045aaeb","modified":1706832250186},{"_id":"public/2024/02/01/macos-docker-mysql8/6556341408363.png","hash":"03ab30f9400b45a860d6ce090e355ea8ec821e57","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-time-zone/655dee1461a02.png","hash":"3e24f5cdaecab00bf99d1aa3a51a6497f2c0fd2d","modified":1706832250186},{"_id":"public/images/epic-smiley.jpg","hash":"11102caf25def291217235fe403c15e9fd40f9e3","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-cloudflare-proxy-port/655df1d56c1df.png","hash":"464d979feb7a49472f06bfb3c597a6fc260110ce","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-time-zone/655def839b174.png","hash":"2c4829d9d95d32b5bf28b25633609d1f211685f9","modified":1706832250186},{"_id":"public/2024/02/01/macos-docker-mysql8/655633ee86ff7.png","hash":"d222a863224205043bb76325e060c43bdea9f2a1","modified":1706832250186},{"_id":"public/2024/02/01/macos-docker-mysql8/6556405f81268.png","hash":"56bdc49806c4a1e638e57b1d669686eea8547a45","modified":1706832250186},{"_id":"public/2024/02/02/ubuntu-cloudflare-proxy-port/655e19260504a.png","hash":"12f3c36c8163c173f48237c5cea3a36afd68033e","modified":1706832250186}],"Category":[],"Data":[],"Page":[{"title":"About","date":"2024-02-01T15:17:30.000Z","_content":"## This is About page\n","source":"About/index.md","raw":"---\ntitle: About\ndate: 2024-02-01 23:17:30\n---\n## This is About page\n","updated":"2024-02-01T15:45:46.385Z","path":"About/index.html","comments":1,"layout":"page","_id":"cls3vup460000j6ycgzx57bfj","content":"<h2 id=\"This-is-About-page\"><a href=\"#This-is-About-page\" class=\"headerlink\" title=\"This is About page\"></a>This is About page</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"This-is-About-page\"><a href=\"#This-is-About-page\" class=\"headerlink\" title=\"This is About page\"></a>This is About page</h2>"},{"title":"Works","date":"2024-02-01T15:18:29.000Z","_content":"## This is Works page\n","source":"Works/index.md","raw":"---\ntitle: Works\ndate: 2024-02-01 23:18:29\n---\n## This is Works page\n","updated":"2024-02-01T15:45:46.385Z","path":"Works/index.html","comments":1,"layout":"page","_id":"cls3vup490002j6ycg2sr5fe6","content":"<h2 id=\"This-is-Works-page\"><a href=\"#This-is-Works-page\" class=\"headerlink\" title=\"This is Works page\"></a>This is Works page</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"This-is-Works-page\"><a href=\"#This-is-Works-page\" class=\"headerlink\" title=\"This is Works page\"></a>This is Works page</h2>"}],"Post":[{"title":"Commitlint 和 Commitizen 规范项目提交信息","date":"2024-02-01T15:57:09.000Z","_content":"## 1.配置husky\n>\n> To lint commits before they are created you can use Husky's commit-msg hook:\n\n```shell\n# Install Husky v6\nnpm install husky --save-dev\n# or\nyarn add husky --dev\n\n# Activate hooks\nnpx husky install\n# or\nyarn husky install\n\n# Add hook\n\nnpm pkg set scripts.commitlint=\"commitlint --edit\"\nnpx husky add .husky/commit-msg 'npm run commitlint ${1}'\n# .husky/commit-msg 文件会缺失 ${1} 手动补充一下\n# yarn commitlint ${1}\n```\n\n## 2.配置commitlint\n\n```shell\n# npm install --save-dev @commitlint/{config-conventional,cli}\n# 由于使用node16不满足node>=18的条件需要降级安装\nyarn add -D @commitlint/{config-conventional,cli}@16\n\n# Configure commitlint to use conventional config\necho \"module.exports = {extends: ['@commitlint/config-conventional']}\" > commitlint.config.js\n# format file\nprettier -w commitlint.config.js\n```\n\n## 3.配置commitizen\n\n```shell\nyarn add -D commitizen\nnpx commitizen init cz-conventional-changelog --save-dev --save-exact\n```\n\n> And you can then add some nice npm scripts in your package.json file pointing to the local version of Commitizen:\n> `package.json`\n>\n> ```shell\n>  ...\n>  \"scripts\": {\n>    \"commit\": \"cz\"\n>  }\n> ```\n>\n## 4.git commit不走commitlint\n>\n> Optional: Running Commitizen on git commit\n\n1. Update .git/hooks/prepare-commit-msg with the following code:\n\n```shell\n#!/bin/bash\nexec < /dev/tty && node_modules/.bin/cz --hook || true\n```\n\n1. Husky\nFor husky users, add the following configuration to the project's package.json file:\n\n```shell\n\"husky\": {\n  \"hooks\": {\n    \"prepare-commit-msg\": \"exec < /dev/tty && npx cz --hook || true\"\n  }\n}\n```\n\n## 参考文章\n\n- [commitlint GitHub](https://github.com/conventional-changelog/commitlint#config)\n- [commitizen GitHub](https://github.com/commitizen/cz-cli)\n","source":"_posts/commitlint-and-commitizen-configuration.md","raw":"---\ntitle: Commitlint 和 Commitizen 规范项目提交信息\ndate: 2024-02-01 23:57:09\ntags:\n---\n## 1.配置husky\n>\n> To lint commits before they are created you can use Husky's commit-msg hook:\n\n```shell\n# Install Husky v6\nnpm install husky --save-dev\n# or\nyarn add husky --dev\n\n# Activate hooks\nnpx husky install\n# or\nyarn husky install\n\n# Add hook\n\nnpm pkg set scripts.commitlint=\"commitlint --edit\"\nnpx husky add .husky/commit-msg 'npm run commitlint ${1}'\n# .husky/commit-msg 文件会缺失 ${1} 手动补充一下\n# yarn commitlint ${1}\n```\n\n## 2.配置commitlint\n\n```shell\n# npm install --save-dev @commitlint/{config-conventional,cli}\n# 由于使用node16不满足node>=18的条件需要降级安装\nyarn add -D @commitlint/{config-conventional,cli}@16\n\n# Configure commitlint to use conventional config\necho \"module.exports = {extends: ['@commitlint/config-conventional']}\" > commitlint.config.js\n# format file\nprettier -w commitlint.config.js\n```\n\n## 3.配置commitizen\n\n```shell\nyarn add -D commitizen\nnpx commitizen init cz-conventional-changelog --save-dev --save-exact\n```\n\n> And you can then add some nice npm scripts in your package.json file pointing to the local version of Commitizen:\n> `package.json`\n>\n> ```shell\n>  ...\n>  \"scripts\": {\n>    \"commit\": \"cz\"\n>  }\n> ```\n>\n## 4.git commit不走commitlint\n>\n> Optional: Running Commitizen on git commit\n\n1. Update .git/hooks/prepare-commit-msg with the following code:\n\n```shell\n#!/bin/bash\nexec < /dev/tty && node_modules/.bin/cz --hook || true\n```\n\n1. Husky\nFor husky users, add the following configuration to the project's package.json file:\n\n```shell\n\"husky\": {\n  \"hooks\": {\n    \"prepare-commit-msg\": \"exec < /dev/tty && npx cz --hook || true\"\n  }\n}\n```\n\n## 参考文章\n\n- [commitlint GitHub](https://github.com/conventional-changelog/commitlint#config)\n- [commitizen GitHub](https://github.com/commitizen/cz-cli)\n","slug":"commitlint-and-commitizen-configuration","published":1,"updated":"2024-02-01T16:21:19.631Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup480001j6ycbkheaiqr","content":"<h2 id=\"1-配置husky\"><a href=\"#1-配置husky\" class=\"headerlink\" title=\"1.配置husky\"></a>1.配置husky</h2><blockquote>\n<p>To lint commits before they are created you can use Husky’s commit-msg hook:</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install Husky v6</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> husky --save-dev\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> husky <span class=\"token parameter variable\">--dev</span>\n\n<span class=\"token comment\"># Activate hooks</span>\nnpx husky <span class=\"token function\">install</span>\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">yarn</span> husky <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># Add hook</span>\n\n<span class=\"token function\">npm</span> pkg <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">scripts.commitlint</span><span class=\"token operator\">=</span><span class=\"token string\">\"commitlint --edit\"</span>\nnpx husky <span class=\"token function\">add</span> .husky/commit-msg <span class=\"token string\">'npm run commitlint $&#123;1&#125;'</span>\n<span class=\"token comment\"># .husky/commit-msg 文件会缺失 $&#123;1&#125; 手动补充一下</span>\n<span class=\"token comment\"># yarn commitlint $&#123;1&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-配置commitlint\"><a href=\"#2-配置commitlint\" class=\"headerlink\" title=\"2.配置commitlint\"></a>2.配置commitlint</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># npm install --save-dev @commitlint/&#123;config-conventional,cli&#125;</span>\n<span class=\"token comment\"># 由于使用node16不满足node>=18的条件需要降级安装</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> <span class=\"token parameter variable\">-D</span> @commitlint/<span class=\"token punctuation\">&#123;</span>config-conventional,cli<span class=\"token punctuation\">&#125;</span>@16\n\n<span class=\"token comment\"># Configure commitlint to use conventional config</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"module.exports = &#123;extends: ['@commitlint/config-conventional']&#125;\"</span> <span class=\"token operator\">></span> commitlint.config.js\n<span class=\"token comment\"># format file</span>\nprettier <span class=\"token parameter variable\">-w</span> commitlint.config.js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-配置commitizen\"><a href=\"#3-配置commitizen\" class=\"headerlink\" title=\"3.配置commitizen\"></a>3.配置commitizen</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> <span class=\"token parameter variable\">-D</span> commitizen\nnpx commitizen init cz-conventional-changelog --save-dev --save-exact<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>And you can then add some nice npm scripts in your package.json file pointing to the local version of Commitizen:<br><code>package.json</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">..</span>.\n<span class=\"token string\">\"scripts\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"commit\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"cz\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n</blockquote>\n<h2 id=\"4-git-commit不走commitlint\"><a href=\"#4-git-commit不走commitlint\" class=\"headerlink\" title=\"4.git commit不走commitlint\"></a>4.git commit不走commitlint</h2><blockquote>\n<p>Optional: Running Commitizen on git commit</p>\n</blockquote>\n<ol>\n<li>Update .git&#x2F;hooks&#x2F;prepare-commit-msg with the following code:</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token builtin class-name\">exec</span> <span class=\"token operator\">&lt;</span> /dev/tty <span class=\"token operator\">&amp;&amp;</span> node_modules/.bin/cz <span class=\"token parameter variable\">--hook</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol>\n<li>Husky<br>For husky users, add the following configuration to the project’s package.json file:</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token string\">\"husky\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"hooks\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"prepare-commit-msg\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"exec &lt; /dev/tty &amp;&amp; npx cz --hook || true\"</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://github.com/conventional-changelog/commitlint#config\">commitlint GitHub</a></li>\n<li><a href=\"https://github.com/commitizen/cz-cli\">commitizen GitHub</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-配置husky\"><a href=\"#1-配置husky\" class=\"headerlink\" title=\"1.配置husky\"></a>1.配置husky</h2><blockquote>\n<p>To lint commits before they are created you can use Husky’s commit-msg hook:</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install Husky v6</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> husky --save-dev\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> husky <span class=\"token parameter variable\">--dev</span>\n\n<span class=\"token comment\"># Activate hooks</span>\nnpx husky <span class=\"token function\">install</span>\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">yarn</span> husky <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># Add hook</span>\n\n<span class=\"token function\">npm</span> pkg <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">scripts.commitlint</span><span class=\"token operator\">=</span><span class=\"token string\">\"commitlint --edit\"</span>\nnpx husky <span class=\"token function\">add</span> .husky/commit-msg <span class=\"token string\">'npm run commitlint $&#123;1&#125;'</span>\n<span class=\"token comment\"># .husky/commit-msg 文件会缺失 $&#123;1&#125; 手动补充一下</span>\n<span class=\"token comment\"># yarn commitlint $&#123;1&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-配置commitlint\"><a href=\"#2-配置commitlint\" class=\"headerlink\" title=\"2.配置commitlint\"></a>2.配置commitlint</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># npm install --save-dev @commitlint/&#123;config-conventional,cli&#125;</span>\n<span class=\"token comment\"># 由于使用node16不满足node>=18的条件需要降级安装</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> <span class=\"token parameter variable\">-D</span> @commitlint/<span class=\"token punctuation\">&#123;</span>config-conventional,cli<span class=\"token punctuation\">&#125;</span>@16\n\n<span class=\"token comment\"># Configure commitlint to use conventional config</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"module.exports = &#123;extends: ['@commitlint/config-conventional']&#125;\"</span> <span class=\"token operator\">></span> commitlint.config.js\n<span class=\"token comment\"># format file</span>\nprettier <span class=\"token parameter variable\">-w</span> commitlint.config.js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-配置commitizen\"><a href=\"#3-配置commitizen\" class=\"headerlink\" title=\"3.配置commitizen\"></a>3.配置commitizen</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> <span class=\"token parameter variable\">-D</span> commitizen\nnpx commitizen init cz-conventional-changelog --save-dev --save-exact<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>And you can then add some nice npm scripts in your package.json file pointing to the local version of Commitizen:<br><code>package.json</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">..</span>.\n<span class=\"token string\">\"scripts\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"commit\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"cz\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n</blockquote>\n<h2 id=\"4-git-commit不走commitlint\"><a href=\"#4-git-commit不走commitlint\" class=\"headerlink\" title=\"4.git commit不走commitlint\"></a>4.git commit不走commitlint</h2><blockquote>\n<p>Optional: Running Commitizen on git commit</p>\n</blockquote>\n<ol>\n<li>Update .git&#x2F;hooks&#x2F;prepare-commit-msg with the following code:</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token builtin class-name\">exec</span> <span class=\"token operator\">&lt;</span> /dev/tty <span class=\"token operator\">&amp;&amp;</span> node_modules/.bin/cz <span class=\"token parameter variable\">--hook</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol>\n<li>Husky<br>For husky users, add the following configuration to the project’s package.json file:</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token string\">\"husky\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"hooks\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"prepare-commit-msg\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"exec &lt; /dev/tty &amp;&amp; npx cz --hook || true\"</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://github.com/conventional-changelog/commitlint#config\">commitlint GitHub</a></li>\n<li><a href=\"https://github.com/commitizen/cz-cli\">commitizen GitHub</a></li>\n</ul>\n"},{"title":"Docker 已创建容器挂载目录迁移","date":"2023-10-21T13:27:30.000Z","_content":"## 停止容器\n\n```bash\ndocker stop container-id-1 container-id-2\n```\n\n### 停止docker服务\n\n```bash\nsudo systemctl stop docker\n```\n\n### 查看docker目录\n\n```bash\ndocker info | grep 'Root'\n# Docker Root Dir: /var/lib/docker\nsu root\ncd /var/lib/docker/containers\n```\n\n### 修改每个container中的config.v2.json文件\n\n```bash\n%s/home\\/ao/home\\/ao\\/docker-containers/g\n```\n","source":"_posts/docker-container-migration.md","raw":"---\ntitle: Docker 已创建容器挂载目录迁移\ndate: 2023-10-21 21:27:30\n---\n## 停止容器\n\n```bash\ndocker stop container-id-1 container-id-2\n```\n\n### 停止docker服务\n\n```bash\nsudo systemctl stop docker\n```\n\n### 查看docker目录\n\n```bash\ndocker info | grep 'Root'\n# Docker Root Dir: /var/lib/docker\nsu root\ncd /var/lib/docker/containers\n```\n\n### 修改每个container中的config.v2.json文件\n\n```bash\n%s/home\\/ao/home\\/ao\\/docker-containers/g\n```\n","slug":"docker-container-migration","published":1,"updated":"2024-02-01T16:21:19.632Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup490003j6ycaebe20x3","content":"<h2 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> stop container-id-1 container-id-2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"停止docker服务\"><a href=\"#停止docker服务\" class=\"headerlink\" title=\"停止docker服务\"></a>停止docker服务</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl stop <span class=\"token function\">docker</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"查看docker目录\"><a href=\"#查看docker目录\" class=\"headerlink\" title=\"查看docker目录\"></a>查看docker目录</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> info <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'Root'</span>\n<span class=\"token comment\"># Docker Root Dir: /var/lib/docker</span>\n<span class=\"token function\">su</span> root\n<span class=\"token builtin class-name\">cd</span> /var/lib/docker/containers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"修改每个container中的config-v2-json文件\"><a href=\"#修改每个container中的config-v2-json文件\" class=\"headerlink\" title=\"修改每个container中的config.v2.json文件\"></a>修改每个container中的config.v2.json文件</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">%s/home<span class=\"token punctuation\">\\</span>/ao/home<span class=\"token punctuation\">\\</span>/ao<span class=\"token punctuation\">\\</span>/docker-containers/g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> stop container-id-1 container-id-2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"停止docker服务\"><a href=\"#停止docker服务\" class=\"headerlink\" title=\"停止docker服务\"></a>停止docker服务</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl stop <span class=\"token function\">docker</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"查看docker目录\"><a href=\"#查看docker目录\" class=\"headerlink\" title=\"查看docker目录\"></a>查看docker目录</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> info <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'Root'</span>\n<span class=\"token comment\"># Docker Root Dir: /var/lib/docker</span>\n<span class=\"token function\">su</span> root\n<span class=\"token builtin class-name\">cd</span> /var/lib/docker/containers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"修改每个container中的config-v2-json文件\"><a href=\"#修改每个container中的config-v2-json文件\" class=\"headerlink\" title=\"修改每个container中的config.v2.json文件\"></a>修改每个container中的config.v2.json文件</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">%s/home<span class=\"token punctuation\">\\</span>/ao/home<span class=\"token punctuation\">\\</span>/ao<span class=\"token punctuation\">\\</span>/docker-containers/g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n"},{"title":"JavaScript 判断元素滚动到底部","date":"2024-02-01T16:00:12.000Z","_content":"## DOM元素的三个属性\n\n- scrollTop: 元素顶部到元素可视区域顶部的像素距离（可读写）\n- clientHeight: 元素的像素高度，包括盒子内容content和内边距padding, 不包括边框外边距和水平滚动条（只读）\n- scrollHeight: 类似于clientHeight，但包括由于overflow属性不可见内容的高度。\n![ScrollHeight](65581379c3845.png)\n\n## 计算公式\n\n```javascript\nelement.scrollHeight - Math.abs(element.scrollTop) === element.clientHeight;\n```\n\n## 参考文章\n\n- [MDN scrollHeight](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight)\n- [掘金 scrollHeight](https://juejin.cn/post/6961638933121728520)\n","source":"_posts/javascript-element-scrolls-to-bottom.md","raw":"---\ntitle: JavaScript 判断元素滚动到底部\ndate: 2024-02-02 00:00:12\ntags:\n---\n## DOM元素的三个属性\n\n- scrollTop: 元素顶部到元素可视区域顶部的像素距离（可读写）\n- clientHeight: 元素的像素高度，包括盒子内容content和内边距padding, 不包括边框外边距和水平滚动条（只读）\n- scrollHeight: 类似于clientHeight，但包括由于overflow属性不可见内容的高度。\n![ScrollHeight](65581379c3845.png)\n\n## 计算公式\n\n```javascript\nelement.scrollHeight - Math.abs(element.scrollTop) === element.clientHeight;\n```\n\n## 参考文章\n\n- [MDN scrollHeight](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight)\n- [掘金 scrollHeight](https://juejin.cn/post/6961638933121728520)\n","slug":"javascript-element-scrolls-to-bottom","published":1,"updated":"2024-02-01T16:21:19.632Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4a0004j6ychy2g81p5","content":"<h2 id=\"DOM元素的三个属性\"><a href=\"#DOM元素的三个属性\" class=\"headerlink\" title=\"DOM元素的三个属性\"></a>DOM元素的三个属性</h2><ul>\n<li>scrollTop: 元素顶部到元素可视区域顶部的像素距离（可读写）</li>\n<li>clientHeight: 元素的像素高度，包括盒子内容content和内边距padding, 不包括边框外边距和水平滚动条（只读）</li>\n<li>scrollHeight: 类似于clientHeight，但包括由于overflow属性不可见内容的高度。<br><img src=\"/2024/02/02/javascript-element-scrolls-to-bottom/65581379c3845.png\" alt=\"ScrollHeight\"></li>\n</ul>\n<h2 id=\"计算公式\"><a href=\"#计算公式\" class=\"headerlink\" title=\"计算公式\"></a>计算公式</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">element<span class=\"token punctuation\">.</span>scrollHeight <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> element<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\">MDN scrollHeight</a></li>\n<li><a href=\"https://juejin.cn/post/6961638933121728520\">掘金 scrollHeight</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"DOM元素的三个属性\"><a href=\"#DOM元素的三个属性\" class=\"headerlink\" title=\"DOM元素的三个属性\"></a>DOM元素的三个属性</h2><ul>\n<li>scrollTop: 元素顶部到元素可视区域顶部的像素距离（可读写）</li>\n<li>clientHeight: 元素的像素高度，包括盒子内容content和内边距padding, 不包括边框外边距和水平滚动条（只读）</li>\n<li>scrollHeight: 类似于clientHeight，但包括由于overflow属性不可见内容的高度。<br><img src=\"/2024/02/02/javascript-element-scrolls-to-bottom/65581379c3845.png\" alt=\"ScrollHeight\"></li>\n</ul>\n<h2 id=\"计算公式\"><a href=\"#计算公式\" class=\"headerlink\" title=\"计算公式\"></a>计算公式</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">element<span class=\"token punctuation\">.</span>scrollHeight <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> element<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\">MDN scrollHeight</a></li>\n<li><a href=\"https://juejin.cn/post/6961638933121728520\">掘金 scrollHeight</a></li>\n</ul>\n"},{"title":"Linux 软链接和硬链接（Soft-Hard-Link）","date":"2024-02-01T16:01:43.000Z","_content":"## 软链接（Soft links）\n\n软链接相当于Windows上面的快捷方式\n> Commonly referred to as symbolic links, soft links link together non-regular and regular files. They can also span multiple filesystems. By definition, a soft link is not a standard file, but a special file that points to an existing file. Let's look at how to create a soft link. I use the ln -s command and the following syntax:\n>\n> All of this sounds great, but there are some drawbacks to using a soft link. The biggest concern is data loss and data confusion. If the original file is deleted, the soft link is broken. This situation is referred to as a dangling soft link. If you were to create a new file with the same name as the original, your dangling soft link is no longer dangling at all. It points to the new file created, whether this was your intention or not, so be sure to keep this in mind.\n>\n## 硬链接（Hard links）\n\n硬链接相当于文件的一个副本，但是创建硬链接的时候并没有复制一份源文件，而是将文件的node指向源文件，相当于一个空指针指向了文件的地址。\n> The concept of a hard link is the most basic we will discuss today. Every file on the Linux filesystem starts with a single hard link. The link is between the filename and the actual data stored on the filesystem. Creating an additional hard link to a file means a few different things. Let's discuss these.\n>\n> First, you create a new filename pointing to the exact same data as the old filename. This means that the two filenames, though different, point to identical data. For example, if I create file /home/tcarrigan/demo/link_test and write hello world in the file, I have a single hard link between the file name link_test and the file content hello world.\n>\n> When changes are made to one filename, the other reflects those changes. The permissions, link count, ownership, timestamps, and file content are the exact same. If the original file is deleted, the data still exists under the secondary hard link. The data is only removed from your drive when all links to the data have been removed. If you find two files with identical properties but are unsure if they are hard-linked, use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number.\n>\n## 硬链接限制\n>\n> While useful, there are some limitations to what hard links can do. For starters, they can only be created for regular files (not directories or special files). Also, a hard link cannot span multiple filesystems. They only work when the new hard link exists on the same filesystem as the original.\n>\n## 参考文章\n\n[hard links and soft links explained](https://www.redhat.com/sysadmin/linking-linux-explained)\n","source":"_posts/linux-soft-hard-link.md","raw":"---\ntitle: Linux 软链接和硬链接（Soft-Hard-Link）\ndate: 2024-02-02 00:01:43\ntags:\n---\n## 软链接（Soft links）\n\n软链接相当于Windows上面的快捷方式\n> Commonly referred to as symbolic links, soft links link together non-regular and regular files. They can also span multiple filesystems. By definition, a soft link is not a standard file, but a special file that points to an existing file. Let's look at how to create a soft link. I use the ln -s command and the following syntax:\n>\n> All of this sounds great, but there are some drawbacks to using a soft link. The biggest concern is data loss and data confusion. If the original file is deleted, the soft link is broken. This situation is referred to as a dangling soft link. If you were to create a new file with the same name as the original, your dangling soft link is no longer dangling at all. It points to the new file created, whether this was your intention or not, so be sure to keep this in mind.\n>\n## 硬链接（Hard links）\n\n硬链接相当于文件的一个副本，但是创建硬链接的时候并没有复制一份源文件，而是将文件的node指向源文件，相当于一个空指针指向了文件的地址。\n> The concept of a hard link is the most basic we will discuss today. Every file on the Linux filesystem starts with a single hard link. The link is between the filename and the actual data stored on the filesystem. Creating an additional hard link to a file means a few different things. Let's discuss these.\n>\n> First, you create a new filename pointing to the exact same data as the old filename. This means that the two filenames, though different, point to identical data. For example, if I create file /home/tcarrigan/demo/link_test and write hello world in the file, I have a single hard link between the file name link_test and the file content hello world.\n>\n> When changes are made to one filename, the other reflects those changes. The permissions, link count, ownership, timestamps, and file content are the exact same. If the original file is deleted, the data still exists under the secondary hard link. The data is only removed from your drive when all links to the data have been removed. If you find two files with identical properties but are unsure if they are hard-linked, use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number.\n>\n## 硬链接限制\n>\n> While useful, there are some limitations to what hard links can do. For starters, they can only be created for regular files (not directories or special files). Also, a hard link cannot span multiple filesystems. They only work when the new hard link exists on the same filesystem as the original.\n>\n## 参考文章\n\n[hard links and soft links explained](https://www.redhat.com/sysadmin/linking-linux-explained)\n","slug":"linux-soft-hard-link","published":1,"updated":"2024-02-01T16:21:19.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4a0005j6yca83k2qb3","content":"<h2 id=\"软链接（Soft-links）\"><a href=\"#软链接（Soft-links）\" class=\"headerlink\" title=\"软链接（Soft links）\"></a>软链接（Soft links）</h2><p>软链接相当于Windows上面的快捷方式</p>\n<blockquote>\n<p>Commonly referred to as symbolic links, soft links link together non-regular and regular files. They can also span multiple filesystems. By definition, a soft link is not a standard file, but a special file that points to an existing file. Let’s look at how to create a soft link. I use the ln -s command and the following syntax:</p>\n<p>All of this sounds great, but there are some drawbacks to using a soft link. The biggest concern is data loss and data confusion. If the original file is deleted, the soft link is broken. This situation is referred to as a dangling soft link. If you were to create a new file with the same name as the original, your dangling soft link is no longer dangling at all. It points to the new file created, whether this was your intention or not, so be sure to keep this in mind.</p>\n</blockquote>\n<h2 id=\"硬链接（Hard-links）\"><a href=\"#硬链接（Hard-links）\" class=\"headerlink\" title=\"硬链接（Hard links）\"></a>硬链接（Hard links）</h2><p>硬链接相当于文件的一个副本，但是创建硬链接的时候并没有复制一份源文件，而是将文件的node指向源文件，相当于一个空指针指向了文件的地址。</p>\n<blockquote>\n<p>The concept of a hard link is the most basic we will discuss today. Every file on the Linux filesystem starts with a single hard link. The link is between the filename and the actual data stored on the filesystem. Creating an additional hard link to a file means a few different things. Let’s discuss these.</p>\n<p>First, you create a new filename pointing to the exact same data as the old filename. This means that the two filenames, though different, point to identical data. For example, if I create file &#x2F;home&#x2F;tcarrigan&#x2F;demo&#x2F;link_test and write hello world in the file, I have a single hard link between the file name link_test and the file content hello world.</p>\n<p>When changes are made to one filename, the other reflects those changes. The permissions, link count, ownership, timestamps, and file content are the exact same. If the original file is deleted, the data still exists under the secondary hard link. The data is only removed from your drive when all links to the data have been removed. If you find two files with identical properties but are unsure if they are hard-linked, use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number.</p>\n</blockquote>\n<h2 id=\"硬链接限制\"><a href=\"#硬链接限制\" class=\"headerlink\" title=\"硬链接限制\"></a>硬链接限制</h2><blockquote>\n<p>While useful, there are some limitations to what hard links can do. For starters, they can only be created for regular files (not directories or special files). Also, a hard link cannot span multiple filesystems. They only work when the new hard link exists on the same filesystem as the original.</p>\n</blockquote>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://www.redhat.com/sysadmin/linking-linux-explained\">hard links and soft links explained</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"软链接（Soft-links）\"><a href=\"#软链接（Soft-links）\" class=\"headerlink\" title=\"软链接（Soft links）\"></a>软链接（Soft links）</h2><p>软链接相当于Windows上面的快捷方式</p>\n<blockquote>\n<p>Commonly referred to as symbolic links, soft links link together non-regular and regular files. They can also span multiple filesystems. By definition, a soft link is not a standard file, but a special file that points to an existing file. Let’s look at how to create a soft link. I use the ln -s command and the following syntax:</p>\n<p>All of this sounds great, but there are some drawbacks to using a soft link. The biggest concern is data loss and data confusion. If the original file is deleted, the soft link is broken. This situation is referred to as a dangling soft link. If you were to create a new file with the same name as the original, your dangling soft link is no longer dangling at all. It points to the new file created, whether this was your intention or not, so be sure to keep this in mind.</p>\n</blockquote>\n<h2 id=\"硬链接（Hard-links）\"><a href=\"#硬链接（Hard-links）\" class=\"headerlink\" title=\"硬链接（Hard links）\"></a>硬链接（Hard links）</h2><p>硬链接相当于文件的一个副本，但是创建硬链接的时候并没有复制一份源文件，而是将文件的node指向源文件，相当于一个空指针指向了文件的地址。</p>\n<blockquote>\n<p>The concept of a hard link is the most basic we will discuss today. Every file on the Linux filesystem starts with a single hard link. The link is between the filename and the actual data stored on the filesystem. Creating an additional hard link to a file means a few different things. Let’s discuss these.</p>\n<p>First, you create a new filename pointing to the exact same data as the old filename. This means that the two filenames, though different, point to identical data. For example, if I create file &#x2F;home&#x2F;tcarrigan&#x2F;demo&#x2F;link_test and write hello world in the file, I have a single hard link between the file name link_test and the file content hello world.</p>\n<p>When changes are made to one filename, the other reflects those changes. The permissions, link count, ownership, timestamps, and file content are the exact same. If the original file is deleted, the data still exists under the secondary hard link. The data is only removed from your drive when all links to the data have been removed. If you find two files with identical properties but are unsure if they are hard-linked, use the ls -i command to view the inode number. Files that are hard-linked together share the same inode number.</p>\n</blockquote>\n<h2 id=\"硬链接限制\"><a href=\"#硬链接限制\" class=\"headerlink\" title=\"硬链接限制\"></a>硬链接限制</h2><blockquote>\n<p>While useful, there are some limitations to what hard links can do. For starters, they can only be created for regular files (not directories or special files). Also, a hard link cannot span multiple filesystems. They only work when the new hard link exists on the same filesystem as the original.</p>\n</blockquote>\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://www.redhat.com/sysadmin/linking-linux-explained\">hard links and soft links explained</a></p>\n"},{"title":"macOS Docker 持久化安装 Redis","date":"2024-02-01T15:55:13.000Z","_content":"## 安装步骤\n\n```shell\ndocker run -v /Users/ao/Desktop/docker/redis/local-redis-stack.conf:/redis-stack.conf -v /Users/ao/Desktop/docker/redis/data:/data -p 6379:6379 -p 8001:8001 -d redis/redis-stack:latest\n```\n\n## 参考文章\n\n[Redis官方文章](https://redis.io/docs/install/install-stack/docker/)\n","source":"_posts/macos-docker-redis.md","raw":"---\ntitle: macOS Docker 持久化安装 Redis\ndate: 2024-02-01 23:55:13\ntags:\n---\n## 安装步骤\n\n```shell\ndocker run -v /Users/ao/Desktop/docker/redis/local-redis-stack.conf:/redis-stack.conf -v /Users/ao/Desktop/docker/redis/data:/data -p 6379:6379 -p 8001:8001 -d redis/redis-stack:latest\n```\n\n## 参考文章\n\n[Redis官方文章](https://redis.io/docs/install/install-stack/docker/)\n","slug":"macos-docker-redis","published":1,"updated":"2024-02-01T16:21:19.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4b0006j6yc4xvo8b3o","content":"<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-v</span> /Users/ao/Desktop/docker/redis/local-redis-stack.conf:/redis-stack.conf <span class=\"token parameter variable\">-v</span> /Users/ao/Desktop/docker/redis/data:/data <span class=\"token parameter variable\">-p</span> <span class=\"token number\">6379</span>:6379 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8001</span>:8001 <span class=\"token parameter variable\">-d</span> redis/redis-stack:latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://redis.io/docs/install/install-stack/docker/\">Redis官方文章</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-v</span> /Users/ao/Desktop/docker/redis/local-redis-stack.conf:/redis-stack.conf <span class=\"token parameter variable\">-v</span> /Users/ao/Desktop/docker/redis/data:/data <span class=\"token parameter variable\">-p</span> <span class=\"token number\">6379</span>:6379 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8001</span>:8001 <span class=\"token parameter variable\">-d</span> redis/redis-stack:latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://redis.io/docs/install/install-stack/docker/\">Redis官方文章</a></p>\n"},{"title":"macOS Docker安装MySQL8","date":"2024-02-01T15:33:06.000Z","_content":"### 版本号\n\n- macOS version `版本13.5 (22G74)`\n- Docker version `Docker version 24.0.6, build ed223bc`\n- MySQL version `mysql/mysql-server   latest    423da140c8c0   10 months ago   507MB` `mysql  Ver 8.0.32 for ·Linux on aarch64 (MySQL Community Server - GPL)`\n\n### 持久化安装\n\n新建一个mysql容器\n\n```shell\ndocker run --name mysql -p 3308:3306 -d mysql\n```\n\n从容器中复制一份my.cnf配置文件出来\n\n```shell\ndocker cp mysql:/etc/my.cnf /Users/ao/Desktop/docker/mysql\n```\n\n在复制出来的my.cnf文件中新增一条配置\n\n```txt\ndefault-authentication-plugin=mysql_native_password\n```\n\n删除容器\n\n```shell\ndocker stop 「容器ID」\ndocker remove 「容器ID」\n```\n\n![655633ee86ff7](655633ee86ff7.png)\n\n### 启动mysql容器\n\n```shell\ndocker run --name mysql -v /Users/ao/Desktop/docker/mysql/my.cnf:/etc/my.cnf -v /Users/ao/Desktop/docker/mysql/data:/var/lib/mysql -p 3308:3306 -e MYSQL_ROOT_PASSWORD=Ywc1989@@ -d mysql/mysql-server\n```\n\n![6556341408363](6556341408363.png)\n\n### Root用户允许远程登录\n\nmy.cnf添加配置行\n\n```shell\nbind-address = 0.0.0.0\n```\n\n进入容器配置\n\n```shell\ndocker exec -it mysql /bin/bash\nmysql -uroot -p\nuse mysql\nRENAME USER 'root'@'localhost' TO 'root'@'%';\nFLUSH PRIVILEGES;\n```\n\n![6556405f81268](6556405f81268.png)\n\n### 参考文章\n\n- [CSDN MySQL Docker8](https://blog.csdn.net/qq_26709459/article/details/128931193)\n- [知乎MySQL配置远程访问-评论](https://zhuanlan.zhihu.com/p/60539230)\n","source":"_posts/macos-docker-mysql8.md","raw":"---\ntitle: macOS Docker安装MySQL8\ndate: 2024-02-01 23:33:06\ntags:\n---\n### 版本号\n\n- macOS version `版本13.5 (22G74)`\n- Docker version `Docker version 24.0.6, build ed223bc`\n- MySQL version `mysql/mysql-server   latest    423da140c8c0   10 months ago   507MB` `mysql  Ver 8.0.32 for ·Linux on aarch64 (MySQL Community Server - GPL)`\n\n### 持久化安装\n\n新建一个mysql容器\n\n```shell\ndocker run --name mysql -p 3308:3306 -d mysql\n```\n\n从容器中复制一份my.cnf配置文件出来\n\n```shell\ndocker cp mysql:/etc/my.cnf /Users/ao/Desktop/docker/mysql\n```\n\n在复制出来的my.cnf文件中新增一条配置\n\n```txt\ndefault-authentication-plugin=mysql_native_password\n```\n\n删除容器\n\n```shell\ndocker stop 「容器ID」\ndocker remove 「容器ID」\n```\n\n![655633ee86ff7](655633ee86ff7.png)\n\n### 启动mysql容器\n\n```shell\ndocker run --name mysql -v /Users/ao/Desktop/docker/mysql/my.cnf:/etc/my.cnf -v /Users/ao/Desktop/docker/mysql/data:/var/lib/mysql -p 3308:3306 -e MYSQL_ROOT_PASSWORD=Ywc1989@@ -d mysql/mysql-server\n```\n\n![6556341408363](6556341408363.png)\n\n### Root用户允许远程登录\n\nmy.cnf添加配置行\n\n```shell\nbind-address = 0.0.0.0\n```\n\n进入容器配置\n\n```shell\ndocker exec -it mysql /bin/bash\nmysql -uroot -p\nuse mysql\nRENAME USER 'root'@'localhost' TO 'root'@'%';\nFLUSH PRIVILEGES;\n```\n\n![6556405f81268](6556405f81268.png)\n\n### 参考文章\n\n- [CSDN MySQL Docker8](https://blog.csdn.net/qq_26709459/article/details/128931193)\n- [知乎MySQL配置远程访问-评论](https://zhuanlan.zhihu.com/p/60539230)\n","slug":"macos-docker-mysql8","published":1,"updated":"2024-02-01T15:45:46.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4b0007j6yc1dch3d1b","content":"<h3 id=\"版本号\"><a href=\"#版本号\" class=\"headerlink\" title=\"版本号\"></a>版本号</h3><ul>\n<li>macOS version <code>版本13.5 (22G74)</code></li>\n<li>Docker version <code>Docker version 24.0.6, build ed223bc</code></li>\n<li>MySQL version <code>mysql/mysql-server   latest    423da140c8c0   10 months ago   507MB</code> <code>mysql  Ver 8.0.32 for ·Linux on aarch64 (MySQL Community Server - GPL)</code></li>\n</ul>\n<h3 id=\"持久化安装\"><a href=\"#持久化安装\" class=\"headerlink\" title=\"持久化安装\"></a>持久化安装</h3><p>新建一个mysql容器</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--name</span> mysql <span class=\"token parameter variable\">-p</span> <span class=\"token number\">3308</span>:3306 <span class=\"token parameter variable\">-d</span> mysql<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>从容器中复制一份my.cnf配置文件出来</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> mysql:/etc/my.cnf /Users/ao/Desktop/docker/mysql<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在复制出来的my.cnf文件中新增一条配置</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">default-authentication-plugin=mysql_native_password<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>删除容器</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> stop 「容器ID」\n<span class=\"token function\">docker</span> remove 「容器ID」<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/655633ee86ff7.png\" alt=\"655633ee86ff7\"></p>\n<h3 id=\"启动mysql容器\"><a href=\"#启动mysql容器\" class=\"headerlink\" title=\"启动mysql容器\"></a>启动mysql容器</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--name</span> mysql <span class=\"token parameter variable\">-v</span> /Users/ao/Desktop/docker/mysql/my.cnf:/etc/my.cnf <span class=\"token parameter variable\">-v</span> /Users/ao/Desktop/docker/mysql/data:/var/lib/mysql <span class=\"token parameter variable\">-p</span> <span class=\"token number\">3308</span>:3306 <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>Ywc1989@@ <span class=\"token parameter variable\">-d</span> mysql/mysql-server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/6556341408363.png\" alt=\"6556341408363\"></p>\n<h3 id=\"Root用户允许远程登录\"><a href=\"#Root用户允许远程登录\" class=\"headerlink\" title=\"Root用户允许远程登录\"></a>Root用户允许远程登录</h3><p>my.cnf添加配置行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">bind-address <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span>.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>进入容器配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mysql /bin/bash\nmysql <span class=\"token parameter variable\">-uroot</span> <span class=\"token parameter variable\">-p</span>\nuse mysql\nRENAME <span class=\"token environment constant\">USER</span> <span class=\"token string\">'root'</span>@<span class=\"token string\">'localhost'</span> TO <span class=\"token string\">'root'</span>@<span class=\"token string\">'%'</span><span class=\"token punctuation\">;</span>\nFLUSH PRIVILEGES<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/6556405f81268.png\" alt=\"6556405f81268\"></p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"https://blog.csdn.net/qq_26709459/article/details/128931193\">CSDN MySQL Docker8</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/60539230\">知乎MySQL配置远程访问-评论</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"版本号\"><a href=\"#版本号\" class=\"headerlink\" title=\"版本号\"></a>版本号</h3><ul>\n<li>macOS version <code>版本13.5 (22G74)</code></li>\n<li>Docker version <code>Docker version 24.0.6, build ed223bc</code></li>\n<li>MySQL version <code>mysql/mysql-server   latest    423da140c8c0   10 months ago   507MB</code> <code>mysql  Ver 8.0.32 for ·Linux on aarch64 (MySQL Community Server - GPL)</code></li>\n</ul>\n<h3 id=\"持久化安装\"><a href=\"#持久化安装\" class=\"headerlink\" title=\"持久化安装\"></a>持久化安装</h3><p>新建一个mysql容器</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--name</span> mysql <span class=\"token parameter variable\">-p</span> <span class=\"token number\">3308</span>:3306 <span class=\"token parameter variable\">-d</span> mysql<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>从容器中复制一份my.cnf配置文件出来</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> mysql:/etc/my.cnf /Users/ao/Desktop/docker/mysql<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在复制出来的my.cnf文件中新增一条配置</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">default-authentication-plugin=mysql_native_password<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>删除容器</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> stop 「容器ID」\n<span class=\"token function\">docker</span> remove 「容器ID」<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/655633ee86ff7.png\" alt=\"655633ee86ff7\"></p>\n<h3 id=\"启动mysql容器\"><a href=\"#启动mysql容器\" class=\"headerlink\" title=\"启动mysql容器\"></a>启动mysql容器</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--name</span> mysql <span class=\"token parameter variable\">-v</span> /Users/ao/Desktop/docker/mysql/my.cnf:/etc/my.cnf <span class=\"token parameter variable\">-v</span> /Users/ao/Desktop/docker/mysql/data:/var/lib/mysql <span class=\"token parameter variable\">-p</span> <span class=\"token number\">3308</span>:3306 <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>Ywc1989@@ <span class=\"token parameter variable\">-d</span> mysql/mysql-server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/6556341408363.png\" alt=\"6556341408363\"></p>\n<h3 id=\"Root用户允许远程登录\"><a href=\"#Root用户允许远程登录\" class=\"headerlink\" title=\"Root用户允许远程登录\"></a>Root用户允许远程登录</h3><p>my.cnf添加配置行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">bind-address <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span>.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>进入容器配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> mysql /bin/bash\nmysql <span class=\"token parameter variable\">-uroot</span> <span class=\"token parameter variable\">-p</span>\nuse mysql\nRENAME <span class=\"token environment constant\">USER</span> <span class=\"token string\">'root'</span>@<span class=\"token string\">'localhost'</span> TO <span class=\"token string\">'root'</span>@<span class=\"token string\">'%'</span><span class=\"token punctuation\">;</span>\nFLUSH PRIVILEGES<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/01/macos-docker-mysql8/6556405f81268.png\" alt=\"6556405f81268\"></p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"https://blog.csdn.net/qq_26709459/article/details/128931193\">CSDN MySQL Docker8</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/60539230\">知乎MySQL配置远程访问-评论</a></li>\n</ul>\n"},{"title":"树莓派安装 Emby","date":"2024-02-01T16:03:09.000Z","_content":"[Emby官网](https://emby.media/linux-server.html)\n选择deb包下载安装\n\n## 安装\n\n```bash\nsudo dpkg -i **.deb\n```\n","source":"_posts/pi-install-emby.md","raw":"---\ntitle: 树莓派安装 Emby\ndate: 2024-02-02 00:03:09\ntags:\n---\n[Emby官网](https://emby.media/linux-server.html)\n选择deb包下载安装\n\n## 安装\n\n```bash\nsudo dpkg -i **.deb\n```\n","slug":"pi-install-emby","published":1,"updated":"2024-02-01T16:21:19.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4b0008j6yc51645p7s","content":"<p><a href=\"https://emby.media/linux-server.html\">Emby官网</a><br>选择deb包下载安装</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> dpkg <span class=\"token parameter variable\">-i</span> **.deb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://emby.media/linux-server.html\">Emby官网</a><br>选择deb包下载安装</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> dpkg <span class=\"token parameter variable\">-i</span> **.deb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n"},{"title":"树莓派安装 LskyPro","date":"2024-02-01T16:04:01.000Z","_content":"## 安装php8.2\n\n1.Connect to Raspberry Pi via SSH and execute command to download GPG key:\n\n```bash\nsudo wget -qO /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg\n```\n\n2.Add PHP repository:\n\n```bash\necho \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" | sudo tee /etc/apt/sources.list.d/php.list\n```\n\n3.Update the package lists:\n\n```bash\nsudo apt update\n```\n\n4.~~Next, install PHP 8.2 with command line interface (CLI):~~\n\n```bash\nsudo apt install -y php8.2-fpm php8.2-common php8.2-cli php8.2-curl php8.2-gd php8.2-mbstring php8.2-xml php8.2-zip php8.2-mysql libapache2-mod-php8.2 php8.2-imagick php8.2-intl php8.2-bcmath\n```\n\n5.Check PHP version when installation was finished:\n\n```bash\nphp --version\n```\n\n6.php8.2报错500，改为php8.1\n\n```bash\nsudo apt install -y php8.1-fpm php8.1-common php8.1-cli php8.1-curl php8.1-gd php8.1-mbstring php8.1-xml php8.1-zip php8.1-mysql libapache2-mod-php8.1 php8.1-imagick php8.1-intl php8.1-bcmath\n```\n\n## 修改php.ini配置\n\n1.修改php.ini\n\n```bash\nvim /etc/php/8.2/fpm/php.ini\n```\n\n- 找到disable_functions，若 “=” 右侧存在exec、shell_exec、readlink、symlink、putenv、getenv函数，将其删除（默认状态下，等号右侧为空白）；\n- 找到memory_limit，根据机器配置适当调大 “=” 右侧最大内存大小；\n- 找到post_max_size，适当调大 “=” 右侧POST方法所能传输数据的最大大小；\n- 找到upload_max_filesize，适当调大 “=” 右侧最大文件上传大小；\n- 找到open_basedir，在其前面加上“;\"（默认已添加）;\n- 搜索Dynamic Extensions，你会在下面发现一堆前面跟着;的extension=xxx，对照兰空官方的依赖把该去掉的分号去掉\n2.重启服务\n\n```bash\nsudo systemctl restart php8.2-fpm && sudo systemctl status php8.2-fpm\n```\n\n## 创建数据库\n\n```bash\n# 创建wiki数据库\nCREATE DATABASE IF NOT EXISTS lsky DEFAULT CHARSET utf8 COLLATE utf8_general_ci;\n# 新建用户\ncreate user 'lskypro'@'localhost' identified by 'Ywc1989@@';\n# 赋予权限\nGRANT ALL PRIVILEGES ON lsky.* TO 'lskypro'@'localhost';\n# 刷新权限\nflush privileges;\nexit;\n```\n\n## 卸载PHP\n\n1.If you want to completely remove PHP anything related to it, execute the following command:\n\n```bash\nsudo apt purge --autoremove -y php-common mime-support\n```\n\n2.Remove GPG key and repository:\n\n```bash\nsudo rm -rf /etc/apt/trusted.gpg.d/php.gpg\nsudo rm -rf /etc/apt/sources.list.d/php.list\n```\n\n3.Remove PHP related file:\n\n```bash\nsudo rm -rf /var/lib/systemd/timers/stamp-phpsessionclean.timer\n```\n","source":"_posts/pi-install-lskypro.md","raw":"---\ntitle: 树莓派安装 LskyPro\ndate: 2024-02-02 00:04:01\ntags:\n---\n## 安装php8.2\n\n1.Connect to Raspberry Pi via SSH and execute command to download GPG key:\n\n```bash\nsudo wget -qO /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg\n```\n\n2.Add PHP repository:\n\n```bash\necho \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" | sudo tee /etc/apt/sources.list.d/php.list\n```\n\n3.Update the package lists:\n\n```bash\nsudo apt update\n```\n\n4.~~Next, install PHP 8.2 with command line interface (CLI):~~\n\n```bash\nsudo apt install -y php8.2-fpm php8.2-common php8.2-cli php8.2-curl php8.2-gd php8.2-mbstring php8.2-xml php8.2-zip php8.2-mysql libapache2-mod-php8.2 php8.2-imagick php8.2-intl php8.2-bcmath\n```\n\n5.Check PHP version when installation was finished:\n\n```bash\nphp --version\n```\n\n6.php8.2报错500，改为php8.1\n\n```bash\nsudo apt install -y php8.1-fpm php8.1-common php8.1-cli php8.1-curl php8.1-gd php8.1-mbstring php8.1-xml php8.1-zip php8.1-mysql libapache2-mod-php8.1 php8.1-imagick php8.1-intl php8.1-bcmath\n```\n\n## 修改php.ini配置\n\n1.修改php.ini\n\n```bash\nvim /etc/php/8.2/fpm/php.ini\n```\n\n- 找到disable_functions，若 “=” 右侧存在exec、shell_exec、readlink、symlink、putenv、getenv函数，将其删除（默认状态下，等号右侧为空白）；\n- 找到memory_limit，根据机器配置适当调大 “=” 右侧最大内存大小；\n- 找到post_max_size，适当调大 “=” 右侧POST方法所能传输数据的最大大小；\n- 找到upload_max_filesize，适当调大 “=” 右侧最大文件上传大小；\n- 找到open_basedir，在其前面加上“;\"（默认已添加）;\n- 搜索Dynamic Extensions，你会在下面发现一堆前面跟着;的extension=xxx，对照兰空官方的依赖把该去掉的分号去掉\n2.重启服务\n\n```bash\nsudo systemctl restart php8.2-fpm && sudo systemctl status php8.2-fpm\n```\n\n## 创建数据库\n\n```bash\n# 创建wiki数据库\nCREATE DATABASE IF NOT EXISTS lsky DEFAULT CHARSET utf8 COLLATE utf8_general_ci;\n# 新建用户\ncreate user 'lskypro'@'localhost' identified by 'Ywc1989@@';\n# 赋予权限\nGRANT ALL PRIVILEGES ON lsky.* TO 'lskypro'@'localhost';\n# 刷新权限\nflush privileges;\nexit;\n```\n\n## 卸载PHP\n\n1.If you want to completely remove PHP anything related to it, execute the following command:\n\n```bash\nsudo apt purge --autoremove -y php-common mime-support\n```\n\n2.Remove GPG key and repository:\n\n```bash\nsudo rm -rf /etc/apt/trusted.gpg.d/php.gpg\nsudo rm -rf /etc/apt/sources.list.d/php.list\n```\n\n3.Remove PHP related file:\n\n```bash\nsudo rm -rf /var/lib/systemd/timers/stamp-phpsessionclean.timer\n```\n","slug":"pi-install-lskypro","published":1,"updated":"2024-02-01T16:21:19.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4b0009j6yc5htwefn7","content":"<h2 id=\"安装php8-2\"><a href=\"#安装php8-2\" class=\"headerlink\" title=\"安装php8.2\"></a>安装php8.2</h2><p>1.Connect to Raspberry Pi via SSH and execute command to download GPG key:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-qO</span> /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.Add PHP repository:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"deb https://packages.sury.org/php/ <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release <span class=\"token parameter variable\">-sc</span><span class=\"token variable\">)</span></span> main\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/php.list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>3.Update the package lists:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.<del>Next, install PHP 8.2 with command line interface (CLI):</del></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> php8.2-fpm php8.2-common php8.2-cli php8.2-curl php8.2-gd php8.2-mbstring php8.2-xml php8.2-zip php8.2-mysql libapache2-mod-php8.2 php8.2-imagick php8.2-intl php8.2-bcmath<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>5.Check PHP version when installation was finished:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">php <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>6.php8.2报错500，改为php8.1</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> php8.1-fpm php8.1-common php8.1-cli php8.1-curl php8.1-gd php8.1-mbstring php8.1-xml php8.1-zip php8.1-mysql libapache2-mod-php8.1 php8.1-imagick php8.1-intl php8.1-bcmath<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"修改php-ini配置\"><a href=\"#修改php-ini配置\" class=\"headerlink\" title=\"修改php.ini配置\"></a>修改php.ini配置</h2><p>1.修改php.ini</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/php/8.2/fpm/php.ini<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>找到disable_functions，若 “&#x3D;” 右侧存在exec、shell_exec、readlink、symlink、putenv、getenv函数，将其删除（默认状态下，等号右侧为空白）；</li>\n<li>找到memory_limit，根据机器配置适当调大 “&#x3D;” 右侧最大内存大小；</li>\n<li>找到post_max_size，适当调大 “&#x3D;” 右侧POST方法所能传输数据的最大大小；</li>\n<li>找到upload_max_filesize，适当调大 “&#x3D;” 右侧最大文件上传大小；</li>\n<li>找到open_basedir，在其前面加上“;”（默认已添加）;</li>\n<li>搜索Dynamic Extensions，你会在下面发现一堆前面跟着;的extension&#x3D;xxx，对照兰空官方的依赖把该去掉的分号去掉<br>2.重启服务</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl restart php8.2-fpm <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> systemctl status php8.2-fpm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建wiki数据库</span>\nCREATE DATABASE IF NOT EXISTS lsky DEFAULT CHARSET utf8 COLLATE utf8_general_ci<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 新建用户</span>\ncreate user <span class=\"token string\">'lskypro'</span>@<span class=\"token string\">'localhost'</span> identified by <span class=\"token string\">'Ywc1989@@'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 赋予权限</span>\nGRANT ALL PRIVILEGES ON lsky.* TO <span class=\"token string\">'lskypro'</span>@<span class=\"token string\">'localhost'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 刷新权限</span>\nflush privileges<span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"卸载PHP\"><a href=\"#卸载PHP\" class=\"headerlink\" title=\"卸载PHP\"></a>卸载PHP</h2><p>1.If you want to completely remove PHP anything related to it, execute the following command:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge <span class=\"token parameter variable\">--autoremove</span> <span class=\"token parameter variable\">-y</span> php-common mime-support<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.Remove GPG key and repository:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /etc/apt/trusted.gpg.d/php.gpg\n<span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /etc/apt/sources.list.d/php.list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>3.Remove PHP related file:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /var/lib/systemd/timers/stamp-phpsessionclean.timer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装php8-2\"><a href=\"#安装php8-2\" class=\"headerlink\" title=\"安装php8.2\"></a>安装php8.2</h2><p>1.Connect to Raspberry Pi via SSH and execute command to download GPG key:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-qO</span> /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.Add PHP repository:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"deb https://packages.sury.org/php/ <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release <span class=\"token parameter variable\">-sc</span><span class=\"token variable\">)</span></span> main\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/php.list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>3.Update the package lists:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>4.<del>Next, install PHP 8.2 with command line interface (CLI):</del></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> php8.2-fpm php8.2-common php8.2-cli php8.2-curl php8.2-gd php8.2-mbstring php8.2-xml php8.2-zip php8.2-mysql libapache2-mod-php8.2 php8.2-imagick php8.2-intl php8.2-bcmath<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>5.Check PHP version when installation was finished:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">php <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>6.php8.2报错500，改为php8.1</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> php8.1-fpm php8.1-common php8.1-cli php8.1-curl php8.1-gd php8.1-mbstring php8.1-xml php8.1-zip php8.1-mysql libapache2-mod-php8.1 php8.1-imagick php8.1-intl php8.1-bcmath<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"修改php-ini配置\"><a href=\"#修改php-ini配置\" class=\"headerlink\" title=\"修改php.ini配置\"></a>修改php.ini配置</h2><p>1.修改php.ini</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/php/8.2/fpm/php.ini<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>找到disable_functions，若 “&#x3D;” 右侧存在exec、shell_exec、readlink、symlink、putenv、getenv函数，将其删除（默认状态下，等号右侧为空白）；</li>\n<li>找到memory_limit，根据机器配置适当调大 “&#x3D;” 右侧最大内存大小；</li>\n<li>找到post_max_size，适当调大 “&#x3D;” 右侧POST方法所能传输数据的最大大小；</li>\n<li>找到upload_max_filesize，适当调大 “&#x3D;” 右侧最大文件上传大小；</li>\n<li>找到open_basedir，在其前面加上“;”（默认已添加）;</li>\n<li>搜索Dynamic Extensions，你会在下面发现一堆前面跟着;的extension&#x3D;xxx，对照兰空官方的依赖把该去掉的分号去掉<br>2.重启服务</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl restart php8.2-fpm <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> systemctl status php8.2-fpm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建wiki数据库</span>\nCREATE DATABASE IF NOT EXISTS lsky DEFAULT CHARSET utf8 COLLATE utf8_general_ci<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 新建用户</span>\ncreate user <span class=\"token string\">'lskypro'</span>@<span class=\"token string\">'localhost'</span> identified by <span class=\"token string\">'Ywc1989@@'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 赋予权限</span>\nGRANT ALL PRIVILEGES ON lsky.* TO <span class=\"token string\">'lskypro'</span>@<span class=\"token string\">'localhost'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 刷新权限</span>\nflush privileges<span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"卸载PHP\"><a href=\"#卸载PHP\" class=\"headerlink\" title=\"卸载PHP\"></a>卸载PHP</h2><p>1.If you want to completely remove PHP anything related to it, execute the following command:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge <span class=\"token parameter variable\">--autoremove</span> <span class=\"token parameter variable\">-y</span> php-common mime-support<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2.Remove GPG key and repository:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /etc/apt/trusted.gpg.d/php.gpg\n<span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /etc/apt/sources.list.d/php.list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>3.Remove PHP related file:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /var/lib/systemd/timers/stamp-phpsessionclean.timer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n"},{"title":"树莓派安装 mariadb","date":"2024-02-01T16:04:39.000Z","_content":"## 安装\n\n```bash\nsudo apt install mariadb-server\n\nsudo mysql_secure_installation\n```\n\n## 参考文章\n\n[PiMyLife](https://pimylifeup.com/raspberry-pi-mysql/)\n","source":"_posts/pi-install-mariadb.md","raw":"---\ntitle: 树莓派安装 mariadb\ndate: 2024-02-02 00:04:39\ntags:\n---\n## 安装\n\n```bash\nsudo apt install mariadb-server\n\nsudo mysql_secure_installation\n```\n\n## 参考文章\n\n[PiMyLife](https://pimylifeup.com/raspberry-pi-mysql/)\n","slug":"pi-install-mariadb","published":1,"updated":"2024-02-01T16:21:19.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4c000aj6yccuv96wxg","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> mariadb-server\n\n<span class=\"token function\">sudo</span> mysql_secure_installation<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://pimylifeup.com/raspberry-pi-mysql/\">PiMyLife</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> mariadb-server\n\n<span class=\"token function\">sudo</span> mysql_secure_installation<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://pimylifeup.com/raspberry-pi-mysql/\">PiMyLife</a></p>\n"},{"title":"树莓派安装 Stash","date":"2024-02-01T16:05:16.000Z","_content":"## 安装\n\n```bash\nsudo mkdir /etc/stash && cd /etc/stash\nsudo wget https://github.com/stashapp/stash/releases/download/v0.24.1/stash-linux-arm32v6\nsudo mv stash-linux-arm32v6 stash\nsudo chown root:root stash\nsudo chmod u+x stash\n```\n\n## 安装ffmpeg\n\n```bash\nsudo apt install ffmpeg\n```\n\n## 配置\n\n```bash\nsudo vim /etc/systemd/system/stash.service\n\n[Unit]\nDescription=Stash\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/etc/stash/stash\nRestart=always\n# Consider creating a dedicated user for Wiki.js here:\nUser=root\nWorkingDirectory=/etc/stash\n\n[Install]\nWantedBy=multi-user.target\n```\n\n## 启动\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl start stash\n```\n\n## 参考文章\n\n[stash](https://github.com/stashapp/stash/)\n","source":"_posts/pi-install-stash.md","raw":"---\ntitle: 树莓派安装 Stash\ndate: 2024-02-02 00:05:16\ntags:\n---\n## 安装\n\n```bash\nsudo mkdir /etc/stash && cd /etc/stash\nsudo wget https://github.com/stashapp/stash/releases/download/v0.24.1/stash-linux-arm32v6\nsudo mv stash-linux-arm32v6 stash\nsudo chown root:root stash\nsudo chmod u+x stash\n```\n\n## 安装ffmpeg\n\n```bash\nsudo apt install ffmpeg\n```\n\n## 配置\n\n```bash\nsudo vim /etc/systemd/system/stash.service\n\n[Unit]\nDescription=Stash\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/etc/stash/stash\nRestart=always\n# Consider creating a dedicated user for Wiki.js here:\nUser=root\nWorkingDirectory=/etc/stash\n\n[Install]\nWantedBy=multi-user.target\n```\n\n## 启动\n\n```bash\nsudo systemctl daemon-reload\nsudo systemctl start stash\n```\n\n## 参考文章\n\n[stash](https://github.com/stashapp/stash/)\n","slug":"pi-install-stash","published":1,"updated":"2024-02-01T16:21:19.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4c000bj6yc20jl0clq","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /etc/stash <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> /etc/stash\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> https://github.com/stashapp/stash/releases/download/v0.24.1/stash-linux-arm32v6\n<span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> stash-linux-arm32v6 stash\n<span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> root:root stash\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> u+x stash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装ffmpeg\"><a href=\"#安装ffmpeg\" class=\"headerlink\" title=\"安装ffmpeg\"></a>安装ffmpeg</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> ffmpeg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/systemd/system/stash.service\n\n<span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>Stash\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target\n\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Type</span><span class=\"token operator\">=</span>simple\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/stash/stash\n<span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always\n<span class=\"token comment\"># Consider creating a dedicated user for Wiki.js here:</span>\n<span class=\"token assign-left variable\">User</span><span class=\"token operator\">=</span>root\n<span class=\"token assign-left variable\">WorkingDirectory</span><span class=\"token operator\">=</span>/etc/stash\n\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl daemon-reload\n<span class=\"token function\">sudo</span> systemctl start stash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://github.com/stashapp/stash/\">stash</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /etc/stash <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> /etc/stash\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> https://github.com/stashapp/stash/releases/download/v0.24.1/stash-linux-arm32v6\n<span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> stash-linux-arm32v6 stash\n<span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> root:root stash\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> u+x stash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装ffmpeg\"><a href=\"#安装ffmpeg\" class=\"headerlink\" title=\"安装ffmpeg\"></a>安装ffmpeg</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> ffmpeg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/systemd/system/stash.service\n\n<span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>Stash\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network.target\n\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Type</span><span class=\"token operator\">=</span>simple\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/etc/stash/stash\n<span class=\"token assign-left variable\">Restart</span><span class=\"token operator\">=</span>always\n<span class=\"token comment\"># Consider creating a dedicated user for Wiki.js here:</span>\n<span class=\"token assign-left variable\">User</span><span class=\"token operator\">=</span>root\n<span class=\"token assign-left variable\">WorkingDirectory</span><span class=\"token operator\">=</span>/etc/stash\n\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl daemon-reload\n<span class=\"token function\">sudo</span> systemctl start stash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://github.com/stashapp/stash/\">stash</a></p>\n"},{"title":"树莓派安装 valutwarden","date":"2024-02-01T16:05:45.000Z","_content":"## 创建目录\n\n```bash\nmkdir dockers/vaultwarden/data\n```\n\n## 安装\n\n```bash\ndocker pull vaultwarden/server:latest\n\ndocker run -d --name bitwarden \\\n    --restart=always \\\n    -v /bw-data/:/data/ \\\n    -p 127.0.0.1:8080:80 \\\n    -p 127.0.0.1:3012:3012 \\\n    vaultwarden/server:latest\n```\n\n## 配置Nginx\n\n```txt\nserver {\n        listen 80;\n        server_name bitwarden.ao.abc;\n        location / {\n          # proxy_pass http://localhost:5230;\n          # proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求\n      # proxy_set_header X-Real-IP $remote_addr;\n      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      return 301 https://$host$request_uri;\n        }\n}\n\nserver {\n        listen 443 ssl;\n        listen [::]:443;\n\n        server_name bitwarden.ao.abc;\n        ssl_certificate      ao.abc+4.pem;\n  ssl_certificate_key  ao.abc+4-key.pem;\n\n        # SSL 会话配置\n  ssl_session_cache    shared:SSL:10m;\n  ssl_session_timeout  10m;\n\n        # SSL 协议、加密配置\n  ssl_protocols  TLSv1.1 TLSv1.2 TLSv1.3;\n  ssl_ciphers  HIGH:!aNULL:!MD5;\n  ssl_prefer_server_ciphers  on;\n\n  location / {\n    proxy_pass http://localhost:8080;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n  }\n  \n  location /notifications/hub {\n    proxy_pass http://localhost:3012;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n  }\n  \n  location /notifications/hub/negotiate {\n    proxy_pass http://localhost:8080;\n  }\n}\n```\n\n## 参考文章\n\n[pimylifeup](https://pimylifeup.com/raspberry-pi-bitwarden/)\n","source":"_posts/pi-install-valutwarden.md","raw":"---\ntitle: 树莓派安装 valutwarden\ndate: 2024-02-02 00:05:45\ntags:\n---\n## 创建目录\n\n```bash\nmkdir dockers/vaultwarden/data\n```\n\n## 安装\n\n```bash\ndocker pull vaultwarden/server:latest\n\ndocker run -d --name bitwarden \\\n    --restart=always \\\n    -v /bw-data/:/data/ \\\n    -p 127.0.0.1:8080:80 \\\n    -p 127.0.0.1:3012:3012 \\\n    vaultwarden/server:latest\n```\n\n## 配置Nginx\n\n```txt\nserver {\n        listen 80;\n        server_name bitwarden.ao.abc;\n        location / {\n          # proxy_pass http://localhost:5230;\n          # proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求\n      # proxy_set_header X-Real-IP $remote_addr;\n      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      return 301 https://$host$request_uri;\n        }\n}\n\nserver {\n        listen 443 ssl;\n        listen [::]:443;\n\n        server_name bitwarden.ao.abc;\n        ssl_certificate      ao.abc+4.pem;\n  ssl_certificate_key  ao.abc+4-key.pem;\n\n        # SSL 会话配置\n  ssl_session_cache    shared:SSL:10m;\n  ssl_session_timeout  10m;\n\n        # SSL 协议、加密配置\n  ssl_protocols  TLSv1.1 TLSv1.2 TLSv1.3;\n  ssl_ciphers  HIGH:!aNULL:!MD5;\n  ssl_prefer_server_ciphers  on;\n\n  location / {\n    proxy_pass http://localhost:8080;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n  }\n  \n  location /notifications/hub {\n    proxy_pass http://localhost:3012;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n  }\n  \n  location /notifications/hub/negotiate {\n    proxy_pass http://localhost:8080;\n  }\n}\n```\n\n## 参考文章\n\n[pimylifeup](https://pimylifeup.com/raspberry-pi-bitwarden/)\n","slug":"pi-install-valutwarden","published":1,"updated":"2024-02-01T16:21:19.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4c000cj6yc944c8zwd","content":"<h2 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> dockers/vaultwarden/data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> pull vaultwarden/server:latest\n\n<span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> bitwarden <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-v</span> /bw-data/:/data/ <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-p</span> <span class=\"token number\">127.0</span>.0.1:8080:80 <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-p</span> <span class=\"token number\">127.0</span>.0.1:3012:3012 <span class=\"token punctuation\">\\</span>\n    vaultwarden/server:latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h2><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">server &#123;\n        listen 80;\n        server_name bitwarden.ao.abc;\n        location / &#123;\n          # proxy_pass http://localhost:5230;\n          # proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求\n      # proxy_set_header X-Real-IP $remote_addr;\n      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      return 301 https://$host$request_uri;\n        &#125;\n&#125;\n\nserver &#123;\n        listen 443 ssl;\n        listen [::]:443;\n\n        server_name bitwarden.ao.abc;\n        ssl_certificate      ao.abc+4.pem;\n  ssl_certificate_key  ao.abc+4-key.pem;\n\n        # SSL 会话配置\n  ssl_session_cache    shared:SSL:10m;\n  ssl_session_timeout  10m;\n\n        # SSL 协议、加密配置\n  ssl_protocols  TLSv1.1 TLSv1.2 TLSv1.3;\n  ssl_ciphers  HIGH:!aNULL:!MD5;\n  ssl_prefer_server_ciphers  on;\n\n  location / &#123;\n    proxy_pass http://localhost:8080;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n  &#125;\n  \n  location /notifications/hub &#123;\n    proxy_pass http://localhost:3012;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n  &#125;\n  \n  location /notifications/hub/negotiate &#123;\n    proxy_pass http://localhost:8080;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://pimylifeup.com/raspberry-pi-bitwarden/\">pimylifeup</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> dockers/vaultwarden/data<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> pull vaultwarden/server:latest\n\n<span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> bitwarden <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-v</span> /bw-data/:/data/ <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-p</span> <span class=\"token number\">127.0</span>.0.1:8080:80 <span class=\"token punctuation\">\\</span>\n    <span class=\"token parameter variable\">-p</span> <span class=\"token number\">127.0</span>.0.1:3012:3012 <span class=\"token punctuation\">\\</span>\n    vaultwarden/server:latest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h2><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">server &#123;\n        listen 80;\n        server_name bitwarden.ao.abc;\n        location / &#123;\n          # proxy_pass http://localhost:5230;\n          # proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求\n      # proxy_set_header X-Real-IP $remote_addr;\n      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      return 301 https://$host$request_uri;\n        &#125;\n&#125;\n\nserver &#123;\n        listen 443 ssl;\n        listen [::]:443;\n\n        server_name bitwarden.ao.abc;\n        ssl_certificate      ao.abc+4.pem;\n  ssl_certificate_key  ao.abc+4-key.pem;\n\n        # SSL 会话配置\n  ssl_session_cache    shared:SSL:10m;\n  ssl_session_timeout  10m;\n\n        # SSL 协议、加密配置\n  ssl_protocols  TLSv1.1 TLSv1.2 TLSv1.3;\n  ssl_ciphers  HIGH:!aNULL:!MD5;\n  ssl_prefer_server_ciphers  on;\n\n  location / &#123;\n    proxy_pass http://localhost:8080;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n  &#125;\n  \n  location /notifications/hub &#123;\n    proxy_pass http://localhost:3012;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n  &#125;\n  \n  location /notifications/hub/negotiate &#123;\n    proxy_pass http://localhost:8080;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://pimylifeup.com/raspberry-pi-bitwarden/\">pimylifeup</a></p>\n"},{"title":"Ubuntu 启动 CloudFlare 端口模式","date":"2024-02-01T16:09:46.000Z","_content":"![655df1d56c1df](655df1d56c1df.png)\n\n```shell\nwarp-cli set-mode proxy\nwarp-cli set-proxy-port 3200\nwarp-cli connect\n```\n\n```shell\nchmod u+x ./warp-yxip.sh\nwarp-cli set-custom-endpoint 162.159.195.98:3476\n```\n\n![655e19260504a](655e19260504a.png)\n\n## 附件\n\n[warp-yxip.sh](warp-yxip.sh)\n","source":"_posts/ubuntu-cloudflare-proxy-port.md","raw":"---\ntitle: Ubuntu 启动 CloudFlare 端口模式\ndate: 2024-02-02 00:09:46\ntags:\n---\n![655df1d56c1df](655df1d56c1df.png)\n\n```shell\nwarp-cli set-mode proxy\nwarp-cli set-proxy-port 3200\nwarp-cli connect\n```\n\n```shell\nchmod u+x ./warp-yxip.sh\nwarp-cli set-custom-endpoint 162.159.195.98:3476\n```\n\n![655e19260504a](655e19260504a.png)\n\n## 附件\n\n[warp-yxip.sh](warp-yxip.sh)\n","slug":"ubuntu-cloudflare-proxy-port","published":1,"updated":"2024-02-01T16:21:19.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4d000dj6ycfb45ae6y","content":"<p><img src=\"/2024/02/02/ubuntu-cloudflare-proxy-port/655df1d56c1df.png\" alt=\"655df1d56c1df\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">warp-cli set-mode proxy\nwarp-cli set-proxy-port <span class=\"token number\">3200</span>\nwarp-cli connect<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> u+x ./warp-yxip.sh\nwarp-cli set-custom-endpoint <span class=\"token number\">162.159</span>.195.98:3476<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/02/ubuntu-cloudflare-proxy-port/655e19260504a.png\" alt=\"655e19260504a\"></p>\n<h2 id=\"附件\"><a href=\"#附件\" class=\"headerlink\" title=\"附件\"></a>附件</h2><p><a href=\"warp-yxip.sh\">warp-yxip.sh</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/2024/02/02/ubuntu-cloudflare-proxy-port/655df1d56c1df.png\" alt=\"655df1d56c1df\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">warp-cli set-mode proxy\nwarp-cli set-proxy-port <span class=\"token number\">3200</span>\nwarp-cli connect<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> u+x ./warp-yxip.sh\nwarp-cli set-custom-endpoint <span class=\"token number\">162.159</span>.195.98:3476<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/02/ubuntu-cloudflare-proxy-port/655e19260504a.png\" alt=\"655e19260504a\"></p>\n<h2 id=\"附件\"><a href=\"#附件\" class=\"headerlink\" title=\"附件\"></a>附件</h2><p><a href=\"warp-yxip.sh\">warp-yxip.sh</a></p>\n"},{"title":"Ubuntu 安装 Docker 和 docker-compose","date":"2024-02-01T16:15:22.000Z","_content":"## 软件版本\n\n```shell\nubuntu - Ubuntu 22.04.3 LTS x86_64\ndocker - Docker version 24.0.7, build afdd53b\ndocker-compose - Docker Compose version v2.23.1\n```\n\n## 安装docker\n\n```shell\n# Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  \"$(. /etc/os-release && echo \"$VERSION_CODENAME\")\" stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\n```\n\n```shell\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n```\n\n## 安装docker-compose\n\n[GitHub](https://github.com/docker/compose/releases/)\n\n```shell\nwget https://github.com/docker/compose/releases/download/v2.23.1/docker-compose-linux-x86_64\nmv mv docker-compose-linux-x86_64 docker-compose\nchmod u+x docker-compose\nsudo mv docker-compose /usr/local/bin/docker-compose\nln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\ndocker-compose --version\n```\n\n## 将用户加入docker组\n\n```shell\nsudo usermod -aG docker $USER\n```\n\n## 参考文章\n\n[docker](https://docs.docker.com/engine/install/ubuntu/)\n","source":"_posts/ubuntu-install-docker-dockercompose.md","raw":"---\ntitle: Ubuntu 安装 Docker 和 docker-compose\ndate: 2024-02-02 00:15:22\ntags:\n---\n## 软件版本\n\n```shell\nubuntu - Ubuntu 22.04.3 LTS x86_64\ndocker - Docker version 24.0.7, build afdd53b\ndocker-compose - Docker Compose version v2.23.1\n```\n\n## 安装docker\n\n```shell\n# Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  \"$(. /etc/os-release && echo \"$VERSION_CODENAME\")\" stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\n```\n\n```shell\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n```\n\n## 安装docker-compose\n\n[GitHub](https://github.com/docker/compose/releases/)\n\n```shell\nwget https://github.com/docker/compose/releases/download/v2.23.1/docker-compose-linux-x86_64\nmv mv docker-compose-linux-x86_64 docker-compose\nchmod u+x docker-compose\nsudo mv docker-compose /usr/local/bin/docker-compose\nln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\ndocker-compose --version\n```\n\n## 将用户加入docker组\n\n```shell\nsudo usermod -aG docker $USER\n```\n\n## 参考文章\n\n[docker](https://docs.docker.com/engine/install/ubuntu/)\n","slug":"ubuntu-install-docker-dockercompose","published":1,"updated":"2024-02-01T16:21:19.637Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4d000ej6yc0n8p5aze","content":"<h2 id=\"软件版本\"><a href=\"#软件版本\" class=\"headerlink\" title=\"软件版本\"></a>软件版本</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ubuntu - Ubuntu <span class=\"token number\">22.04</span>.3 LTS x86_64\n<span class=\"token function\">docker</span> - Docker version <span class=\"token number\">24.0</span>.7, build afdd53b\n<span class=\"token function\">docker-compose</span> - Docker Compose version v2.23.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Add Docker's official GPG key:</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> ca-certificates <span class=\"token function\">curl</span> gnupg\n<span class=\"token function\">sudo</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-m</span> 0755 <span class=\"token parameter variable\">-d</span> /etc/apt/keyrings\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> gpg <span class=\"token parameter variable\">--dearmor</span> <span class=\"token parameter variable\">-o</span> /etc/apt/keyrings/docker.gpg\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> a+r /etc/apt/keyrings/docker.gpg\n\n<span class=\"token comment\"># Add the repository to Apt sources:</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token string\">\"deb [arch=\"</span><span class=\"token variable\"><span class=\"token variable\">$(</span>dpkg --print-architecture<span class=\"token variable\">)</span></span><span class=\"token string\">\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  \"</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">.</span> /etc/os-release <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$VERSION_CODENAME</span>\"</span><span class=\"token variable\">)</span></span><span class=\"token string\">\" stable\"</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/docker.list <span class=\"token operator\">></span> /dev/null\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"安装docker-compose\"><a href=\"#安装docker-compose\" class=\"headerlink\" title=\"安装docker-compose\"></a>安装docker-compose</h2><p><a href=\"https://github.com/docker/compose/releases/\">GitHub</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/docker/compose/releases/download/v2.23.1/docker-compose-linux-x86_64\n<span class=\"token function\">mv</span> <span class=\"token function\">mv</span> docker-compose-linux-x86_64 <span class=\"token function\">docker-compose</span>\n<span class=\"token function\">chmod</span> u+x <span class=\"token function\">docker-compose</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> <span class=\"token function\">docker-compose</span> /usr/local/bin/docker-compose\n<span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /usr/local/bin/docker-compose /usr/bin/docker-compose\n<span class=\"token function\">docker-compose</span> <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"将用户加入docker组\"><a href=\"#将用户加入docker组\" class=\"headerlink\" title=\"将用户加入docker组\"></a>将用户加入docker组</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-aG</span> <span class=\"token function\">docker</span> <span class=\"token environment constant\">$USER</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://docs.docker.com/engine/install/ubuntu/\">docker</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"软件版本\"><a href=\"#软件版本\" class=\"headerlink\" title=\"软件版本\"></a>软件版本</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ubuntu - Ubuntu <span class=\"token number\">22.04</span>.3 LTS x86_64\n<span class=\"token function\">docker</span> - Docker version <span class=\"token number\">24.0</span>.7, build afdd53b\n<span class=\"token function\">docker-compose</span> - Docker Compose version v2.23.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Add Docker's official GPG key:</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> ca-certificates <span class=\"token function\">curl</span> gnupg\n<span class=\"token function\">sudo</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-m</span> 0755 <span class=\"token parameter variable\">-d</span> /etc/apt/keyrings\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> gpg <span class=\"token parameter variable\">--dearmor</span> <span class=\"token parameter variable\">-o</span> /etc/apt/keyrings/docker.gpg\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> a+r /etc/apt/keyrings/docker.gpg\n\n<span class=\"token comment\"># Add the repository to Apt sources:</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token string\">\"deb [arch=\"</span><span class=\"token variable\"><span class=\"token variable\">$(</span>dpkg --print-architecture<span class=\"token variable\">)</span></span><span class=\"token string\">\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  \"</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">.</span> /etc/os-release <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$VERSION_CODENAME</span>\"</span><span class=\"token variable\">)</span></span><span class=\"token string\">\" stable\"</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/docker.list <span class=\"token operator\">></span> /dev/null\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"安装docker-compose\"><a href=\"#安装docker-compose\" class=\"headerlink\" title=\"安装docker-compose\"></a>安装docker-compose</h2><p><a href=\"https://github.com/docker/compose/releases/\">GitHub</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/docker/compose/releases/download/v2.23.1/docker-compose-linux-x86_64\n<span class=\"token function\">mv</span> <span class=\"token function\">mv</span> docker-compose-linux-x86_64 <span class=\"token function\">docker-compose</span>\n<span class=\"token function\">chmod</span> u+x <span class=\"token function\">docker-compose</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> <span class=\"token function\">docker-compose</span> /usr/local/bin/docker-compose\n<span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /usr/local/bin/docker-compose /usr/bin/docker-compose\n<span class=\"token function\">docker-compose</span> <span class=\"token parameter variable\">--version</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"将用户加入docker组\"><a href=\"#将用户加入docker组\" class=\"headerlink\" title=\"将用户加入docker组\"></a>将用户加入docker组</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-aG</span> <span class=\"token function\">docker</span> <span class=\"token environment constant\">$USER</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><p><a href=\"https://docs.docker.com/engine/install/ubuntu/\">docker</a></p>\n"},{"title":"Ubuntu 开机启动 frp 内网穿透","date":"2024-02-01T16:16:23.000Z","_content":"## 创建文件\n\n```shell\nsudo vim /etc/systemd/system/frpc.service\n```\n\n文件内容\n\n```txt\nDescription=My Frp Client Service - %i                                                                                                                    \nAfter=network.target syslog.target\nWants=network.target\n\n[Service]\nType=simple\nRestart=on-failure\nRestartSec=5s\nExecStart=/bin/bash -c '/home/ao/frp-ubuntu/frpc -c /home/ao/frp-ubuntu/frpc.toml'\n\n[Install]\nWantedBy=multi-user.target\n```\n\n启用服务\n\n```shell\nsudo systemctl daemon-reload\nsudo systemctl enable frpc\nsudo systemctl start frpc\n```\n","source":"_posts/ubuntu-install-frp.md","raw":"---\ntitle: Ubuntu 开机启动 frp 内网穿透\ndate: 2024-02-02 00:16:23\ntags:\n---\n## 创建文件\n\n```shell\nsudo vim /etc/systemd/system/frpc.service\n```\n\n文件内容\n\n```txt\nDescription=My Frp Client Service - %i                                                                                                                    \nAfter=network.target syslog.target\nWants=network.target\n\n[Service]\nType=simple\nRestart=on-failure\nRestartSec=5s\nExecStart=/bin/bash -c '/home/ao/frp-ubuntu/frpc -c /home/ao/frp-ubuntu/frpc.toml'\n\n[Install]\nWantedBy=multi-user.target\n```\n\n启用服务\n\n```shell\nsudo systemctl daemon-reload\nsudo systemctl enable frpc\nsudo systemctl start frpc\n```\n","slug":"ubuntu-install-frp","published":1,"updated":"2024-02-01T16:21:19.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4d000fj6ychf84fnvz","content":"<h2 id=\"创建文件\"><a href=\"#创建文件\" class=\"headerlink\" title=\"创建文件\"></a>创建文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/systemd/system/frpc.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>文件内容</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">Description=My Frp Client Service - %i                                                                                                                    \nAfter=network.target syslog.target\nWants=network.target\n\n[Service]\nType=simple\nRestart=on-failure\nRestartSec=5s\nExecStart=/bin/bash -c '/home/ao/frp-ubuntu/frpc -c /home/ao/frp-ubuntu/frpc.toml'\n\n[Install]\nWantedBy=multi-user.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>启用服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl daemon-reload\n<span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> frpc\n<span class=\"token function\">sudo</span> systemctl start frpc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建文件\"><a href=\"#创建文件\" class=\"headerlink\" title=\"创建文件\"></a>创建文件</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/systemd/system/frpc.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>文件内容</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">Description=My Frp Client Service - %i                                                                                                                    \nAfter=network.target syslog.target\nWants=network.target\n\n[Service]\nType=simple\nRestart=on-failure\nRestartSec=5s\nExecStart=/bin/bash -c '/home/ao/frp-ubuntu/frpc -c /home/ao/frp-ubuntu/frpc.toml'\n\n[Install]\nWantedBy=multi-user.target<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>启用服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl daemon-reload\n<span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> frpc\n<span class=\"token function\">sudo</span> systemctl start frpc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n"},{"title":"Ubuntu mv、cp 命令添加进度条","date":"2024-02-01T16:06:47.000Z","_content":"cp和mv是GNU coreutils的一部分，首先下载最新的GNU源码。\n[地址](https://ftp.gnu.org/gnu/coreutils/)\n最新的为9.1\n`wget https://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz`\n\n## 解压\n\n```shell\ntar -xf coreutils-9.1.tar.xz\n\ncd coreutils-9.1\n\nwget https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.9-9.1.patch\n```\n\n## 打补丁\n\n```shell\npatch -p1 -i advcpmv-0.9-9.1.patch\n\n./configure\n\nmake\n\nsudo cp src/mv src/cp /usr/local/bin\n\nvim ~/.zshrc\n\nalias cp='/usr/local/bin/cp -gR'\nalias mv='/usr/local/bin/mv -g'\n```\n","source":"_posts/ubuntu-mv-cp-status.md","raw":"---\ntitle: Ubuntu mv、cp 命令添加进度条\ndate: 2024-02-02 00:06:47\ntags:\n---\ncp和mv是GNU coreutils的一部分，首先下载最新的GNU源码。\n[地址](https://ftp.gnu.org/gnu/coreutils/)\n最新的为9.1\n`wget https://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz`\n\n## 解压\n\n```shell\ntar -xf coreutils-9.1.tar.xz\n\ncd coreutils-9.1\n\nwget https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.9-9.1.patch\n```\n\n## 打补丁\n\n```shell\npatch -p1 -i advcpmv-0.9-9.1.patch\n\n./configure\n\nmake\n\nsudo cp src/mv src/cp /usr/local/bin\n\nvim ~/.zshrc\n\nalias cp='/usr/local/bin/cp -gR'\nalias mv='/usr/local/bin/mv -g'\n```\n","slug":"ubuntu-mv-cp-status","published":1,"updated":"2024-02-01T16:21:19.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4d000gj6ych1qrcp0s","content":"<p>cp和mv是GNU coreutils的一部分，首先下载最新的GNU源码。<br><a href=\"https://ftp.gnu.org/gnu/coreutils/\">地址</a><br>最新的为9.1<br><code>wget https://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz</code></p>\n<h2 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> coreutils-9.1.tar.xz\n\n<span class=\"token builtin class-name\">cd</span> coreutils-9.1\n\n<span class=\"token function\">wget</span> https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.9-9.1.patch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"打补丁\"><a href=\"#打补丁\" class=\"headerlink\" title=\"打补丁\"></a>打补丁</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">patch <span class=\"token parameter variable\">-p1</span> <span class=\"token parameter variable\">-i</span> advcpmv-0.9-9.1.patch\n\n./configure\n\n<span class=\"token function\">make</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> src/mv src/cp /usr/local/bin\n\n<span class=\"token function\">vim</span> ~/.zshrc\n\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">cp</span><span class=\"token operator\">=</span><span class=\"token string\">'/usr/local/bin/cp -gR'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">mv</span><span class=\"token operator\">=</span><span class=\"token string\">'/usr/local/bin/mv -g'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"","more":"<p>cp和mv是GNU coreutils的一部分，首先下载最新的GNU源码。<br><a href=\"https://ftp.gnu.org/gnu/coreutils/\">地址</a><br>最新的为9.1<br><code>wget https://ftp.gnu.org/gnu/coreutils/coreutils-9.1.tar.xz</code></p>\n<h2 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xf</span> coreutils-9.1.tar.xz\n\n<span class=\"token builtin class-name\">cd</span> coreutils-9.1\n\n<span class=\"token function\">wget</span> https://raw.githubusercontent.com/jarun/advcpmv/master/advcpmv-0.9-9.1.patch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"打补丁\"><a href=\"#打补丁\" class=\"headerlink\" title=\"打补丁\"></a>打补丁</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">patch <span class=\"token parameter variable\">-p1</span> <span class=\"token parameter variable\">-i</span> advcpmv-0.9-9.1.patch\n\n./configure\n\n<span class=\"token function\">make</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> src/mv src/cp /usr/local/bin\n\n<span class=\"token function\">vim</span> ~/.zshrc\n\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">cp</span><span class=\"token operator\">=</span><span class=\"token string\">'/usr/local/bin/cp -gR'</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">mv</span><span class=\"token operator\">=</span><span class=\"token string\">'/usr/local/bin/mv -g'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"UbuntuServer 安装初始化设置","date":"2024-02-01T16:07:33.000Z","_content":"## 安装CloudFlare\n\n```shell\n# Add cloudflare gpg key\ncurl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg\n\n\n# Add this repo to your apt repositories\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list\n\n\n# Install\nsudo apt-get update && sudo apt-get install cloudflare-warp\n```\n\n## 更新\n\n```shell\nsudo apt update -y && sudo apt upgrade -y\n```\n\n## 去掉碍眼的提示\n\n```shell\nNo containers need to be restarted.\n\nNo user sessions are running outdated binaries.\n\nNo VM guests are running outdated hypervisor (qemu) binaries on this host.\n```\n\n```shell\nsudo apt purge needrestart -y\n```\n\n## 使用全部磁盘空间\n\n![磁盘没有全部使用](https://lsky.ao.abc/i/2023/11/21/655c63e9bcb76.png)\n\n```shell\n# 查看现有的卷组\nsudo vgdisplay\n# 扩展现有的逻辑卷\nsudo lvextend -l +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv\n# 重新计算逻辑卷大小\nsudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv\n```\n\n## 安装oh-my-zsh\n\n```shell\n# 安装zsh\nsudo apt install zsh -y\n# 切换zsh\nchsh -s /bin/zsh\n# 安装oh-my-zsh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n# 安装插件\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\ngit clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/fast-syntax-highlighting\n\ngit clone https://github.com/marlonrichert/zsh-autocomplete.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autocomplete\n```\n\n## 安装nvm\n\n```shell\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash\n# 设置淘宝源\nvim ~/.zshrc\n\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\n\nvim ~/.npmrc\n\nregistry https://registry.npm.taobao.org\n\n# npm 安装全局插件\nnpm i -g prettier eslint stylelint pnpm yarn\n```\n\n## 安装Docker\n\n## 参考文章\n\n- [1.1.1.1 CloudFlare-Ubuntu](https://pkg.cloudflareclient.com/)\n","source":"_posts/ubuntu-server-install-init.md","raw":"---\ntitle: UbuntuServer 安装初始化设置\ndate: 2024-02-02 00:07:33\ntags:\n---\n## 安装CloudFlare\n\n```shell\n# Add cloudflare gpg key\ncurl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg\n\n\n# Add this repo to your apt repositories\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list\n\n\n# Install\nsudo apt-get update && sudo apt-get install cloudflare-warp\n```\n\n## 更新\n\n```shell\nsudo apt update -y && sudo apt upgrade -y\n```\n\n## 去掉碍眼的提示\n\n```shell\nNo containers need to be restarted.\n\nNo user sessions are running outdated binaries.\n\nNo VM guests are running outdated hypervisor (qemu) binaries on this host.\n```\n\n```shell\nsudo apt purge needrestart -y\n```\n\n## 使用全部磁盘空间\n\n![磁盘没有全部使用](https://lsky.ao.abc/i/2023/11/21/655c63e9bcb76.png)\n\n```shell\n# 查看现有的卷组\nsudo vgdisplay\n# 扩展现有的逻辑卷\nsudo lvextend -l +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv\n# 重新计算逻辑卷大小\nsudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv\n```\n\n## 安装oh-my-zsh\n\n```shell\n# 安装zsh\nsudo apt install zsh -y\n# 切换zsh\nchsh -s /bin/zsh\n# 安装oh-my-zsh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n# 安装插件\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\ngit clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/fast-syntax-highlighting\n\ngit clone https://github.com/marlonrichert/zsh-autocomplete.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autocomplete\n```\n\n## 安装nvm\n\n```shell\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash\n# 设置淘宝源\nvim ~/.zshrc\n\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\n\nvim ~/.npmrc\n\nregistry https://registry.npm.taobao.org\n\n# npm 安装全局插件\nnpm i -g prettier eslint stylelint pnpm yarn\n```\n\n## 安装Docker\n\n## 参考文章\n\n- [1.1.1.1 CloudFlare-Ubuntu](https://pkg.cloudflareclient.com/)\n","slug":"ubuntu-server-install-init","published":1,"updated":"2024-02-01T16:21:19.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4f000hj6yce5x156no","content":"<h2 id=\"安装CloudFlare\"><a href=\"#安装CloudFlare\" class=\"headerlink\" title=\"安装CloudFlare\"></a>安装CloudFlare</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Add cloudflare gpg key</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://pkg.cloudflareclient.com/pubkey.gpg <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> gpg <span class=\"token parameter variable\">--yes</span> <span class=\"token parameter variable\">--dearmor</span> <span class=\"token parameter variable\">--output</span> /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg\n\n\n<span class=\"token comment\"># Add this repo to your apt repositories</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release <span class=\"token parameter variable\">-cs</span><span class=\"token variable\">)</span></span> main\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/cloudflare-client.list\n\n\n<span class=\"token comment\"># Install</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> cloudflare-warp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update <span class=\"token parameter variable\">-y</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade <span class=\"token parameter variable\">-y</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"去掉碍眼的提示\"><a href=\"#去掉碍眼的提示\" class=\"headerlink\" title=\"去掉碍眼的提示\"></a>去掉碍眼的提示</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">No containers need to be restarted.\n\nNo user sessions are running outdated binaries.\n\nNo VM guests are running outdated hypervisor <span class=\"token punctuation\">(</span>qemu<span class=\"token punctuation\">)</span> binaries on this host.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge needrestart <span class=\"token parameter variable\">-y</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"使用全部磁盘空间\"><a href=\"#使用全部磁盘空间\" class=\"headerlink\" title=\"使用全部磁盘空间\"></a>使用全部磁盘空间</h2><p><img src=\"https://lsky.ao.abc/i/2023/11/21/655c63e9bcb76.png\" alt=\"磁盘没有全部使用\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看现有的卷组</span>\n<span class=\"token function\">sudo</span> vgdisplay\n<span class=\"token comment\"># 扩展现有的逻辑卷</span>\n<span class=\"token function\">sudo</span> lvextend <span class=\"token parameter variable\">-l</span> +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv\n<span class=\"token comment\"># 重新计算逻辑卷大小</span>\n<span class=\"token function\">sudo</span> resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装oh-my-zsh\"><a href=\"#安装oh-my-zsh\" class=\"headerlink\" title=\"安装oh-my-zsh\"></a>安装oh-my-zsh</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装zsh</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">zsh</span> <span class=\"token parameter variable\">-y</span>\n<span class=\"token comment\"># 切换zsh</span>\nchsh <span class=\"token parameter variable\">-s</span> /bin/zsh\n<span class=\"token comment\"># 安装oh-my-zsh</span>\n<span class=\"token function\">sh</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token comment\"># 安装插件</span>\n<span class=\"token function\">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class=\"token variable\">$&#123;ZSH_CUSTOM<span class=\"token operator\">:-</span>~<span class=\"token operator\">/</span>.oh-my-zsh<span class=\"token operator\">/</span>custom&#125;</span>/plugins/zsh-autosuggestions\n\n<span class=\"token function\">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"token variable\">$&#123;ZSH_CUSTOM<span class=\"token operator\">:-</span>~<span class=\"token operator\">/</span>.oh-my-zsh<span class=\"token operator\">/</span>custom&#125;</span>/plugins/zsh-syntax-highlighting\n\n<span class=\"token function\">git</span> clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git <span class=\"token variable\">$&#123;ZSH_CUSTOM<span class=\"token operator\">:-</span>$HOME<span class=\"token operator\">/</span>.oh-my-zsh<span class=\"token operator\">/</span>custom&#125;</span>/plugins/fast-syntax-highlighting\n\n<span class=\"token function\">git</span> clone https://github.com/marlonrichert/zsh-autocomplete.git <span class=\"token variable\">$&#123;ZSH_CUSTOM<span class=\"token operator\">:-</span>$HOME<span class=\"token operator\">/</span>.oh-my-zsh<span class=\"token operator\">/</span>custom&#125;</span>/plugins/zsh-autocomplete<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span>\n<span class=\"token comment\"># 设置淘宝源</span>\n<span class=\"token function\">vim</span> ~/.zshrc\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NVM_NODEJS_ORG_MIRROR</span><span class=\"token operator\">=</span>https://npm.taobao.org/mirrors/node\n\n<span class=\"token function\">vim</span> ~/.npmrc\n\nregistry https://registry.npm.taobao.org\n\n<span class=\"token comment\"># npm 安装全局插件</span>\n<span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> prettier eslint stylelint <span class=\"token function\">pnpm</span> <span class=\"token function\">yarn</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h2><h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://pkg.cloudflareclient.com/\">1.1.1.1 CloudFlare-Ubuntu</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装CloudFlare\"><a href=\"#安装CloudFlare\" class=\"headerlink\" title=\"安装CloudFlare\"></a>安装CloudFlare</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Add cloudflare gpg key</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://pkg.cloudflareclient.com/pubkey.gpg <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> gpg <span class=\"token parameter variable\">--yes</span> <span class=\"token parameter variable\">--dearmor</span> <span class=\"token parameter variable\">--output</span> /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg\n\n\n<span class=\"token comment\"># Add this repo to your apt repositories</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ <span class=\"token variable\"><span class=\"token variable\">$(</span>lsb_release <span class=\"token parameter variable\">-cs</span><span class=\"token variable\">)</span></span> main\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/cloudflare-client.list\n\n\n<span class=\"token comment\"># Install</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> cloudflare-warp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update <span class=\"token parameter variable\">-y</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade <span class=\"token parameter variable\">-y</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"去掉碍眼的提示\"><a href=\"#去掉碍眼的提示\" class=\"headerlink\" title=\"去掉碍眼的提示\"></a>去掉碍眼的提示</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">No containers need to be restarted.\n\nNo user sessions are running outdated binaries.\n\nNo VM guests are running outdated hypervisor <span class=\"token punctuation\">(</span>qemu<span class=\"token punctuation\">)</span> binaries on this host.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge needrestart <span class=\"token parameter variable\">-y</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"使用全部磁盘空间\"><a href=\"#使用全部磁盘空间\" class=\"headerlink\" title=\"使用全部磁盘空间\"></a>使用全部磁盘空间</h2><p><img src=\"https://lsky.ao.abc/i/2023/11/21/655c63e9bcb76.png\" alt=\"磁盘没有全部使用\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看现有的卷组</span>\n<span class=\"token function\">sudo</span> vgdisplay\n<span class=\"token comment\"># 扩展现有的逻辑卷</span>\n<span class=\"token function\">sudo</span> lvextend <span class=\"token parameter variable\">-l</span> +100%FREE  /dev/mapper/ubuntu--vg-ubuntu--lv\n<span class=\"token comment\"># 重新计算逻辑卷大小</span>\n<span class=\"token function\">sudo</span> resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装oh-my-zsh\"><a href=\"#安装oh-my-zsh\" class=\"headerlink\" title=\"安装oh-my-zsh\"></a>安装oh-my-zsh</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装zsh</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">zsh</span> <span class=\"token parameter variable\">-y</span>\n<span class=\"token comment\"># 切换zsh</span>\nchsh <span class=\"token parameter variable\">-s</span> /bin/zsh\n<span class=\"token comment\"># 安装oh-my-zsh</span>\n<span class=\"token function\">sh</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token comment\"># 安装插件</span>\n<span class=\"token function\">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class=\"token variable\">$&#123;ZSH_CUSTOM<span class=\"token operator\">:-</span>~<span class=\"token operator\">/</span>.oh-my-zsh<span class=\"token operator\">/</span>custom&#125;</span>/plugins/zsh-autosuggestions\n\n<span class=\"token function\">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"token variable\">$&#123;ZSH_CUSTOM<span class=\"token operator\">:-</span>~<span class=\"token operator\">/</span>.oh-my-zsh<span class=\"token operator\">/</span>custom&#125;</span>/plugins/zsh-syntax-highlighting\n\n<span class=\"token function\">git</span> clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git <span class=\"token variable\">$&#123;ZSH_CUSTOM<span class=\"token operator\">:-</span>$HOME<span class=\"token operator\">/</span>.oh-my-zsh<span class=\"token operator\">/</span>custom&#125;</span>/plugins/fast-syntax-highlighting\n\n<span class=\"token function\">git</span> clone https://github.com/marlonrichert/zsh-autocomplete.git <span class=\"token variable\">$&#123;ZSH_CUSTOM<span class=\"token operator\">:-</span>$HOME<span class=\"token operator\">/</span>.oh-my-zsh<span class=\"token operator\">/</span>custom&#125;</span>/plugins/zsh-autocomplete<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span>\n<span class=\"token comment\"># 设置淘宝源</span>\n<span class=\"token function\">vim</span> ~/.zshrc\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NVM_NODEJS_ORG_MIRROR</span><span class=\"token operator\">=</span>https://npm.taobao.org/mirrors/node\n\n<span class=\"token function\">vim</span> ~/.npmrc\n\nregistry https://registry.npm.taobao.org\n\n<span class=\"token comment\"># npm 安装全局插件</span>\n<span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> prettier eslint stylelint <span class=\"token function\">pnpm</span> <span class=\"token function\">yarn</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h2><h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://pkg.cloudflareclient.com/\">1.1.1.1 CloudFlare-Ubuntu</a></li>\n</ul>\n"},{"title":"Ubuntu 设置时区","date":"2024-02-01T16:17:18.000Z","_content":"## 查看时区\n\ntimedatectl是一个命令行工具，它允许你查看或者修改系统的时间和日期。它在所有现代的基于System的 Linux系统中都可以使用，包括Ubuntu20.04。\n\n想要打印当前系统时区，不带参数运行timedatectl。\n\n```shell\nsudo timedatectl\n```\n\n下面的输出显示系统时区被设置为\"UTC\":\n![655dee1461a02](655dee1461a02.png)\n系统时区通过链接文件/etc/localtime配置，该链接指向/usr/share/zoneinfo目录下的一个二进制时区标识文件。另外一个检查时区的方法就是显示这个链接文件指向的实际路径，使用ls命令：\n![655dee6edb536](655dee6edb536.png)\n系统的时区同时也被写入/etc/timezone文件：\n![655dee9f3d7df](655dee9f3d7df.png)\n\n## 使用timedatectl命令修改时区\n\n```shell\nsudo timedatectl list-timezones\n\nsudo timedatectl set-timezone\n```\n\n![655def839b174](655def839b174.png)\n","source":"_posts/ubuntu-time-zone.md","raw":"---\ntitle: Ubuntu 设置时区\ndate: 2024-02-02 00:17:18\ntags:\n---\n## 查看时区\n\ntimedatectl是一个命令行工具，它允许你查看或者修改系统的时间和日期。它在所有现代的基于System的 Linux系统中都可以使用，包括Ubuntu20.04。\n\n想要打印当前系统时区，不带参数运行timedatectl。\n\n```shell\nsudo timedatectl\n```\n\n下面的输出显示系统时区被设置为\"UTC\":\n![655dee1461a02](655dee1461a02.png)\n系统时区通过链接文件/etc/localtime配置，该链接指向/usr/share/zoneinfo目录下的一个二进制时区标识文件。另外一个检查时区的方法就是显示这个链接文件指向的实际路径，使用ls命令：\n![655dee6edb536](655dee6edb536.png)\n系统的时区同时也被写入/etc/timezone文件：\n![655dee9f3d7df](655dee9f3d7df.png)\n\n## 使用timedatectl命令修改时区\n\n```shell\nsudo timedatectl list-timezones\n\nsudo timedatectl set-timezone\n```\n\n![655def839b174](655def839b174.png)\n","slug":"ubuntu-time-zone","published":1,"updated":"2024-02-01T16:21:19.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cls3vup4g000ij6yc0382fdei","content":"<h2 id=\"查看时区\"><a href=\"#查看时区\" class=\"headerlink\" title=\"查看时区\"></a>查看时区</h2><p>timedatectl是一个命令行工具，它允许你查看或者修改系统的时间和日期。它在所有现代的基于System的 Linux系统中都可以使用，包括Ubuntu20.04。</p>\n<p>想要打印当前系统时区，不带参数运行timedatectl。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> timedatectl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>下面的输出显示系统时区被设置为”UTC”:<br><img src=\"/2024/02/02/ubuntu-time-zone/655dee1461a02.png\" alt=\"655dee1461a02\"><br>系统时区通过链接文件&#x2F;etc&#x2F;localtime配置，该链接指向&#x2F;usr&#x2F;share&#x2F;zoneinfo目录下的一个二进制时区标识文件。另外一个检查时区的方法就是显示这个链接文件指向的实际路径，使用ls命令：<br><img src=\"/2024/02/02/ubuntu-time-zone/655dee6edb536.png\" alt=\"655dee6edb536\"><br>系统的时区同时也被写入&#x2F;etc&#x2F;timezone文件：<br><img src=\"/2024/02/02/ubuntu-time-zone/655dee9f3d7df.png\" alt=\"655dee9f3d7df\"></p>\n<h2 id=\"使用timedatectl命令修改时区\"><a href=\"#使用timedatectl命令修改时区\" class=\"headerlink\" title=\"使用timedatectl命令修改时区\"></a>使用timedatectl命令修改时区</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> timedatectl list-timezones\n\n<span class=\"token function\">sudo</span> timedatectl set-timezone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655def839b174.png\" alt=\"655def839b174\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"查看时区\"><a href=\"#查看时区\" class=\"headerlink\" title=\"查看时区\"></a>查看时区</h2><p>timedatectl是一个命令行工具，它允许你查看或者修改系统的时间和日期。它在所有现代的基于System的 Linux系统中都可以使用，包括Ubuntu20.04。</p>\n<p>想要打印当前系统时区，不带参数运行timedatectl。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> timedatectl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>下面的输出显示系统时区被设置为”UTC”:<br><img src=\"/2024/02/02/ubuntu-time-zone/655dee1461a02.png\" alt=\"655dee1461a02\"><br>系统时区通过链接文件&#x2F;etc&#x2F;localtime配置，该链接指向&#x2F;usr&#x2F;share&#x2F;zoneinfo目录下的一个二进制时区标识文件。另外一个检查时区的方法就是显示这个链接文件指向的实际路径，使用ls命令：<br><img src=\"/2024/02/02/ubuntu-time-zone/655dee6edb536.png\" alt=\"655dee6edb536\"><br>系统的时区同时也被写入&#x2F;etc&#x2F;timezone文件：<br><img src=\"/2024/02/02/ubuntu-time-zone/655dee9f3d7df.png\" alt=\"655dee9f3d7df\"></p>\n<h2 id=\"使用timedatectl命令修改时区\"><a href=\"#使用timedatectl命令修改时区\" class=\"headerlink\" title=\"使用timedatectl命令修改时区\"></a>使用timedatectl命令修改时区</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> timedatectl list-timezones\n\n<span class=\"token function\">sudo</span> timedatectl set-timezone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"/2024/02/02/ubuntu-time-zone/655def839b174.png\" alt=\"655def839b174\"></p>\n"}],"PostAsset":[{"_id":"source/_posts/javascript-element-scrolls-to-bottom/65581379c3845.png","post":"cls3vup4a0004j6ychy2g81p5","slug":"65581379c3845.png","modified":1,"renderable":1},{"_id":"source/_posts/macos-docker-mysql8/655633ee86ff7.png","post":"cls3vup4b0007j6yc1dch3d1b","slug":"655633ee86ff7.png","modified":1,"renderable":1},{"_id":"source/_posts/macos-docker-mysql8/6556341408363.png","post":"cls3vup4b0007j6yc1dch3d1b","slug":"6556341408363.png","modified":1,"renderable":1},{"_id":"source/_posts/macos-docker-mysql8/6556405f81268.png","post":"cls3vup4b0007j6yc1dch3d1b","slug":"6556405f81268.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/655df1d56c1df.png","post":"cls3vup4d000dj6ycfb45ae6y","slug":"655df1d56c1df.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/655e19260504a.png","post":"cls3vup4d000dj6ycfb45ae6y","slug":"655e19260504a.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-cloudflare-proxy-port/warp-yxip.sh","post":"cls3vup4d000dj6ycfb45ae6y","slug":"warp-yxip.sh","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-time-zone/655dee1461a02.png","post":"cls3vup4g000ij6yc0382fdei","slug":"655dee1461a02.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-time-zone/655dee6edb536.png","post":"cls3vup4g000ij6yc0382fdei","slug":"655dee6edb536.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-time-zone/655dee9f3d7df.png","post":"cls3vup4g000ij6yc0382fdei","slug":"655dee9f3d7df.png","modified":1,"renderable":1},{"_id":"source/_posts/ubuntu-time-zone/655def839b174.png","post":"cls3vup4g000ij6yc0382fdei","slug":"655def839b174.png","modified":1,"renderable":1}],"PostCategory":[],"PostTag":[],"Tag":[]}}